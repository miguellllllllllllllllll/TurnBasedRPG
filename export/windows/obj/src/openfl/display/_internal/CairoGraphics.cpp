// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoImageSurface_CairoImageSurface_Impl_
#include <lime/graphics/cairo/_CairoImageSurface/CairoImageSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoPattern_CairoPattern_Impl_
#include <lime/graphics/cairo/_CairoPattern/CairoPattern_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool
#include <lime/utils/ObjectPool.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_CairoRenderer
#include <openfl/display/CairoRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectRenderer
#include <openfl/display/DisplayObjectRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display__internal_CairoGraphics
#include <openfl/display/_internal/CairoGraphics.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandBuffer
#include <openfl/display/_internal/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandReader
#include <openfl/display/_internal/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandType
#include <openfl/display/_internal/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl_display__internal_ShaderBuffer
#include <openfl/display/_internal/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_62_closePath,"openfl.display._internal.CairoGraphics","closePath",0x1c630b46,"openfl.display._internal.CairoGraphics.closePath","openfl/display/_internal/CairoGraphics.hx",62,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_86_createGradientPattern,"openfl.display._internal.CairoGraphics","createGradientPattern",0x2e8d9ded,"openfl.display._internal.CairoGraphics.createGradientPattern","openfl/display/_internal/CairoGraphics.hx",86,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_159_createImagePattern,"openfl.display._internal.CairoGraphics","createImagePattern",0xd4969668,"openfl.display._internal.CairoGraphics.createImagePattern","openfl/display/_internal/CairoGraphics.hx",159,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_174_drawRoundRect,"openfl.display._internal.CairoGraphics","drawRoundRect",0x0d2e8237,"openfl.display._internal.CairoGraphics.drawRoundRect","openfl/display/_internal/CairoGraphics.hx",174,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_206_endFill,"openfl.display._internal.CairoGraphics","endFill",0xd8fcf987,"openfl.display._internal.CairoGraphics.endFill","openfl/display/_internal/CairoGraphics.hx",206,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_213_endStroke,"openfl.display._internal.CairoGraphics","endStroke",0x5959a7bc,"openfl.display._internal.CairoGraphics.endStroke","openfl/display/_internal/CairoGraphics.hx",213,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_222_hitTest,"openfl.display._internal.CairoGraphics","hitTest",0x959bd1ce,"openfl.display._internal.CairoGraphics.hitTest","openfl/display/_internal/CairoGraphics.hx",222,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_437_isCCW,"openfl.display._internal.CairoGraphics","isCCW",0x84e15156,"openfl.display._internal.CairoGraphics.isCCW","openfl/display/_internal/CairoGraphics.hx",437,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_441_normalizeUVT,"openfl.display._internal.CairoGraphics","normalizeUVT",0xe93d673d,"openfl.display._internal.CairoGraphics.normalizeUVT","openfl/display/_internal/CairoGraphics.hx",441,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_482_playCommands,"openfl.display._internal.CairoGraphics","playCommands",0xebfd0cb3,"openfl.display._internal.CairoGraphics.playCommands","openfl/display/_internal/CairoGraphics.hx",482,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_1126_quadraticCurveTo,"openfl.display._internal.CairoGraphics","quadraticCurveTo",0x52eadd69,"openfl.display._internal.CairoGraphics.quadraticCurveTo","openfl/display/_internal/CairoGraphics.hx",1126,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_1149_render,"openfl.display._internal.CairoGraphics","render",0x66653ded,"openfl.display._internal.CairoGraphics.render","openfl/display/_internal/CairoGraphics.hx",1149,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_1457_renderMask,"openfl.display._internal.CairoGraphics","renderMask",0x176ea579,"openfl.display._internal.CairoGraphics.renderMask","openfl/display/_internal/CairoGraphics.hx",1457,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_37_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",37,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_40_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",40,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_41_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",41,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_47_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",47,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_56_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",56,0x56494baa)
HX_LOCAL_STACK_FRAME(_hx_pos_a32397cfa230be0c_58_boot,"openfl.display._internal.CairoGraphics","boot",0x008cb309,"openfl.display._internal.CairoGraphics.boot","openfl/display/_internal/CairoGraphics.hx",58,0x56494baa)
namespace openfl{
namespace display{
namespace _internal{

void CairoGraphics_obj::__construct() { }

Dynamic CairoGraphics_obj::__CreateEmpty() { return new CairoGraphics_obj; }

void *CairoGraphics_obj::_hx_vtable = 0;

Dynamic CairoGraphics_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CairoGraphics_obj > _hx_result = new CairoGraphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CairoGraphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3a660be9;
}

Float CairoGraphics_obj::SIN45;

Float CairoGraphics_obj::TAN22;

bool CairoGraphics_obj::allowSmoothing;

 ::openfl::display::BitmapData CairoGraphics_obj::bitmapFill;

bool CairoGraphics_obj::bitmapRepeat;

 ::openfl::geom::Rectangle CairoGraphics_obj::bounds;

 ::lime::graphics::cairo::Cairo CairoGraphics_obj::cairo;

 ::openfl::display::_internal::DrawCommandBuffer CairoGraphics_obj::fillCommands;

 ::Dynamic CairoGraphics_obj::fillPattern;

 ::openfl::geom::Matrix CairoGraphics_obj::fillPatternMatrix;

 ::openfl::display::Graphics CairoGraphics_obj::graphics;

bool CairoGraphics_obj::hasFill;

bool CairoGraphics_obj::hasStroke;

bool CairoGraphics_obj::hitTesting;

 ::openfl::geom::Matrix CairoGraphics_obj::inversePendingMatrix;

 ::openfl::geom::Matrix CairoGraphics_obj::pendingMatrix;

 ::openfl::display::_internal::DrawCommandBuffer CairoGraphics_obj::strokeCommands;

 ::Dynamic CairoGraphics_obj::strokePattern;

 ::lime::math::Matrix3 CairoGraphics_obj::tempMatrix3;

Float CairoGraphics_obj::worldAlpha;

void CairoGraphics_obj::closePath(::hx::Null< bool >  __o_strokeBefore){
            		bool strokeBefore = __o_strokeBefore.Default(false);
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_62_closePath)
HXLINE(  63)		if (::hx::IsNull( ::openfl::display::_internal::CairoGraphics_obj::strokePattern )) {
HXLINE(  65)			return;
            		}
HXLINE(  68)		if (!(strokeBefore)) {
HXLINE(  70)			::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  73)		::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::strokePattern);
HXLINE(  74)		if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE(  74)			::openfl::display::_internal::CairoGraphics_obj::cairo->strokePreserve();
            		}
HXLINE(  76)		if (strokeBefore) {
HXLINE(  78)			::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  81)		::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CairoGraphics_obj,closePath,(void))

 ::Dynamic CairoGraphics_obj::createGradientPattern( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_86_createGradientPattern)
HXLINE(  87)		 ::Dynamic pattern = null();
HXDLIN(  87)		 ::openfl::geom::Point point = null();
HXDLIN(  87)		 ::openfl::geom::Point point2 = null();
HXDLIN(  87)		bool releaseMatrix = false;
HXLINE(  92)		if (::hx::IsNull( matrix )) {
HXLINE(  94)			matrix = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE(  95)			releaseMatrix = true;
            		}
HXLINE(  98)		 ::Dynamic _hx_switch_0 = type;
            		if (  (_hx_switch_0==0) ){
HXLINE( 111)			point = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 112)			point->setTo(((Float)-819.2),( (Float)(0) ));
HXLINE( 113)			{
HXLINE( 113)				Float px = point->x;
HXDLIN( 113)				Float py = point->y;
HXDLIN( 113)				point->x = (((px * matrix->a) + (py * matrix->c)) + matrix->tx);
HXDLIN( 113)				point->y = (((px * matrix->b) + (py * matrix->d)) + matrix->ty);
            			}
HXLINE( 115)			point2 = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 116)			point2->setTo(((Float)819.2),( (Float)(0) ));
HXLINE( 117)			{
HXLINE( 117)				Float px1 = point2->x;
HXDLIN( 117)				Float py1 = point2->y;
HXDLIN( 117)				point2->x = (((px1 * matrix->a) + (py1 * matrix->c)) + matrix->tx);
HXDLIN( 117)				point2->y = (((px1 * matrix->b) + (py1 * matrix->d)) + matrix->ty);
            			}
HXLINE( 119)			 ::openfl::geom::Point point1 = point;
HXDLIN( 119)			point1->x = (point1->x + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 120)			 ::openfl::geom::Point point21 = point2;
HXDLIN( 120)			point21->x = (point21->x + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 121)			 ::openfl::geom::Point point3 = point;
HXDLIN( 121)			point3->y = (point3->y + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 122)			 ::openfl::geom::Point point22 = point2;
HXDLIN( 122)			point22->y = (point22->y + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 124)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createLinear(point->x,point->y,point2->x,point2->y);
HXLINE( 110)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==1) ){
HXLINE( 101)			point = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 102)			point->setTo(((Float)1638.4),( (Float)(0) ));
HXLINE( 103)			{
HXLINE( 103)				Float px2 = point->x;
HXDLIN( 103)				Float py2 = point->y;
HXDLIN( 103)				point->x = (((px2 * matrix->a) + (py2 * matrix->c)) + matrix->tx);
HXDLIN( 103)				point->y = (((px2 * matrix->b) + (py2 * matrix->d)) + matrix->ty);
            			}
HXLINE( 105)			Float x = (matrix->tx + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 106)			Float y = (matrix->ty + ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 108)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRadial(x,y,( (Float)(0) ),x,y,::Math_obj::abs(((point->x - matrix->tx) / ( (Float)(2) ))));
HXLINE( 100)			goto _hx_goto_1;
            		}
            		_hx_goto_1:;
HXLINE( 127)		int rgb;
HXDLIN( 127)		Float alpha;
HXDLIN( 127)		Float r;
HXDLIN( 127)		Float g;
HXDLIN( 127)		Float b;
HXDLIN( 127)		Float ratio;
HXLINE( 129)		{
HXLINE( 129)			int _g = 0;
HXDLIN( 129)			int _g1 = colors->length;
HXDLIN( 129)			while((_g < _g1)){
HXLINE( 129)				_g = (_g + 1);
HXDLIN( 129)				int i = (_g - 1);
HXLINE( 131)				rgb = colors->__get(i);
HXLINE( 132)				alpha = alphas->__get(i);
HXLINE( 133)				r = (( (Float)(::hx::UShr((rgb & 16711680),16)) ) / ( (Float)(255) ));
HXLINE( 134)				g = (( (Float)(::hx::UShr((rgb & 65280),8)) ) / ( (Float)(255) ));
HXLINE( 135)				b = (( (Float)((rgb & 255)) ) / ( (Float)(255) ));
HXLINE( 137)				ratio = (( (Float)(ratios->__get(i)) ) / ( (Float)(255) ));
HXLINE( 138)				if ((ratio < 0)) {
HXLINE( 138)					ratio = ( (Float)(0) );
            				}
HXLINE( 139)				if ((ratio > 1)) {
HXLINE( 139)					ratio = ( (Float)(1) );
            				}
HXLINE( 141)				::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::addColorStopRGBA(pattern,ratio,r,g,b,alpha);
            			}
            		}
HXLINE( 144)		if (::hx::IsNotNull( point )) {
HXLINE( 144)			::openfl::geom::Point_obj::_hx___pool->release(point);
            		}
HXLINE( 145)		if (::hx::IsNotNull( point2 )) {
HXLINE( 145)			::openfl::geom::Point_obj::_hx___pool->release(point2);
            		}
HXLINE( 146)		if (releaseMatrix) {
HXLINE( 146)			::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            		}
HXLINE( 148)		 ::lime::math::Matrix3 mat = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_matrix(pattern);
HXLINE( 150)		mat->tx = ::openfl::display::_internal::CairoGraphics_obj::bounds->x;
HXLINE( 151)		mat->ty = ::openfl::display::_internal::CairoGraphics_obj::bounds->y;
HXLINE( 153)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(pattern,mat);
HXLINE( 155)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(CairoGraphics_obj,createGradientPattern,return )

 ::Dynamic CairoGraphics_obj::createImagePattern( ::openfl::display::BitmapData bitmapFill, ::openfl::geom::Matrix matrix,bool bitmapRepeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_159_createImagePattern)
HXLINE( 160)		 ::Dynamic pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createForSurface(bitmapFill->getSurface());
HXLINE( 161)		int _hx_tmp;
HXDLIN( 161)		bool _hx_tmp1;
HXDLIN( 161)		if (smooth) {
HXLINE( 161)			_hx_tmp1 = ::openfl::display::_internal::CairoGraphics_obj::allowSmoothing;
            		}
            		else {
HXLINE( 161)			_hx_tmp1 = false;
            		}
HXDLIN( 161)		if (_hx_tmp1) {
HXLINE( 161)			_hx_tmp = 1;
            		}
            		else {
HXLINE( 161)			_hx_tmp = 3;
            		}
HXDLIN( 161)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_filter(pattern,_hx_tmp);
HXLINE( 163)		if (bitmapRepeat) {
HXLINE( 165)			::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(pattern,1);
            		}
HXLINE( 168)		::openfl::display::_internal::CairoGraphics_obj::fillPatternMatrix = matrix;
HXLINE( 170)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,createImagePattern,return )

void CairoGraphics_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_174_drawRoundRect)
HXLINE( 175)		if (::hx::IsNull( ellipseHeight )) {
HXLINE( 175)			ellipseHeight = ellipseWidth;
            		}
HXLINE( 177)		ellipseWidth = (ellipseWidth * ((Float)0.5));
HXLINE( 178)		ellipseHeight = (ellipseHeight * ((Float)0.5));
HXLINE( 180)		if ((ellipseWidth > (width / ( (Float)(2) )))) {
HXLINE( 180)			ellipseWidth = (width / ( (Float)(2) ));
            		}
HXLINE( 181)		if (::hx::IsGreater( ellipseHeight,(height / ( (Float)(2) )) )) {
HXLINE( 181)			ellipseHeight = (height / ( (Float)(2) ));
            		}
HXLINE( 183)		Float xe = (x + width);
HXDLIN( 183)		Float ye = (y + height);
HXDLIN( 183)		Float cx1 = (-(ellipseWidth) + (ellipseWidth * ::openfl::display::_internal::CairoGraphics_obj::SIN45));
HXDLIN( 183)		Float cx2 = (-(ellipseWidth) + (ellipseWidth * ::openfl::display::_internal::CairoGraphics_obj::TAN22));
HXDLIN( 183)		Float cy1 = (-(ellipseHeight) + (( (Float)(ellipseHeight) ) * ::openfl::display::_internal::CairoGraphics_obj::SIN45));
HXDLIN( 183)		Float cy2 = (-(ellipseHeight) + (( (Float)(ellipseHeight) ) * ::openfl::display::_internal::CairoGraphics_obj::TAN22));
HXLINE( 190)		::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(xe,(ye - ( (Float)(ellipseHeight) )));
HXLINE( 191)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo(xe,(ye + cy2),(xe + cx1),(ye + cy1));
HXLINE( 192)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((xe + cx2),ye,(xe - ellipseWidth),ye);
HXLINE( 193)		::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo((x + ellipseWidth),ye);
HXLINE( 194)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((x - cx2),ye,(x - cx1),(ye + cy1));
HXLINE( 195)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo(x,(ye + cy2),x,(ye - ( (Float)(ellipseHeight) )));
HXLINE( 196)		::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(x,(y + ellipseHeight));
HXLINE( 197)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo(x,(y - cy2),(x - cx1),(y - cy1));
HXLINE( 198)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((x - cx2),y,(x + ellipseWidth),y);
HXLINE( 199)		::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo((xe - ellipseWidth),y);
HXLINE( 200)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((xe + cx2),y,(xe + cx1),(y - cy1));
HXLINE( 201)		::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo(xe,(y - cy2),xe,(y + ellipseHeight));
HXLINE( 202)		::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(xe,(ye - ( (Float)(ellipseHeight) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,drawRoundRect,(void))

void CairoGraphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_206_endFill)
HXLINE( 207)		::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE( 208)		::openfl::display::_internal::CairoGraphics_obj::playCommands(::openfl::display::_internal::CairoGraphics_obj::fillCommands,false);
HXLINE( 209)		::openfl::display::_internal::CairoGraphics_obj::fillCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endFill,(void))

void CairoGraphics_obj::endStroke(){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_213_endStroke)
HXLINE( 214)		::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE( 215)		::openfl::display::_internal::CairoGraphics_obj::playCommands(::openfl::display::_internal::CairoGraphics_obj::strokeCommands,true);
HXLINE( 216)		::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
HXLINE( 217)		::openfl::display::_internal::CairoGraphics_obj::strokeCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endStroke,(void))

bool CairoGraphics_obj::hitTest( ::openfl::display::Graphics graphics,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_222_hitTest)
HXLINE( 224)		::openfl::display::_internal::CairoGraphics_obj::graphics = graphics;
HXLINE( 225)		::openfl::display::_internal::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE( 227)		bool _hx_tmp;
HXDLIN( 227)		bool _hx_tmp1;
HXDLIN( 227)		bool _hx_tmp2;
HXDLIN( 227)		bool _hx_tmp3;
HXDLIN( 227)		if ((graphics->_hx___commands->get_length() != 0)) {
HXLINE( 227)			_hx_tmp3 = ::hx::IsNull( ::openfl::display::_internal::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE( 227)			_hx_tmp3 = true;
            		}
HXDLIN( 227)		if (!(_hx_tmp3)) {
HXLINE( 227)			_hx_tmp2 = (::openfl::display::_internal::CairoGraphics_obj::bounds->width == 0);
            		}
            		else {
HXLINE( 227)			_hx_tmp2 = true;
            		}
HXDLIN( 227)		if (!(_hx_tmp2)) {
HXLINE( 227)			_hx_tmp1 = (::openfl::display::_internal::CairoGraphics_obj::bounds->height == 0);
            		}
            		else {
HXLINE( 227)			_hx_tmp1 = true;
            		}
HXDLIN( 227)		if (!(_hx_tmp1)) {
HXLINE( 227)			_hx_tmp = !(::openfl::display::_internal::CairoGraphics_obj::bounds->contains(x,y));
            		}
            		else {
HXLINE( 227)			_hx_tmp = true;
            		}
HXDLIN( 227)		if (_hx_tmp) {
HXLINE( 229)			::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 230)			return false;
            		}
            		else {
HXLINE( 234)			::openfl::display::_internal::CairoGraphics_obj::hitTesting = true;
HXLINE( 236)			x = (x - ::openfl::display::_internal::CairoGraphics_obj::bounds->x);
HXLINE( 237)			y = (y - ::openfl::display::_internal::CairoGraphics_obj::bounds->y);
HXLINE( 239)			if (::hx::IsNull( graphics->_hx___cairo )) {
HXLINE( 241)				 ::openfl::display::BitmapData bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,::Math_obj::floor(::Math_obj::max(( (Float)(1) ),::openfl::display::_internal::CairoGraphics_obj::bounds->width)),::Math_obj::floor(::Math_obj::max(( (Float)(1) ),::openfl::display::_internal::CairoGraphics_obj::bounds->height)),true,0);
HXLINE( 242)				 ::Dynamic surface = bitmap->getSurface();
HXLINE( 243)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface);
            			}
HXLINE( 247)			::openfl::display::_internal::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE( 249)			::openfl::display::_internal::CairoGraphics_obj::fillCommands->clear();
HXLINE( 250)			::openfl::display::_internal::CairoGraphics_obj::strokeCommands->clear();
HXLINE( 252)			::openfl::display::_internal::CairoGraphics_obj::hasFill = false;
HXLINE( 253)			::openfl::display::_internal::CairoGraphics_obj::hasStroke = false;
HXLINE( 255)			::openfl::display::_internal::CairoGraphics_obj::fillPattern = null();
HXLINE( 256)			::openfl::display::_internal::CairoGraphics_obj::strokePattern = null();
HXLINE( 258)			::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE( 259)			::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(1);
HXLINE( 261)			 ::openfl::display::_internal::DrawCommandReader data =  ::openfl::display::_internal::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE( 263)			{
HXLINE( 263)				int _g = 0;
HXDLIN( 263)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN( 263)				while((_g < _g1->length)){
HXLINE( 263)					 ::openfl::display::_internal::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::display::_internal::DrawCommandType >();
HXDLIN( 263)					_g = (_g + 1);
HXLINE( 265)					switch((int)(type->_hx_getIndex())){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE( 324)							::openfl::display::_internal::CairoGraphics_obj::endFill();
HXLINE( 326)							bool _hx_tmp4;
HXDLIN( 326)							if (::openfl::display::_internal::CairoGraphics_obj::hasFill) {
HXLINE( 326)								_hx_tmp4 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 326)								_hx_tmp4 = false;
            							}
HXDLIN( 326)							if (_hx_tmp4) {
HXLINE( 328)								data->destroy();
HXLINE( 329)								::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 330)								return true;
            							}
HXLINE( 333)							::openfl::display::_internal::CairoGraphics_obj::endStroke();
HXLINE( 335)							bool _hx_tmp5;
HXDLIN( 335)							if (::openfl::display::_internal::CairoGraphics_obj::hasStroke) {
HXLINE( 335)								_hx_tmp5 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 335)								_hx_tmp5 = false;
            							}
HXDLIN( 335)							if (_hx_tmp5) {
HXLINE( 337)								data->destroy();
HXLINE( 338)								::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 339)								return true;
            							}
HXLINE( 342)							if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE( 344)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data1 = data;
HXDLIN( 344)										data1->oPos = (data1->oPos + 2);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data2 = data;
HXDLIN( 344)										data2->bPos = (data2->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data3 = data;
HXDLIN( 344)										data3->iPos = (data3->iPos + 1);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data4 = data;
HXDLIN( 344)										data4->fPos = (data4->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data5 = data;
HXDLIN( 344)										data5->oPos = (data5->oPos + 4);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data6 = data;
HXDLIN( 344)										data6->iiPos = (data6->iiPos + 2);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data7 = data;
HXDLIN( 344)										data7->ffPos = (data7->ffPos + 1);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data8 = data;
HXDLIN( 344)										data8->fPos = (data8->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data9 = data;
HXDLIN( 344)										data9->oPos = (data9->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data10 = data;
HXDLIN( 344)										data10->fPos = (data10->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data11 = data;
HXDLIN( 344)										data11->fPos = (data11->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data12 = data;
HXDLIN( 344)										data12->fPos = (data12->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data13 = data;
HXDLIN( 344)										data13->fPos = (data13->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data14 = data;
HXDLIN( 344)										data14->oPos = (data14->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data15 = data;
HXDLIN( 344)										data15->fPos = (data15->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data16 = data;
HXDLIN( 344)										data16->fPos = (data16->fPos + 5);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data17 = data;
HXDLIN( 344)										data17->oPos = (data17->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data18 = data;
HXDLIN( 344)										data18->oPos = (data18->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data19 = data;
HXDLIN( 344)										data19->oPos = (data19->oPos + 2);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data20 = data;
HXDLIN( 344)										data20->bPos = (data20->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data21 = data;
HXDLIN( 344)										data21->oPos = (data21->oPos + 4);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data22 = data;
HXDLIN( 344)										data22->iiPos = (data22->iiPos + 2);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data23 = data;
HXDLIN( 344)										data23->ffPos = (data23->ffPos + 1);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data24 = data;
HXDLIN( 344)										data24->fPos = (data24->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data25 = data;
HXDLIN( 344)										data25->oPos = (data25->oPos + 4);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data26 = data;
HXDLIN( 344)										data26->iPos = (data26->iPos + 1);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data27 = data;
HXDLIN( 344)										data27->fPos = (data27->fPos + 2);
HXDLIN( 344)										 ::openfl::display::_internal::DrawCommandReader data28 = data;
HXDLIN( 344)										data28->bPos = (data28->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data29 = data;
HXDLIN( 344)										data29->fPos = (data29->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data30 = data;
HXDLIN( 344)										data30->fPos = (data30->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data31 = data;
HXDLIN( 344)										data31->oPos = (data31->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE( 344)										 ::openfl::display::_internal::DrawCommandReader data32 = data;
HXDLIN( 344)										data32->oPos = (data32->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE( 344)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 344)								 ::openfl::display::_internal::DrawCommandReader c = data;
HXLINE( 345)								::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginBitmapFill(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
HXLINE( 346)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginBitmapFill(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
            							}
            							else {
HXLINE( 348)								if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE( 350)									switch((int)(data->prev->_hx_getIndex())){
            										case (int)0: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data33 = data;
HXDLIN( 350)											data33->oPos = (data33->oPos + 2);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data34 = data;
HXDLIN( 350)											data34->bPos = (data34->bPos + 2);
            										}
            										break;
            										case (int)1: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data35 = data;
HXDLIN( 350)											data35->iPos = (data35->iPos + 1);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data36 = data;
HXDLIN( 350)											data36->fPos = (data36->fPos + 1);
            										}
            										break;
            										case (int)2: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data37 = data;
HXDLIN( 350)											data37->oPos = (data37->oPos + 4);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data38 = data;
HXDLIN( 350)											data38->iiPos = (data38->iiPos + 2);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data39 = data;
HXDLIN( 350)											data39->ffPos = (data39->ffPos + 1);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data40 = data;
HXDLIN( 350)											data40->fPos = (data40->fPos + 1);
            										}
            										break;
            										case (int)3: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data41 = data;
HXDLIN( 350)											data41->oPos = (data41->oPos + 1);
            										}
            										break;
            										case (int)4: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data42 = data;
HXDLIN( 350)											data42->fPos = (data42->fPos + 6);
            										}
            										break;
            										case (int)5: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data43 = data;
HXDLIN( 350)											data43->fPos = (data43->fPos + 4);
            										}
            										break;
            										case (int)6: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data44 = data;
HXDLIN( 350)											data44->fPos = (data44->fPos + 3);
            										}
            										break;
            										case (int)7: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data45 = data;
HXDLIN( 350)											data45->fPos = (data45->fPos + 4);
            										}
            										break;
            										case (int)8: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data46 = data;
HXDLIN( 350)											data46->oPos = (data46->oPos + 3);
            										}
            										break;
            										case (int)9: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data47 = data;
HXDLIN( 350)											data47->fPos = (data47->fPos + 4);
            										}
            										break;
            										case (int)10: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data48 = data;
HXDLIN( 350)											data48->fPos = (data48->fPos + 5);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data49 = data;
HXDLIN( 350)											data49->oPos = (data49->oPos + 1);
            										}
            										break;
            										case (int)12: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data50 = data;
HXDLIN( 350)											data50->oPos = (data50->oPos + 4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data51 = data;
HXDLIN( 350)											data51->oPos = (data51->oPos + 2);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data52 = data;
HXDLIN( 350)											data52->bPos = (data52->bPos + 2);
            										}
            										break;
            										case (int)15: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data53 = data;
HXDLIN( 350)											data53->oPos = (data53->oPos + 4);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data54 = data;
HXDLIN( 350)											data54->iiPos = (data54->iiPos + 2);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data55 = data;
HXDLIN( 350)											data55->ffPos = (data55->ffPos + 1);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data56 = data;
HXDLIN( 350)											data56->fPos = (data56->fPos + 1);
            										}
            										break;
            										case (int)16: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data57 = data;
HXDLIN( 350)											data57->oPos = (data57->oPos + 4);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data58 = data;
HXDLIN( 350)											data58->iPos = (data58->iPos + 1);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data59 = data;
HXDLIN( 350)											data59->fPos = (data59->fPos + 2);
HXDLIN( 350)											 ::openfl::display::_internal::DrawCommandReader data60 = data;
HXDLIN( 350)											data60->bPos = (data60->bPos + 1);
            										}
            										break;
            										case (int)17: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data61 = data;
HXDLIN( 350)											data61->fPos = (data61->fPos + 2);
            										}
            										break;
            										case (int)18: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data62 = data;
HXDLIN( 350)											data62->fPos = (data62->fPos + 2);
            										}
            										break;
            										case (int)19: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data63 = data;
HXDLIN( 350)											data63->oPos = (data63->oPos + 1);
            										}
            										break;
            										case (int)20: {
HXLINE( 350)											 ::openfl::display::_internal::DrawCommandReader data64 = data;
HXDLIN( 350)											data64->oPos = (data64->oPos + 1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
HXLINE( 350)									data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 350)									 ::openfl::display::_internal::DrawCommandReader c1 = data;
HXLINE( 351)									::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginGradientFill(c1->buffer->o->__get(c1->oPos),c1->buffer->ii->__get(c1->iiPos).StaticCast< ::Array< int > >(),c1->buffer->ff->__get(c1->ffPos).StaticCast< ::Array< Float > >(),c1->buffer->ii->__get((c1->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c1->buffer->o->__get((c1->oPos + 1))) ),c1->buffer->o->__get((c1->oPos + 2)),c1->buffer->o->__get((c1->oPos + 3)),c1->buffer->f->__get(c1->fPos));
HXLINE( 353)									::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginGradientFill(c1->buffer->o->__get(c1->oPos),c1->buffer->ii->__get(c1->iiPos).StaticCast< ::Array< int > >(),c1->buffer->ff->__get(c1->ffPos).StaticCast< ::Array< Float > >(),c1->buffer->ii->__get((c1->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c1->buffer->o->__get((c1->oPos + 1))) ),c1->buffer->o->__get((c1->oPos + 2)),c1->buffer->o->__get((c1->oPos + 3)),c1->buffer->f->__get(c1->fPos));
            								}
            								else {
HXLINE( 356)									if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE( 358)										switch((int)(data->prev->_hx_getIndex())){
            											case (int)0: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data65 = data;
HXDLIN( 358)												data65->oPos = (data65->oPos + 2);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data66 = data;
HXDLIN( 358)												data66->bPos = (data66->bPos + 2);
            											}
            											break;
            											case (int)1: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data67 = data;
HXDLIN( 358)												data67->iPos = (data67->iPos + 1);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data68 = data;
HXDLIN( 358)												data68->fPos = (data68->fPos + 1);
            											}
            											break;
            											case (int)2: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data69 = data;
HXDLIN( 358)												data69->oPos = (data69->oPos + 4);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data70 = data;
HXDLIN( 358)												data70->iiPos = (data70->iiPos + 2);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data71 = data;
HXDLIN( 358)												data71->ffPos = (data71->ffPos + 1);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data72 = data;
HXDLIN( 358)												data72->fPos = (data72->fPos + 1);
            											}
            											break;
            											case (int)3: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data73 = data;
HXDLIN( 358)												data73->oPos = (data73->oPos + 1);
            											}
            											break;
            											case (int)4: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data74 = data;
HXDLIN( 358)												data74->fPos = (data74->fPos + 6);
            											}
            											break;
            											case (int)5: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data75 = data;
HXDLIN( 358)												data75->fPos = (data75->fPos + 4);
            											}
            											break;
            											case (int)6: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data76 = data;
HXDLIN( 358)												data76->fPos = (data76->fPos + 3);
            											}
            											break;
            											case (int)7: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data77 = data;
HXDLIN( 358)												data77->fPos = (data77->fPos + 4);
            											}
            											break;
            											case (int)8: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data78 = data;
HXDLIN( 358)												data78->oPos = (data78->oPos + 3);
            											}
            											break;
            											case (int)9: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data79 = data;
HXDLIN( 358)												data79->fPos = (data79->fPos + 4);
            											}
            											break;
            											case (int)10: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data80 = data;
HXDLIN( 358)												data80->fPos = (data80->fPos + 5);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data81 = data;
HXDLIN( 358)												data81->oPos = (data81->oPos + 1);
            											}
            											break;
            											case (int)12: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data82 = data;
HXDLIN( 358)												data82->oPos = (data82->oPos + 4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data83 = data;
HXDLIN( 358)												data83->oPos = (data83->oPos + 2);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data84 = data;
HXDLIN( 358)												data84->bPos = (data84->bPos + 2);
            											}
            											break;
            											case (int)15: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data85 = data;
HXDLIN( 358)												data85->oPos = (data85->oPos + 4);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data86 = data;
HXDLIN( 358)												data86->iiPos = (data86->iiPos + 2);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data87 = data;
HXDLIN( 358)												data87->ffPos = (data87->ffPos + 1);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data88 = data;
HXDLIN( 358)												data88->fPos = (data88->fPos + 1);
            											}
            											break;
            											case (int)16: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data89 = data;
HXDLIN( 358)												data89->oPos = (data89->oPos + 4);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data90 = data;
HXDLIN( 358)												data90->iPos = (data90->iPos + 1);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data91 = data;
HXDLIN( 358)												data91->fPos = (data91->fPos + 2);
HXDLIN( 358)												 ::openfl::display::_internal::DrawCommandReader data92 = data;
HXDLIN( 358)												data92->bPos = (data92->bPos + 1);
            											}
            											break;
            											case (int)17: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data93 = data;
HXDLIN( 358)												data93->fPos = (data93->fPos + 2);
            											}
            											break;
            											case (int)18: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data94 = data;
HXDLIN( 358)												data94->fPos = (data94->fPos + 2);
            											}
            											break;
            											case (int)19: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data95 = data;
HXDLIN( 358)												data95->oPos = (data95->oPos + 1);
            											}
            											break;
            											case (int)20: {
HXLINE( 358)												 ::openfl::display::_internal::DrawCommandReader data96 = data;
HXDLIN( 358)												data96->oPos = (data96->oPos + 1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
HXLINE( 358)										data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 358)										 ::openfl::display::_internal::DrawCommandReader c2 = data;
HXLINE( 359)										::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::display::_internal::ShaderBuffer)(c2->buffer->o->__get(c2->oPos)) ));
HXLINE( 360)										::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::display::_internal::ShaderBuffer)(c2->buffer->o->__get(c2->oPos)) ));
            									}
            									else {
HXLINE( 364)										switch((int)(data->prev->_hx_getIndex())){
            											case (int)0: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data97 = data;
HXDLIN( 364)												data97->oPos = (data97->oPos + 2);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data98 = data;
HXDLIN( 364)												data98->bPos = (data98->bPos + 2);
            											}
            											break;
            											case (int)1: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data99 = data;
HXDLIN( 364)												data99->iPos = (data99->iPos + 1);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data100 = data;
HXDLIN( 364)												data100->fPos = (data100->fPos + 1);
            											}
            											break;
            											case (int)2: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data101 = data;
HXDLIN( 364)												data101->oPos = (data101->oPos + 4);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data102 = data;
HXDLIN( 364)												data102->iiPos = (data102->iiPos + 2);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data103 = data;
HXDLIN( 364)												data103->ffPos = (data103->ffPos + 1);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data104 = data;
HXDLIN( 364)												data104->fPos = (data104->fPos + 1);
            											}
            											break;
            											case (int)3: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data105 = data;
HXDLIN( 364)												data105->oPos = (data105->oPos + 1);
            											}
            											break;
            											case (int)4: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data106 = data;
HXDLIN( 364)												data106->fPos = (data106->fPos + 6);
            											}
            											break;
            											case (int)5: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data107 = data;
HXDLIN( 364)												data107->fPos = (data107->fPos + 4);
            											}
            											break;
            											case (int)6: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data108 = data;
HXDLIN( 364)												data108->fPos = (data108->fPos + 3);
            											}
            											break;
            											case (int)7: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data109 = data;
HXDLIN( 364)												data109->fPos = (data109->fPos + 4);
            											}
            											break;
            											case (int)8: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data110 = data;
HXDLIN( 364)												data110->oPos = (data110->oPos + 3);
            											}
            											break;
            											case (int)9: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data111 = data;
HXDLIN( 364)												data111->fPos = (data111->fPos + 4);
            											}
            											break;
            											case (int)10: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data112 = data;
HXDLIN( 364)												data112->fPos = (data112->fPos + 5);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data113 = data;
HXDLIN( 364)												data113->oPos = (data113->oPos + 1);
            											}
            											break;
            											case (int)12: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data114 = data;
HXDLIN( 364)												data114->oPos = (data114->oPos + 4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data115 = data;
HXDLIN( 364)												data115->oPos = (data115->oPos + 2);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data116 = data;
HXDLIN( 364)												data116->bPos = (data116->bPos + 2);
            											}
            											break;
            											case (int)15: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data117 = data;
HXDLIN( 364)												data117->oPos = (data117->oPos + 4);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data118 = data;
HXDLIN( 364)												data118->iiPos = (data118->iiPos + 2);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data119 = data;
HXDLIN( 364)												data119->ffPos = (data119->ffPos + 1);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data120 = data;
HXDLIN( 364)												data120->fPos = (data120->fPos + 1);
            											}
            											break;
            											case (int)16: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data121 = data;
HXDLIN( 364)												data121->oPos = (data121->oPos + 4);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data122 = data;
HXDLIN( 364)												data122->iPos = (data122->iPos + 1);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data123 = data;
HXDLIN( 364)												data123->fPos = (data123->fPos + 2);
HXDLIN( 364)												 ::openfl::display::_internal::DrawCommandReader data124 = data;
HXDLIN( 364)												data124->bPos = (data124->bPos + 1);
            											}
            											break;
            											case (int)17: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data125 = data;
HXDLIN( 364)												data125->fPos = (data125->fPos + 2);
            											}
            											break;
            											case (int)18: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data126 = data;
HXDLIN( 364)												data126->fPos = (data126->fPos + 2);
            											}
            											break;
            											case (int)19: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data127 = data;
HXDLIN( 364)												data127->oPos = (data127->oPos + 1);
            											}
            											break;
            											case (int)20: {
HXLINE( 364)												 ::openfl::display::_internal::DrawCommandReader data128 = data;
HXDLIN( 364)												data128->oPos = (data128->oPos + 1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
HXLINE( 364)										data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 364)										 ::openfl::display::_internal::DrawCommandReader c3 = data;
HXLINE( 365)										::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginFill(c3->buffer->i->__get(c3->iPos),( (Float)(1) ));
HXLINE( 366)										::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginFill(c3->buffer->i->__get(c3->iPos),( (Float)(1) ));
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 268)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data129 = data;
HXDLIN( 268)									data129->oPos = (data129->oPos + 2);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data130 = data;
HXDLIN( 268)									data130->bPos = (data130->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data131 = data;
HXDLIN( 268)									data131->iPos = (data131->iPos + 1);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data132 = data;
HXDLIN( 268)									data132->fPos = (data132->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data133 = data;
HXDLIN( 268)									data133->oPos = (data133->oPos + 4);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data134 = data;
HXDLIN( 268)									data134->iiPos = (data134->iiPos + 2);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data135 = data;
HXDLIN( 268)									data135->ffPos = (data135->ffPos + 1);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data136 = data;
HXDLIN( 268)									data136->fPos = (data136->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data137 = data;
HXDLIN( 268)									data137->oPos = (data137->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data138 = data;
HXDLIN( 268)									data138->fPos = (data138->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data139 = data;
HXDLIN( 268)									data139->fPos = (data139->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data140 = data;
HXDLIN( 268)									data140->fPos = (data140->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data141 = data;
HXDLIN( 268)									data141->fPos = (data141->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data142 = data;
HXDLIN( 268)									data142->oPos = (data142->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data143 = data;
HXDLIN( 268)									data143->fPos = (data143->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data144 = data;
HXDLIN( 268)									data144->fPos = (data144->fPos + 5);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data145 = data;
HXDLIN( 268)									data145->oPos = (data145->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data146 = data;
HXDLIN( 268)									data146->oPos = (data146->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data147 = data;
HXDLIN( 268)									data147->oPos = (data147->oPos + 2);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data148 = data;
HXDLIN( 268)									data148->bPos = (data148->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data149 = data;
HXDLIN( 268)									data149->oPos = (data149->oPos + 4);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data150 = data;
HXDLIN( 268)									data150->iiPos = (data150->iiPos + 2);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data151 = data;
HXDLIN( 268)									data151->ffPos = (data151->ffPos + 1);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data152 = data;
HXDLIN( 268)									data152->fPos = (data152->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data153 = data;
HXDLIN( 268)									data153->oPos = (data153->oPos + 4);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data154 = data;
HXDLIN( 268)									data154->iPos = (data154->iPos + 1);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data155 = data;
HXDLIN( 268)									data155->fPos = (data155->fPos + 2);
HXDLIN( 268)									 ::openfl::display::_internal::DrawCommandReader data156 = data;
HXDLIN( 268)									data156->bPos = (data156->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data157 = data;
HXDLIN( 268)									data157->fPos = (data157->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data158 = data;
HXDLIN( 268)									data158->fPos = (data158->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data159 = data;
HXDLIN( 268)									data159->oPos = (data159->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 268)									 ::openfl::display::_internal::DrawCommandReader data160 = data;
HXDLIN( 268)									data160->oPos = (data160->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 268)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 268)							 ::openfl::display::_internal::DrawCommandReader c4 = data;
HXLINE( 269)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->cubicCurveTo(c4->buffer->f->__get(c4->fPos),c4->buffer->f->__get((c4->fPos + 1)),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)),c4->buffer->f->__get((c4->fPos + 4)),c4->buffer->f->__get((c4->fPos + 5)));
HXLINE( 270)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->cubicCurveTo(c4->buffer->f->__get(c4->fPos),c4->buffer->f->__get((c4->fPos + 1)),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)),c4->buffer->f->__get((c4->fPos + 4)),c4->buffer->f->__get((c4->fPos + 5)));
            						}
            						break;
            						case (int)5: {
HXLINE( 273)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data161 = data;
HXDLIN( 273)									data161->oPos = (data161->oPos + 2);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data162 = data;
HXDLIN( 273)									data162->bPos = (data162->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data163 = data;
HXDLIN( 273)									data163->iPos = (data163->iPos + 1);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data164 = data;
HXDLIN( 273)									data164->fPos = (data164->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data165 = data;
HXDLIN( 273)									data165->oPos = (data165->oPos + 4);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data166 = data;
HXDLIN( 273)									data166->iiPos = (data166->iiPos + 2);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data167 = data;
HXDLIN( 273)									data167->ffPos = (data167->ffPos + 1);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data168 = data;
HXDLIN( 273)									data168->fPos = (data168->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data169 = data;
HXDLIN( 273)									data169->oPos = (data169->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data170 = data;
HXDLIN( 273)									data170->fPos = (data170->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data171 = data;
HXDLIN( 273)									data171->fPos = (data171->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data172 = data;
HXDLIN( 273)									data172->fPos = (data172->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data173 = data;
HXDLIN( 273)									data173->fPos = (data173->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data174 = data;
HXDLIN( 273)									data174->oPos = (data174->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data175 = data;
HXDLIN( 273)									data175->fPos = (data175->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data176 = data;
HXDLIN( 273)									data176->fPos = (data176->fPos + 5);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data177 = data;
HXDLIN( 273)									data177->oPos = (data177->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data178 = data;
HXDLIN( 273)									data178->oPos = (data178->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data179 = data;
HXDLIN( 273)									data179->oPos = (data179->oPos + 2);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data180 = data;
HXDLIN( 273)									data180->bPos = (data180->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data181 = data;
HXDLIN( 273)									data181->oPos = (data181->oPos + 4);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data182 = data;
HXDLIN( 273)									data182->iiPos = (data182->iiPos + 2);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data183 = data;
HXDLIN( 273)									data183->ffPos = (data183->ffPos + 1);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data184 = data;
HXDLIN( 273)									data184->fPos = (data184->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data185 = data;
HXDLIN( 273)									data185->oPos = (data185->oPos + 4);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data186 = data;
HXDLIN( 273)									data186->iPos = (data186->iPos + 1);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data187 = data;
HXDLIN( 273)									data187->fPos = (data187->fPos + 2);
HXDLIN( 273)									 ::openfl::display::_internal::DrawCommandReader data188 = data;
HXDLIN( 273)									data188->bPos = (data188->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data189 = data;
HXDLIN( 273)									data189->fPos = (data189->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data190 = data;
HXDLIN( 273)									data190->fPos = (data190->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data191 = data;
HXDLIN( 273)									data191->oPos = (data191->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 273)									 ::openfl::display::_internal::DrawCommandReader data192 = data;
HXDLIN( 273)									data192->oPos = (data192->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 273)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 273)							 ::openfl::display::_internal::DrawCommandReader c5 = data;
HXLINE( 274)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->curveTo(c5->buffer->f->__get(c5->fPos),c5->buffer->f->__get((c5->fPos + 1)),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)));
HXLINE( 275)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->curveTo(c5->buffer->f->__get(c5->fPos),c5->buffer->f->__get((c5->fPos + 1)),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)));
            						}
            						break;
            						case (int)6: {
HXLINE( 370)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data193 = data;
HXDLIN( 370)									data193->oPos = (data193->oPos + 2);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data194 = data;
HXDLIN( 370)									data194->bPos = (data194->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data195 = data;
HXDLIN( 370)									data195->iPos = (data195->iPos + 1);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data196 = data;
HXDLIN( 370)									data196->fPos = (data196->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data197 = data;
HXDLIN( 370)									data197->oPos = (data197->oPos + 4);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data198 = data;
HXDLIN( 370)									data198->iiPos = (data198->iiPos + 2);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data199 = data;
HXDLIN( 370)									data199->ffPos = (data199->ffPos + 1);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data200 = data;
HXDLIN( 370)									data200->fPos = (data200->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data201 = data;
HXDLIN( 370)									data201->oPos = (data201->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data202 = data;
HXDLIN( 370)									data202->fPos = (data202->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data203 = data;
HXDLIN( 370)									data203->fPos = (data203->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data204 = data;
HXDLIN( 370)									data204->fPos = (data204->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data205 = data;
HXDLIN( 370)									data205->fPos = (data205->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data206 = data;
HXDLIN( 370)									data206->oPos = (data206->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data207 = data;
HXDLIN( 370)									data207->fPos = (data207->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data208 = data;
HXDLIN( 370)									data208->fPos = (data208->fPos + 5);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data209 = data;
HXDLIN( 370)									data209->oPos = (data209->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data210 = data;
HXDLIN( 370)									data210->oPos = (data210->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data211 = data;
HXDLIN( 370)									data211->oPos = (data211->oPos + 2);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data212 = data;
HXDLIN( 370)									data212->bPos = (data212->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data213 = data;
HXDLIN( 370)									data213->oPos = (data213->oPos + 4);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data214 = data;
HXDLIN( 370)									data214->iiPos = (data214->iiPos + 2);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data215 = data;
HXDLIN( 370)									data215->ffPos = (data215->ffPos + 1);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data216 = data;
HXDLIN( 370)									data216->fPos = (data216->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data217 = data;
HXDLIN( 370)									data217->oPos = (data217->oPos + 4);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data218 = data;
HXDLIN( 370)									data218->iPos = (data218->iPos + 1);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data219 = data;
HXDLIN( 370)									data219->fPos = (data219->fPos + 2);
HXDLIN( 370)									 ::openfl::display::_internal::DrawCommandReader data220 = data;
HXDLIN( 370)									data220->bPos = (data220->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data221 = data;
HXDLIN( 370)									data221->fPos = (data221->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data222 = data;
HXDLIN( 370)									data222->fPos = (data222->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data223 = data;
HXDLIN( 370)									data223->oPos = (data223->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 370)									 ::openfl::display::_internal::DrawCommandReader data224 = data;
HXDLIN( 370)									data224->oPos = (data224->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 370)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 370)							 ::openfl::display::_internal::DrawCommandReader c6 = data;
HXLINE( 371)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawCircle(c6->buffer->f->__get(c6->fPos),c6->buffer->f->__get((c6->fPos + 1)),c6->buffer->f->__get((c6->fPos + 2)));
HXLINE( 372)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawCircle(c6->buffer->f->__get(c6->fPos),c6->buffer->f->__get((c6->fPos + 1)),c6->buffer->f->__get((c6->fPos + 2)));
            						}
            						break;
            						case (int)7: {
HXLINE( 375)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data225 = data;
HXDLIN( 375)									data225->oPos = (data225->oPos + 2);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data226 = data;
HXDLIN( 375)									data226->bPos = (data226->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data227 = data;
HXDLIN( 375)									data227->iPos = (data227->iPos + 1);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data228 = data;
HXDLIN( 375)									data228->fPos = (data228->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data229 = data;
HXDLIN( 375)									data229->oPos = (data229->oPos + 4);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data230 = data;
HXDLIN( 375)									data230->iiPos = (data230->iiPos + 2);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data231 = data;
HXDLIN( 375)									data231->ffPos = (data231->ffPos + 1);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data232 = data;
HXDLIN( 375)									data232->fPos = (data232->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data233 = data;
HXDLIN( 375)									data233->oPos = (data233->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data234 = data;
HXDLIN( 375)									data234->fPos = (data234->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data235 = data;
HXDLIN( 375)									data235->fPos = (data235->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data236 = data;
HXDLIN( 375)									data236->fPos = (data236->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data237 = data;
HXDLIN( 375)									data237->fPos = (data237->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data238 = data;
HXDLIN( 375)									data238->oPos = (data238->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data239 = data;
HXDLIN( 375)									data239->fPos = (data239->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data240 = data;
HXDLIN( 375)									data240->fPos = (data240->fPos + 5);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data241 = data;
HXDLIN( 375)									data241->oPos = (data241->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data242 = data;
HXDLIN( 375)									data242->oPos = (data242->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data243 = data;
HXDLIN( 375)									data243->oPos = (data243->oPos + 2);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data244 = data;
HXDLIN( 375)									data244->bPos = (data244->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data245 = data;
HXDLIN( 375)									data245->oPos = (data245->oPos + 4);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data246 = data;
HXDLIN( 375)									data246->iiPos = (data246->iiPos + 2);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data247 = data;
HXDLIN( 375)									data247->ffPos = (data247->ffPos + 1);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data248 = data;
HXDLIN( 375)									data248->fPos = (data248->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data249 = data;
HXDLIN( 375)									data249->oPos = (data249->oPos + 4);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data250 = data;
HXDLIN( 375)									data250->iPos = (data250->iPos + 1);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data251 = data;
HXDLIN( 375)									data251->fPos = (data251->fPos + 2);
HXDLIN( 375)									 ::openfl::display::_internal::DrawCommandReader data252 = data;
HXDLIN( 375)									data252->bPos = (data252->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data253 = data;
HXDLIN( 375)									data253->fPos = (data253->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data254 = data;
HXDLIN( 375)									data254->fPos = (data254->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data255 = data;
HXDLIN( 375)									data255->oPos = (data255->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 375)									 ::openfl::display::_internal::DrawCommandReader data256 = data;
HXDLIN( 375)									data256->oPos = (data256->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 375)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 375)							 ::openfl::display::_internal::DrawCommandReader c7 = data;
HXLINE( 376)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawEllipse(c7->buffer->f->__get(c7->fPos),c7->buffer->f->__get((c7->fPos + 1)),c7->buffer->f->__get((c7->fPos + 2)),c7->buffer->f->__get((c7->fPos + 3)));
HXLINE( 377)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawEllipse(c7->buffer->f->__get(c7->fPos),c7->buffer->f->__get((c7->fPos + 1)),c7->buffer->f->__get((c7->fPos + 2)),c7->buffer->f->__get((c7->fPos + 3)));
            						}
            						break;
            						case (int)9: {
HXLINE( 380)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data257 = data;
HXDLIN( 380)									data257->oPos = (data257->oPos + 2);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data258 = data;
HXDLIN( 380)									data258->bPos = (data258->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data259 = data;
HXDLIN( 380)									data259->iPos = (data259->iPos + 1);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data260 = data;
HXDLIN( 380)									data260->fPos = (data260->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data261 = data;
HXDLIN( 380)									data261->oPos = (data261->oPos + 4);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data262 = data;
HXDLIN( 380)									data262->iiPos = (data262->iiPos + 2);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data263 = data;
HXDLIN( 380)									data263->ffPos = (data263->ffPos + 1);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data264 = data;
HXDLIN( 380)									data264->fPos = (data264->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data265 = data;
HXDLIN( 380)									data265->oPos = (data265->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data266 = data;
HXDLIN( 380)									data266->fPos = (data266->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data267 = data;
HXDLIN( 380)									data267->fPos = (data267->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data268 = data;
HXDLIN( 380)									data268->fPos = (data268->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data269 = data;
HXDLIN( 380)									data269->fPos = (data269->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data270 = data;
HXDLIN( 380)									data270->oPos = (data270->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data271 = data;
HXDLIN( 380)									data271->fPos = (data271->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data272 = data;
HXDLIN( 380)									data272->fPos = (data272->fPos + 5);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data273 = data;
HXDLIN( 380)									data273->oPos = (data273->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data274 = data;
HXDLIN( 380)									data274->oPos = (data274->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data275 = data;
HXDLIN( 380)									data275->oPos = (data275->oPos + 2);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data276 = data;
HXDLIN( 380)									data276->bPos = (data276->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data277 = data;
HXDLIN( 380)									data277->oPos = (data277->oPos + 4);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data278 = data;
HXDLIN( 380)									data278->iiPos = (data278->iiPos + 2);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data279 = data;
HXDLIN( 380)									data279->ffPos = (data279->ffPos + 1);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data280 = data;
HXDLIN( 380)									data280->fPos = (data280->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data281 = data;
HXDLIN( 380)									data281->oPos = (data281->oPos + 4);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data282 = data;
HXDLIN( 380)									data282->iPos = (data282->iPos + 1);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data283 = data;
HXDLIN( 380)									data283->fPos = (data283->fPos + 2);
HXDLIN( 380)									 ::openfl::display::_internal::DrawCommandReader data284 = data;
HXDLIN( 380)									data284->bPos = (data284->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data285 = data;
HXDLIN( 380)									data285->fPos = (data285->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data286 = data;
HXDLIN( 380)									data286->fPos = (data286->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data287 = data;
HXDLIN( 380)									data287->oPos = (data287->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 380)									 ::openfl::display::_internal::DrawCommandReader data288 = data;
HXDLIN( 380)									data288->oPos = (data288->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 380)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 380)							 ::openfl::display::_internal::DrawCommandReader c8 = data;
HXLINE( 381)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawRect(c8->buffer->f->__get(c8->fPos),c8->buffer->f->__get((c8->fPos + 1)),c8->buffer->f->__get((c8->fPos + 2)),c8->buffer->f->__get((c8->fPos + 3)));
HXLINE( 382)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawRect(c8->buffer->f->__get(c8->fPos),c8->buffer->f->__get((c8->fPos + 1)),c8->buffer->f->__get((c8->fPos + 2)),c8->buffer->f->__get((c8->fPos + 3)));
            						}
            						break;
            						case (int)10: {
HXLINE( 385)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data289 = data;
HXDLIN( 385)									data289->oPos = (data289->oPos + 2);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data290 = data;
HXDLIN( 385)									data290->bPos = (data290->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data291 = data;
HXDLIN( 385)									data291->iPos = (data291->iPos + 1);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data292 = data;
HXDLIN( 385)									data292->fPos = (data292->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data293 = data;
HXDLIN( 385)									data293->oPos = (data293->oPos + 4);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data294 = data;
HXDLIN( 385)									data294->iiPos = (data294->iiPos + 2);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data295 = data;
HXDLIN( 385)									data295->ffPos = (data295->ffPos + 1);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data296 = data;
HXDLIN( 385)									data296->fPos = (data296->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data297 = data;
HXDLIN( 385)									data297->oPos = (data297->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data298 = data;
HXDLIN( 385)									data298->fPos = (data298->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data299 = data;
HXDLIN( 385)									data299->fPos = (data299->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data300 = data;
HXDLIN( 385)									data300->fPos = (data300->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data301 = data;
HXDLIN( 385)									data301->fPos = (data301->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data302 = data;
HXDLIN( 385)									data302->oPos = (data302->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data303 = data;
HXDLIN( 385)									data303->fPos = (data303->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data304 = data;
HXDLIN( 385)									data304->fPos = (data304->fPos + 5);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data305 = data;
HXDLIN( 385)									data305->oPos = (data305->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data306 = data;
HXDLIN( 385)									data306->oPos = (data306->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data307 = data;
HXDLIN( 385)									data307->oPos = (data307->oPos + 2);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data308 = data;
HXDLIN( 385)									data308->bPos = (data308->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data309 = data;
HXDLIN( 385)									data309->oPos = (data309->oPos + 4);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data310 = data;
HXDLIN( 385)									data310->iiPos = (data310->iiPos + 2);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data311 = data;
HXDLIN( 385)									data311->ffPos = (data311->ffPos + 1);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data312 = data;
HXDLIN( 385)									data312->fPos = (data312->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data313 = data;
HXDLIN( 385)									data313->oPos = (data313->oPos + 4);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data314 = data;
HXDLIN( 385)									data314->iPos = (data314->iPos + 1);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data315 = data;
HXDLIN( 385)									data315->fPos = (data315->fPos + 2);
HXDLIN( 385)									 ::openfl::display::_internal::DrawCommandReader data316 = data;
HXDLIN( 385)									data316->bPos = (data316->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data317 = data;
HXDLIN( 385)									data317->fPos = (data317->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data318 = data;
HXDLIN( 385)									data318->fPos = (data318->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data319 = data;
HXDLIN( 385)									data319->oPos = (data319->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 385)									 ::openfl::display::_internal::DrawCommandReader data320 = data;
HXDLIN( 385)									data320->oPos = (data320->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 385)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 385)							 ::openfl::display::_internal::DrawCommandReader c9 = data;
HXLINE( 386)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawRoundRect(c9->buffer->f->__get(c9->fPos),c9->buffer->f->__get((c9->fPos + 1)),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)),c9->buffer->f->__get((c9->fPos + 4)),c9->buffer->o->__get(c9->oPos));
HXLINE( 387)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawRoundRect(c9->buffer->f->__get(c9->fPos),c9->buffer->f->__get((c9->fPos + 1)),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)),c9->buffer->f->__get((c9->fPos + 4)),c9->buffer->o->__get(c9->oPos));
            						}
            						break;
            						case (int)13: {
HXLINE( 301)							{
HXLINE( 301)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data321 = data;
HXDLIN( 301)										data321->oPos = (data321->oPos + 2);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data322 = data;
HXDLIN( 301)										data322->bPos = (data322->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data323 = data;
HXDLIN( 301)										data323->iPos = (data323->iPos + 1);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data324 = data;
HXDLIN( 301)										data324->fPos = (data324->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data325 = data;
HXDLIN( 301)										data325->oPos = (data325->oPos + 4);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data326 = data;
HXDLIN( 301)										data326->iiPos = (data326->iiPos + 2);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data327 = data;
HXDLIN( 301)										data327->ffPos = (data327->ffPos + 1);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data328 = data;
HXDLIN( 301)										data328->fPos = (data328->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data329 = data;
HXDLIN( 301)										data329->oPos = (data329->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data330 = data;
HXDLIN( 301)										data330->fPos = (data330->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data331 = data;
HXDLIN( 301)										data331->fPos = (data331->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data332 = data;
HXDLIN( 301)										data332->fPos = (data332->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data333 = data;
HXDLIN( 301)										data333->fPos = (data333->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data334 = data;
HXDLIN( 301)										data334->oPos = (data334->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data335 = data;
HXDLIN( 301)										data335->fPos = (data335->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data336 = data;
HXDLIN( 301)										data336->fPos = (data336->fPos + 5);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data337 = data;
HXDLIN( 301)										data337->oPos = (data337->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data338 = data;
HXDLIN( 301)										data338->oPos = (data338->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data339 = data;
HXDLIN( 301)										data339->oPos = (data339->oPos + 2);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data340 = data;
HXDLIN( 301)										data340->bPos = (data340->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data341 = data;
HXDLIN( 301)										data341->oPos = (data341->oPos + 4);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data342 = data;
HXDLIN( 301)										data342->iiPos = (data342->iiPos + 2);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data343 = data;
HXDLIN( 301)										data343->ffPos = (data343->ffPos + 1);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data344 = data;
HXDLIN( 301)										data344->fPos = (data344->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data345 = data;
HXDLIN( 301)										data345->oPos = (data345->oPos + 4);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data346 = data;
HXDLIN( 301)										data346->iPos = (data346->iPos + 1);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data347 = data;
HXDLIN( 301)										data347->fPos = (data347->fPos + 2);
HXDLIN( 301)										 ::openfl::display::_internal::DrawCommandReader data348 = data;
HXDLIN( 301)										data348->bPos = (data348->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data349 = data;
HXDLIN( 301)										data349->fPos = (data349->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data350 = data;
HXDLIN( 301)										data350->fPos = (data350->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data351 = data;
HXDLIN( 301)										data351->oPos = (data351->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE( 301)										 ::openfl::display::_internal::DrawCommandReader data352 = data;
HXDLIN( 301)										data352->oPos = (data352->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE( 301)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 301)								 ::openfl::display::_internal::DrawCommandReader this1 = data;
            							}
HXLINE( 302)							::openfl::display::_internal::CairoGraphics_obj::endFill();
HXLINE( 304)							bool _hx_tmp6;
HXDLIN( 304)							if (::openfl::display::_internal::CairoGraphics_obj::hasFill) {
HXLINE( 304)								_hx_tmp6 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 304)								_hx_tmp6 = false;
            							}
HXDLIN( 304)							if (_hx_tmp6) {
HXLINE( 306)								data->destroy();
HXLINE( 307)								::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 308)								return true;
            							}
HXLINE( 311)							::openfl::display::_internal::CairoGraphics_obj::endStroke();
HXLINE( 313)							bool _hx_tmp7;
HXDLIN( 313)							if (::openfl::display::_internal::CairoGraphics_obj::hasStroke) {
HXLINE( 313)								_hx_tmp7 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 313)								_hx_tmp7 = false;
            							}
HXDLIN( 313)							if (_hx_tmp7) {
HXLINE( 315)								data->destroy();
HXLINE( 316)								::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 317)								return true;
            							}
HXLINE( 320)							::openfl::display::_internal::CairoGraphics_obj::hasFill = false;
HXLINE( 321)							::openfl::display::_internal::CairoGraphics_obj::bitmapFill = null();
            						}
            						break;
            						case (int)14: {
HXLINE( 297)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data353 = data;
HXDLIN( 297)									data353->oPos = (data353->oPos + 2);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data354 = data;
HXDLIN( 297)									data354->bPos = (data354->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data355 = data;
HXDLIN( 297)									data355->iPos = (data355->iPos + 1);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data356 = data;
HXDLIN( 297)									data356->fPos = (data356->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data357 = data;
HXDLIN( 297)									data357->oPos = (data357->oPos + 4);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data358 = data;
HXDLIN( 297)									data358->iiPos = (data358->iiPos + 2);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data359 = data;
HXDLIN( 297)									data359->ffPos = (data359->ffPos + 1);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data360 = data;
HXDLIN( 297)									data360->fPos = (data360->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data361 = data;
HXDLIN( 297)									data361->oPos = (data361->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data362 = data;
HXDLIN( 297)									data362->fPos = (data362->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data363 = data;
HXDLIN( 297)									data363->fPos = (data363->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data364 = data;
HXDLIN( 297)									data364->fPos = (data364->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data365 = data;
HXDLIN( 297)									data365->fPos = (data365->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data366 = data;
HXDLIN( 297)									data366->oPos = (data366->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data367 = data;
HXDLIN( 297)									data367->fPos = (data367->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data368 = data;
HXDLIN( 297)									data368->fPos = (data368->fPos + 5);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data369 = data;
HXDLIN( 297)									data369->oPos = (data369->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data370 = data;
HXDLIN( 297)									data370->oPos = (data370->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data371 = data;
HXDLIN( 297)									data371->oPos = (data371->oPos + 2);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data372 = data;
HXDLIN( 297)									data372->bPos = (data372->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data373 = data;
HXDLIN( 297)									data373->oPos = (data373->oPos + 4);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data374 = data;
HXDLIN( 297)									data374->iiPos = (data374->iiPos + 2);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data375 = data;
HXDLIN( 297)									data375->ffPos = (data375->ffPos + 1);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data376 = data;
HXDLIN( 297)									data376->fPos = (data376->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data377 = data;
HXDLIN( 297)									data377->oPos = (data377->oPos + 4);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data378 = data;
HXDLIN( 297)									data378->iPos = (data378->iPos + 1);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data379 = data;
HXDLIN( 297)									data379->fPos = (data379->fPos + 2);
HXDLIN( 297)									 ::openfl::display::_internal::DrawCommandReader data380 = data;
HXDLIN( 297)									data380->bPos = (data380->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data381 = data;
HXDLIN( 297)									data381->fPos = (data381->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data382 = data;
HXDLIN( 297)									data382->fPos = (data382->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data383 = data;
HXDLIN( 297)									data383->oPos = (data383->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 297)									 ::openfl::display::_internal::DrawCommandReader data384 = data;
HXDLIN( 297)									data384->oPos = (data384->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 297)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 297)							 ::openfl::display::_internal::DrawCommandReader c10 = data;
HXLINE( 298)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c10->buffer->o->__get(c10->oPos)) ),( ( ::openfl::geom::Matrix)(c10->buffer->o->__get((c10->oPos + 1))) ),c10->buffer->b->__get(c10->bPos),c10->buffer->b->__get((c10->bPos + 1)));
            						}
            						break;
            						case (int)15: {
HXLINE( 292)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data385 = data;
HXDLIN( 292)									data385->oPos = (data385->oPos + 2);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data386 = data;
HXDLIN( 292)									data386->bPos = (data386->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data387 = data;
HXDLIN( 292)									data387->iPos = (data387->iPos + 1);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data388 = data;
HXDLIN( 292)									data388->fPos = (data388->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data389 = data;
HXDLIN( 292)									data389->oPos = (data389->oPos + 4);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data390 = data;
HXDLIN( 292)									data390->iiPos = (data390->iiPos + 2);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data391 = data;
HXDLIN( 292)									data391->ffPos = (data391->ffPos + 1);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data392 = data;
HXDLIN( 292)									data392->fPos = (data392->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data393 = data;
HXDLIN( 292)									data393->oPos = (data393->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data394 = data;
HXDLIN( 292)									data394->fPos = (data394->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data395 = data;
HXDLIN( 292)									data395->fPos = (data395->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data396 = data;
HXDLIN( 292)									data396->fPos = (data396->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data397 = data;
HXDLIN( 292)									data397->fPos = (data397->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data398 = data;
HXDLIN( 292)									data398->oPos = (data398->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data399 = data;
HXDLIN( 292)									data399->fPos = (data399->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data400 = data;
HXDLIN( 292)									data400->fPos = (data400->fPos + 5);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data401 = data;
HXDLIN( 292)									data401->oPos = (data401->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data402 = data;
HXDLIN( 292)									data402->oPos = (data402->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data403 = data;
HXDLIN( 292)									data403->oPos = (data403->oPos + 2);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data404 = data;
HXDLIN( 292)									data404->bPos = (data404->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data405 = data;
HXDLIN( 292)									data405->oPos = (data405->oPos + 4);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data406 = data;
HXDLIN( 292)									data406->iiPos = (data406->iiPos + 2);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data407 = data;
HXDLIN( 292)									data407->ffPos = (data407->ffPos + 1);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data408 = data;
HXDLIN( 292)									data408->fPos = (data408->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data409 = data;
HXDLIN( 292)									data409->oPos = (data409->oPos + 4);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data410 = data;
HXDLIN( 292)									data410->iPos = (data410->iPos + 1);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data411 = data;
HXDLIN( 292)									data411->fPos = (data411->fPos + 2);
HXDLIN( 292)									 ::openfl::display::_internal::DrawCommandReader data412 = data;
HXDLIN( 292)									data412->bPos = (data412->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data413 = data;
HXDLIN( 292)									data413->fPos = (data413->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data414 = data;
HXDLIN( 292)									data414->fPos = (data414->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data415 = data;
HXDLIN( 292)									data415->oPos = (data415->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 292)									 ::openfl::display::_internal::DrawCommandReader data416 = data;
HXDLIN( 292)									data416->oPos = (data416->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 292)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 292)							 ::openfl::display::_internal::DrawCommandReader c11 = data;
HXLINE( 293)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineGradientStyle(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c11->buffer->ii->__get((c11->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c11->buffer->o->__get((c11->oPos + 1))) ),c11->buffer->o->__get((c11->oPos + 2)),c11->buffer->o->__get((c11->oPos + 3)),c11->buffer->f->__get(c11->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE( 288)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data417 = data;
HXDLIN( 288)									data417->oPos = (data417->oPos + 2);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data418 = data;
HXDLIN( 288)									data418->bPos = (data418->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data419 = data;
HXDLIN( 288)									data419->iPos = (data419->iPos + 1);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data420 = data;
HXDLIN( 288)									data420->fPos = (data420->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data421 = data;
HXDLIN( 288)									data421->oPos = (data421->oPos + 4);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data422 = data;
HXDLIN( 288)									data422->iiPos = (data422->iiPos + 2);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data423 = data;
HXDLIN( 288)									data423->ffPos = (data423->ffPos + 1);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data424 = data;
HXDLIN( 288)									data424->fPos = (data424->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data425 = data;
HXDLIN( 288)									data425->oPos = (data425->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data426 = data;
HXDLIN( 288)									data426->fPos = (data426->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data427 = data;
HXDLIN( 288)									data427->fPos = (data427->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data428 = data;
HXDLIN( 288)									data428->fPos = (data428->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data429 = data;
HXDLIN( 288)									data429->fPos = (data429->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data430 = data;
HXDLIN( 288)									data430->oPos = (data430->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data431 = data;
HXDLIN( 288)									data431->fPos = (data431->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data432 = data;
HXDLIN( 288)									data432->fPos = (data432->fPos + 5);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data433 = data;
HXDLIN( 288)									data433->oPos = (data433->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data434 = data;
HXDLIN( 288)									data434->oPos = (data434->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data435 = data;
HXDLIN( 288)									data435->oPos = (data435->oPos + 2);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data436 = data;
HXDLIN( 288)									data436->bPos = (data436->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data437 = data;
HXDLIN( 288)									data437->oPos = (data437->oPos + 4);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data438 = data;
HXDLIN( 288)									data438->iiPos = (data438->iiPos + 2);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data439 = data;
HXDLIN( 288)									data439->ffPos = (data439->ffPos + 1);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data440 = data;
HXDLIN( 288)									data440->fPos = (data440->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data441 = data;
HXDLIN( 288)									data441->oPos = (data441->oPos + 4);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data442 = data;
HXDLIN( 288)									data442->iPos = (data442->iPos + 1);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data443 = data;
HXDLIN( 288)									data443->fPos = (data443->fPos + 2);
HXDLIN( 288)									 ::openfl::display::_internal::DrawCommandReader data444 = data;
HXDLIN( 288)									data444->bPos = (data444->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data445 = data;
HXDLIN( 288)									data445->fPos = (data445->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data446 = data;
HXDLIN( 288)									data446->fPos = (data446->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data447 = data;
HXDLIN( 288)									data447->oPos = (data447->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 288)									 ::openfl::display::_internal::DrawCommandReader data448 = data;
HXDLIN( 288)									data448->oPos = (data448->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 288)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 288)							 ::openfl::display::_internal::DrawCommandReader c12 = data;
HXLINE( 289)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineStyle(c12->buffer->o->__get(c12->oPos),c12->buffer->i->__get(c12->iPos),( (Float)(1) ),c12->buffer->b->__get(c12->bPos),c12->buffer->o->__get((c12->oPos + 1)),c12->buffer->o->__get((c12->oPos + 2)),c12->buffer->o->__get((c12->oPos + 3)),c12->buffer->f->__get((c12->fPos + 1)));
            						}
            						break;
            						case (int)17: {
HXLINE( 278)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data449 = data;
HXDLIN( 278)									data449->oPos = (data449->oPos + 2);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data450 = data;
HXDLIN( 278)									data450->bPos = (data450->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data451 = data;
HXDLIN( 278)									data451->iPos = (data451->iPos + 1);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data452 = data;
HXDLIN( 278)									data452->fPos = (data452->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data453 = data;
HXDLIN( 278)									data453->oPos = (data453->oPos + 4);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data454 = data;
HXDLIN( 278)									data454->iiPos = (data454->iiPos + 2);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data455 = data;
HXDLIN( 278)									data455->ffPos = (data455->ffPos + 1);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data456 = data;
HXDLIN( 278)									data456->fPos = (data456->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data457 = data;
HXDLIN( 278)									data457->oPos = (data457->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data458 = data;
HXDLIN( 278)									data458->fPos = (data458->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data459 = data;
HXDLIN( 278)									data459->fPos = (data459->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data460 = data;
HXDLIN( 278)									data460->fPos = (data460->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data461 = data;
HXDLIN( 278)									data461->fPos = (data461->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data462 = data;
HXDLIN( 278)									data462->oPos = (data462->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data463 = data;
HXDLIN( 278)									data463->fPos = (data463->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data464 = data;
HXDLIN( 278)									data464->fPos = (data464->fPos + 5);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data465 = data;
HXDLIN( 278)									data465->oPos = (data465->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data466 = data;
HXDLIN( 278)									data466->oPos = (data466->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data467 = data;
HXDLIN( 278)									data467->oPos = (data467->oPos + 2);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data468 = data;
HXDLIN( 278)									data468->bPos = (data468->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data469 = data;
HXDLIN( 278)									data469->oPos = (data469->oPos + 4);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data470 = data;
HXDLIN( 278)									data470->iiPos = (data470->iiPos + 2);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data471 = data;
HXDLIN( 278)									data471->ffPos = (data471->ffPos + 1);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data472 = data;
HXDLIN( 278)									data472->fPos = (data472->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data473 = data;
HXDLIN( 278)									data473->oPos = (data473->oPos + 4);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data474 = data;
HXDLIN( 278)									data474->iPos = (data474->iPos + 1);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data475 = data;
HXDLIN( 278)									data475->fPos = (data475->fPos + 2);
HXDLIN( 278)									 ::openfl::display::_internal::DrawCommandReader data476 = data;
HXDLIN( 278)									data476->bPos = (data476->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data477 = data;
HXDLIN( 278)									data477->fPos = (data477->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data478 = data;
HXDLIN( 278)									data478->fPos = (data478->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data479 = data;
HXDLIN( 278)									data479->oPos = (data479->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 278)									 ::openfl::display::_internal::DrawCommandReader data480 = data;
HXDLIN( 278)									data480->oPos = (data480->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 278)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 278)							 ::openfl::display::_internal::DrawCommandReader c13 = data;
HXLINE( 279)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->lineTo(c13->buffer->f->__get(c13->fPos),c13->buffer->f->__get((c13->fPos + 1)));
HXLINE( 280)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineTo(c13->buffer->f->__get(c13->fPos),c13->buffer->f->__get((c13->fPos + 1)));
            						}
            						break;
            						case (int)18: {
HXLINE( 283)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data481 = data;
HXDLIN( 283)									data481->oPos = (data481->oPos + 2);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data482 = data;
HXDLIN( 283)									data482->bPos = (data482->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data483 = data;
HXDLIN( 283)									data483->iPos = (data483->iPos + 1);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data484 = data;
HXDLIN( 283)									data484->fPos = (data484->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data485 = data;
HXDLIN( 283)									data485->oPos = (data485->oPos + 4);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data486 = data;
HXDLIN( 283)									data486->iiPos = (data486->iiPos + 2);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data487 = data;
HXDLIN( 283)									data487->ffPos = (data487->ffPos + 1);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data488 = data;
HXDLIN( 283)									data488->fPos = (data488->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data489 = data;
HXDLIN( 283)									data489->oPos = (data489->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data490 = data;
HXDLIN( 283)									data490->fPos = (data490->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data491 = data;
HXDLIN( 283)									data491->fPos = (data491->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data492 = data;
HXDLIN( 283)									data492->fPos = (data492->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data493 = data;
HXDLIN( 283)									data493->fPos = (data493->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data494 = data;
HXDLIN( 283)									data494->oPos = (data494->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data495 = data;
HXDLIN( 283)									data495->fPos = (data495->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data496 = data;
HXDLIN( 283)									data496->fPos = (data496->fPos + 5);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data497 = data;
HXDLIN( 283)									data497->oPos = (data497->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data498 = data;
HXDLIN( 283)									data498->oPos = (data498->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data499 = data;
HXDLIN( 283)									data499->oPos = (data499->oPos + 2);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data500 = data;
HXDLIN( 283)									data500->bPos = (data500->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data501 = data;
HXDLIN( 283)									data501->oPos = (data501->oPos + 4);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data502 = data;
HXDLIN( 283)									data502->iiPos = (data502->iiPos + 2);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data503 = data;
HXDLIN( 283)									data503->ffPos = (data503->ffPos + 1);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data504 = data;
HXDLIN( 283)									data504->fPos = (data504->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data505 = data;
HXDLIN( 283)									data505->oPos = (data505->oPos + 4);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data506 = data;
HXDLIN( 283)									data506->iPos = (data506->iPos + 1);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data507 = data;
HXDLIN( 283)									data507->fPos = (data507->fPos + 2);
HXDLIN( 283)									 ::openfl::display::_internal::DrawCommandReader data508 = data;
HXDLIN( 283)									data508->bPos = (data508->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data509 = data;
HXDLIN( 283)									data509->fPos = (data509->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data510 = data;
HXDLIN( 283)									data510->fPos = (data510->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data511 = data;
HXDLIN( 283)									data511->oPos = (data511->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 283)									 ::openfl::display::_internal::DrawCommandReader data512 = data;
HXDLIN( 283)									data512->oPos = (data512->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 283)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 283)							 ::openfl::display::_internal::DrawCommandReader c14 = data;
HXLINE( 284)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->moveTo(c14->buffer->f->__get(c14->fPos),c14->buffer->f->__get((c14->fPos + 1)));
HXLINE( 285)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->moveTo(c14->buffer->f->__get(c14->fPos),c14->buffer->f->__get((c14->fPos + 1)));
            						}
            						break;
            						case (int)21: {
HXLINE( 390)							{
HXLINE( 390)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data513 = data;
HXDLIN( 390)										data513->oPos = (data513->oPos + 2);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data514 = data;
HXDLIN( 390)										data514->bPos = (data514->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data515 = data;
HXDLIN( 390)										data515->iPos = (data515->iPos + 1);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data516 = data;
HXDLIN( 390)										data516->fPos = (data516->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data517 = data;
HXDLIN( 390)										data517->oPos = (data517->oPos + 4);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data518 = data;
HXDLIN( 390)										data518->iiPos = (data518->iiPos + 2);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data519 = data;
HXDLIN( 390)										data519->ffPos = (data519->ffPos + 1);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data520 = data;
HXDLIN( 390)										data520->fPos = (data520->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data521 = data;
HXDLIN( 390)										data521->oPos = (data521->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data522 = data;
HXDLIN( 390)										data522->fPos = (data522->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data523 = data;
HXDLIN( 390)										data523->fPos = (data523->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data524 = data;
HXDLIN( 390)										data524->fPos = (data524->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data525 = data;
HXDLIN( 390)										data525->fPos = (data525->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data526 = data;
HXDLIN( 390)										data526->oPos = (data526->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data527 = data;
HXDLIN( 390)										data527->fPos = (data527->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data528 = data;
HXDLIN( 390)										data528->fPos = (data528->fPos + 5);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data529 = data;
HXDLIN( 390)										data529->oPos = (data529->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data530 = data;
HXDLIN( 390)										data530->oPos = (data530->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data531 = data;
HXDLIN( 390)										data531->oPos = (data531->oPos + 2);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data532 = data;
HXDLIN( 390)										data532->bPos = (data532->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data533 = data;
HXDLIN( 390)										data533->oPos = (data533->oPos + 4);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data534 = data;
HXDLIN( 390)										data534->iiPos = (data534->iiPos + 2);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data535 = data;
HXDLIN( 390)										data535->ffPos = (data535->ffPos + 1);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data536 = data;
HXDLIN( 390)										data536->fPos = (data536->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data537 = data;
HXDLIN( 390)										data537->oPos = (data537->oPos + 4);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data538 = data;
HXDLIN( 390)										data538->iPos = (data538->iPos + 1);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data539 = data;
HXDLIN( 390)										data539->fPos = (data539->fPos + 2);
HXDLIN( 390)										 ::openfl::display::_internal::DrawCommandReader data540 = data;
HXDLIN( 390)										data540->bPos = (data540->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data541 = data;
HXDLIN( 390)										data541->fPos = (data541->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data542 = data;
HXDLIN( 390)										data542->fPos = (data542->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data543 = data;
HXDLIN( 390)										data543->oPos = (data543->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE( 390)										 ::openfl::display::_internal::DrawCommandReader data544 = data;
HXDLIN( 390)										data544->oPos = (data544->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE( 390)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 390)								 ::openfl::display::_internal::DrawCommandReader this2 = data;
            							}
HXLINE( 391)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(1);
            						}
            						break;
            						case (int)22: {
HXLINE( 394)							{
HXLINE( 394)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data545 = data;
HXDLIN( 394)										data545->oPos = (data545->oPos + 2);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data546 = data;
HXDLIN( 394)										data546->bPos = (data546->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data547 = data;
HXDLIN( 394)										data547->iPos = (data547->iPos + 1);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data548 = data;
HXDLIN( 394)										data548->fPos = (data548->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data549 = data;
HXDLIN( 394)										data549->oPos = (data549->oPos + 4);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data550 = data;
HXDLIN( 394)										data550->iiPos = (data550->iiPos + 2);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data551 = data;
HXDLIN( 394)										data551->ffPos = (data551->ffPos + 1);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data552 = data;
HXDLIN( 394)										data552->fPos = (data552->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data553 = data;
HXDLIN( 394)										data553->oPos = (data553->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data554 = data;
HXDLIN( 394)										data554->fPos = (data554->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data555 = data;
HXDLIN( 394)										data555->fPos = (data555->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data556 = data;
HXDLIN( 394)										data556->fPos = (data556->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data557 = data;
HXDLIN( 394)										data557->fPos = (data557->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data558 = data;
HXDLIN( 394)										data558->oPos = (data558->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data559 = data;
HXDLIN( 394)										data559->fPos = (data559->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data560 = data;
HXDLIN( 394)										data560->fPos = (data560->fPos + 5);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data561 = data;
HXDLIN( 394)										data561->oPos = (data561->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data562 = data;
HXDLIN( 394)										data562->oPos = (data562->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data563 = data;
HXDLIN( 394)										data563->oPos = (data563->oPos + 2);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data564 = data;
HXDLIN( 394)										data564->bPos = (data564->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data565 = data;
HXDLIN( 394)										data565->oPos = (data565->oPos + 4);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data566 = data;
HXDLIN( 394)										data566->iiPos = (data566->iiPos + 2);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data567 = data;
HXDLIN( 394)										data567->ffPos = (data567->ffPos + 1);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data568 = data;
HXDLIN( 394)										data568->fPos = (data568->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data569 = data;
HXDLIN( 394)										data569->oPos = (data569->oPos + 4);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data570 = data;
HXDLIN( 394)										data570->iPos = (data570->iPos + 1);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data571 = data;
HXDLIN( 394)										data571->fPos = (data571->fPos + 2);
HXDLIN( 394)										 ::openfl::display::_internal::DrawCommandReader data572 = data;
HXDLIN( 394)										data572->bPos = (data572->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data573 = data;
HXDLIN( 394)										data573->fPos = (data573->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data574 = data;
HXDLIN( 394)										data574->fPos = (data574->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data575 = data;
HXDLIN( 394)										data575->oPos = (data575->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE( 394)										 ::openfl::display::_internal::DrawCommandReader data576 = data;
HXDLIN( 394)										data576->oPos = (data576->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE( 394)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 394)								 ::openfl::display::_internal::DrawCommandReader this3 = data;
            							}
HXLINE( 395)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(0);
            						}
            						break;
            						default:{
HXLINE( 398)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data577 = data;
HXDLIN( 398)									data577->oPos = (data577->oPos + 2);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data578 = data;
HXDLIN( 398)									data578->bPos = (data578->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data579 = data;
HXDLIN( 398)									data579->iPos = (data579->iPos + 1);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data580 = data;
HXDLIN( 398)									data580->fPos = (data580->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data581 = data;
HXDLIN( 398)									data581->oPos = (data581->oPos + 4);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data582 = data;
HXDLIN( 398)									data582->iiPos = (data582->iiPos + 2);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data583 = data;
HXDLIN( 398)									data583->ffPos = (data583->ffPos + 1);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data584 = data;
HXDLIN( 398)									data584->fPos = (data584->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data585 = data;
HXDLIN( 398)									data585->oPos = (data585->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data586 = data;
HXDLIN( 398)									data586->fPos = (data586->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data587 = data;
HXDLIN( 398)									data587->fPos = (data587->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data588 = data;
HXDLIN( 398)									data588->fPos = (data588->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data589 = data;
HXDLIN( 398)									data589->fPos = (data589->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data590 = data;
HXDLIN( 398)									data590->oPos = (data590->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data591 = data;
HXDLIN( 398)									data591->fPos = (data591->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data592 = data;
HXDLIN( 398)									data592->fPos = (data592->fPos + 5);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data593 = data;
HXDLIN( 398)									data593->oPos = (data593->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data594 = data;
HXDLIN( 398)									data594->oPos = (data594->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data595 = data;
HXDLIN( 398)									data595->oPos = (data595->oPos + 2);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data596 = data;
HXDLIN( 398)									data596->bPos = (data596->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data597 = data;
HXDLIN( 398)									data597->oPos = (data597->oPos + 4);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data598 = data;
HXDLIN( 398)									data598->iiPos = (data598->iiPos + 2);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data599 = data;
HXDLIN( 398)									data599->ffPos = (data599->ffPos + 1);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data600 = data;
HXDLIN( 398)									data600->fPos = (data600->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data601 = data;
HXDLIN( 398)									data601->oPos = (data601->oPos + 4);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data602 = data;
HXDLIN( 398)									data602->iPos = (data602->iPos + 1);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data603 = data;
HXDLIN( 398)									data603->fPos = (data603->fPos + 2);
HXDLIN( 398)									 ::openfl::display::_internal::DrawCommandReader data604 = data;
HXDLIN( 398)									data604->bPos = (data604->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data605 = data;
HXDLIN( 398)									data605->fPos = (data605->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data606 = data;
HXDLIN( 398)									data606->fPos = (data606->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data607 = data;
HXDLIN( 398)									data607->oPos = (data607->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE( 398)									 ::openfl::display::_internal::DrawCommandReader data608 = data;
HXDLIN( 398)									data608->oPos = (data608->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 398)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE( 402)			bool hitTest = false;
HXLINE( 404)			if ((::openfl::display::_internal::CairoGraphics_obj::fillCommands->get_length() > 0)) {
HXLINE( 406)				::openfl::display::_internal::CairoGraphics_obj::endFill();
            			}
HXLINE( 409)			bool _hx_tmp8;
HXDLIN( 409)			if (::openfl::display::_internal::CairoGraphics_obj::hasFill) {
HXLINE( 409)				_hx_tmp8 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inFill(x,y);
            			}
            			else {
HXLINE( 409)				_hx_tmp8 = false;
            			}
HXDLIN( 409)			if (_hx_tmp8) {
HXLINE( 411)				hitTest = true;
            			}
HXLINE( 414)			if ((::openfl::display::_internal::CairoGraphics_obj::strokeCommands->get_length() > 0)) {
HXLINE( 416)				::openfl::display::_internal::CairoGraphics_obj::endStroke();
            			}
HXLINE( 419)			bool _hx_tmp9;
HXDLIN( 419)			if (::openfl::display::_internal::CairoGraphics_obj::hasStroke) {
HXLINE( 419)				_hx_tmp9 = ::openfl::display::_internal::CairoGraphics_obj::cairo->inStroke(x,y);
            			}
            			else {
HXLINE( 419)				_hx_tmp9 = false;
            			}
HXDLIN( 419)			if (_hx_tmp9) {
HXLINE( 421)				hitTest = true;
            			}
HXLINE( 424)			data->destroy();
HXLINE( 426)			::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE( 427)			return hitTest;
            		}
HXLINE( 227)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CairoGraphics_obj,hitTest,return )

bool CairoGraphics_obj::isCCW(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_437_isCCW)
HXDLIN( 437)		return ((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,isCCW,return )

 ::Dynamic CairoGraphics_obj::normalizeUVT( ::openfl::_Vector::FloatVector uvt,::hx::Null< bool >  __o_skipT){
            		bool skipT = __o_skipT.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_441_normalizeUVT)
HXLINE( 442)		Float max = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 443)		Float tmp = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 444)		int len = uvt->get_length();
HXLINE( 446)		{
HXLINE( 446)			int _g = 1;
HXDLIN( 446)			int _g1 = (len + 1);
HXDLIN( 446)			while((_g < _g1)){
HXLINE( 446)				_g = (_g + 1);
HXDLIN( 446)				int t = (_g - 1);
HXLINE( 448)				bool _hx_tmp;
HXDLIN( 448)				if (skipT) {
HXLINE( 448)					_hx_tmp = (::hx::Mod(t,3) == 0);
            				}
            				else {
HXLINE( 448)					_hx_tmp = false;
            				}
HXDLIN( 448)				if (_hx_tmp) {
HXLINE( 450)					continue;
            				}
HXLINE( 453)				tmp = uvt->get((t - 1));
HXLINE( 455)				if ((max < tmp)) {
HXLINE( 457)					max = tmp;
            				}
            			}
            		}
HXLINE( 461)		if (!(skipT)) {
HXLINE( 463)			return  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("max",a4,0a,53,00),max)
            				->setFixed(1,HX_("uvt",f3,2e,59,00),uvt));
            		}
HXLINE( 466)		int length = null();
HXDLIN( 466)		bool fixed = null();
HXDLIN( 466)		::Array< Float > array = null();
HXDLIN( 466)		 ::openfl::_Vector::FloatVector result =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length,fixed,array,true);
HXLINE( 468)		{
HXLINE( 468)			int _g2 = 1;
HXDLIN( 468)			int _g3 = (len + 1);
HXDLIN( 468)			while((_g2 < _g3)){
HXLINE( 468)				_g2 = (_g2 + 1);
HXDLIN( 468)				int t1 = (_g2 - 1);
HXLINE( 470)				bool _hx_tmp1;
HXDLIN( 470)				if (skipT) {
HXLINE( 470)					_hx_tmp1 = (::hx::Mod(t1,3) == 0);
            				}
            				else {
HXLINE( 470)					_hx_tmp1 = false;
            				}
HXDLIN( 470)				if (_hx_tmp1) {
HXLINE( 472)					continue;
            				}
HXLINE( 475)				result->push(uvt->get((t1 - 1)));
            			}
            		}
HXLINE( 478)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("max",a4,0a,53,00),max)
            			->setFixed(1,HX_("uvt",f3,2e,59,00),result));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,normalizeUVT,return )

void CairoGraphics_obj::playCommands( ::openfl::display::_internal::DrawCommandBuffer commands,::hx::Null< bool >  __o_stroke){
            		bool stroke = __o_stroke.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_482_playCommands)
HXLINE( 483)		if ((commands->get_length() == 0)) {
HXLINE( 483)			return;
            		}
HXLINE( 485)		::openfl::display::_internal::CairoGraphics_obj::bounds = ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___bounds;
HXLINE( 487)		Float offsetX = ::openfl::display::_internal::CairoGraphics_obj::bounds->x;
HXLINE( 488)		Float offsetY = ::openfl::display::_internal::CairoGraphics_obj::bounds->y;
HXLINE( 490)		Float positionX = ((Float)0.0);
HXLINE( 491)		Float positionY = ((Float)0.0);
HXLINE( 493)		bool closeGap = false;
HXLINE( 494)		Float startX = ((Float)0.0);
HXLINE( 495)		Float startY = ((Float)0.0);
HXLINE( 496)		bool setStart = false;
HXLINE( 498)		::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(1);
HXLINE( 499)		::openfl::display::_internal::CairoGraphics_obj::cairo->set_antialias(3);
HXLINE( 501)		bool hasPath = false;
HXLINE( 503)		 ::openfl::display::_internal::DrawCommandReader data =  ::openfl::display::_internal::DrawCommandReader_obj::__alloc( HX_CTX ,commands);
HXLINE( 505)		Float x;
HXDLIN( 505)		Float y;
HXDLIN( 505)		Float width;
HXDLIN( 505)		Float height;
HXDLIN( 505)		Float kappa = ((Float).5522848);
HXDLIN( 505)		Float ox;
HXDLIN( 505)		Float oy;
HXDLIN( 505)		Float xe;
HXDLIN( 505)		Float ye;
HXDLIN( 505)		Float xm;
HXDLIN( 505)		Float ym;
HXDLIN( 505)		Float r;
HXDLIN( 505)		Float g;
HXDLIN( 505)		Float b;
HXLINE( 520)		{
HXLINE( 520)			int _g = 0;
HXDLIN( 520)			::Array< ::Dynamic> _g1 = commands->types;
HXDLIN( 520)			while((_g < _g1->length)){
HXLINE( 520)				 ::openfl::display::_internal::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::display::_internal::DrawCommandType >();
HXDLIN( 520)				_g = (_g + 1);
HXLINE( 522)				switch((int)(type->_hx_getIndex())){
            					case (int)0: {
HXLINE( 700)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data1 = data;
HXDLIN( 700)								data1->oPos = (data1->oPos + 2);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data2 = data;
HXDLIN( 700)								data2->bPos = (data2->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data3 = data;
HXDLIN( 700)								data3->iPos = (data3->iPos + 1);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data4 = data;
HXDLIN( 700)								data4->fPos = (data4->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data5 = data;
HXDLIN( 700)								data5->oPos = (data5->oPos + 4);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data6 = data;
HXDLIN( 700)								data6->iiPos = (data6->iiPos + 2);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data7 = data;
HXDLIN( 700)								data7->ffPos = (data7->ffPos + 1);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data8 = data;
HXDLIN( 700)								data8->fPos = (data8->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data9 = data;
HXDLIN( 700)								data9->oPos = (data9->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data10 = data;
HXDLIN( 700)								data10->fPos = (data10->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data11 = data;
HXDLIN( 700)								data11->fPos = (data11->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data12 = data;
HXDLIN( 700)								data12->fPos = (data12->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data13 = data;
HXDLIN( 700)								data13->fPos = (data13->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data14 = data;
HXDLIN( 700)								data14->oPos = (data14->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data15 = data;
HXDLIN( 700)								data15->fPos = (data15->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data16 = data;
HXDLIN( 700)								data16->fPos = (data16->fPos + 5);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data17 = data;
HXDLIN( 700)								data17->oPos = (data17->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data18 = data;
HXDLIN( 700)								data18->oPos = (data18->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data19 = data;
HXDLIN( 700)								data19->oPos = (data19->oPos + 2);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data20 = data;
HXDLIN( 700)								data20->bPos = (data20->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data21 = data;
HXDLIN( 700)								data21->oPos = (data21->oPos + 4);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data22 = data;
HXDLIN( 700)								data22->iiPos = (data22->iiPos + 2);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data23 = data;
HXDLIN( 700)								data23->ffPos = (data23->ffPos + 1);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data24 = data;
HXDLIN( 700)								data24->fPos = (data24->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data25 = data;
HXDLIN( 700)								data25->oPos = (data25->oPos + 4);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data26 = data;
HXDLIN( 700)								data26->iPos = (data26->iPos + 1);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data27 = data;
HXDLIN( 700)								data27->fPos = (data27->fPos + 2);
HXDLIN( 700)								 ::openfl::display::_internal::DrawCommandReader data28 = data;
HXDLIN( 700)								data28->bPos = (data28->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data29 = data;
HXDLIN( 700)								data29->fPos = (data29->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data30 = data;
HXDLIN( 700)								data30->fPos = (data30->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data31 = data;
HXDLIN( 700)								data31->oPos = (data31->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 700)								 ::openfl::display::_internal::DrawCommandReader data32 = data;
HXDLIN( 700)								data32->oPos = (data32->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 700)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 700)						 ::openfl::display::_internal::DrawCommandReader c = data;
HXLINE( 701)						::openfl::display::_internal::CairoGraphics_obj::fillPattern = ::openfl::display::_internal::CairoGraphics_obj::createImagePattern(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
HXLINE( 703)						::openfl::display::_internal::CairoGraphics_obj::bitmapFill = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXLINE( 704)						::openfl::display::_internal::CairoGraphics_obj::bitmapRepeat = c->buffer->b->__get(c->bPos);
HXLINE( 706)						::openfl::display::_internal::CairoGraphics_obj::hasFill = true;
            					}
            					break;
            					case (int)1: {
HXLINE( 709)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data33 = data;
HXDLIN( 709)								data33->oPos = (data33->oPos + 2);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data34 = data;
HXDLIN( 709)								data34->bPos = (data34->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data35 = data;
HXDLIN( 709)								data35->iPos = (data35->iPos + 1);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data36 = data;
HXDLIN( 709)								data36->fPos = (data36->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data37 = data;
HXDLIN( 709)								data37->oPos = (data37->oPos + 4);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data38 = data;
HXDLIN( 709)								data38->iiPos = (data38->iiPos + 2);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data39 = data;
HXDLIN( 709)								data39->ffPos = (data39->ffPos + 1);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data40 = data;
HXDLIN( 709)								data40->fPos = (data40->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data41 = data;
HXDLIN( 709)								data41->oPos = (data41->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data42 = data;
HXDLIN( 709)								data42->fPos = (data42->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data43 = data;
HXDLIN( 709)								data43->fPos = (data43->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data44 = data;
HXDLIN( 709)								data44->fPos = (data44->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data45 = data;
HXDLIN( 709)								data45->fPos = (data45->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data46 = data;
HXDLIN( 709)								data46->oPos = (data46->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data47 = data;
HXDLIN( 709)								data47->fPos = (data47->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data48 = data;
HXDLIN( 709)								data48->fPos = (data48->fPos + 5);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data49 = data;
HXDLIN( 709)								data49->oPos = (data49->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data50 = data;
HXDLIN( 709)								data50->oPos = (data50->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data51 = data;
HXDLIN( 709)								data51->oPos = (data51->oPos + 2);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data52 = data;
HXDLIN( 709)								data52->bPos = (data52->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data53 = data;
HXDLIN( 709)								data53->oPos = (data53->oPos + 4);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data54 = data;
HXDLIN( 709)								data54->iiPos = (data54->iiPos + 2);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data55 = data;
HXDLIN( 709)								data55->ffPos = (data55->ffPos + 1);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data56 = data;
HXDLIN( 709)								data56->fPos = (data56->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data57 = data;
HXDLIN( 709)								data57->oPos = (data57->oPos + 4);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data58 = data;
HXDLIN( 709)								data58->iPos = (data58->iPos + 1);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data59 = data;
HXDLIN( 709)								data59->fPos = (data59->fPos + 2);
HXDLIN( 709)								 ::openfl::display::_internal::DrawCommandReader data60 = data;
HXDLIN( 709)								data60->bPos = (data60->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data61 = data;
HXDLIN( 709)								data61->fPos = (data61->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data62 = data;
HXDLIN( 709)								data62->fPos = (data62->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data63 = data;
HXDLIN( 709)								data63->oPos = (data63->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 709)								 ::openfl::display::_internal::DrawCommandReader data64 = data;
HXDLIN( 709)								data64->oPos = (data64->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 709)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 709)						 ::openfl::display::_internal::DrawCommandReader c1 = data;
HXLINE( 710)						if ((c1->buffer->f->__get(c1->fPos) < ((Float)0.005))) {
HXLINE( 712)							::openfl::display::_internal::CairoGraphics_obj::hasFill = false;
            						}
            						else {
HXLINE( 716)							if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::fillPattern )) {
HXLINE( 718)								::openfl::display::_internal::CairoGraphics_obj::fillPatternMatrix = null();
            							}
HXLINE( 721)							::openfl::display::_internal::CairoGraphics_obj::fillPattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA((( (Float)(::hx::UShr((c1->buffer->i->__get(c1->iPos) & 16711680),16)) ) / ( (Float)(255) )),(( (Float)(::hx::UShr((c1->buffer->i->__get(c1->iPos) & 65280),8)) ) / ( (Float)(255) )),(( (Float)((c1->buffer->i->__get(c1->iPos) & 255)) ) / ( (Float)(255) )),c1->buffer->f->__get(c1->fPos));
HXLINE( 723)							::openfl::display::_internal::CairoGraphics_obj::hasFill = true;
            						}
HXLINE( 726)						::openfl::display::_internal::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)2: {
HXLINE( 729)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data65 = data;
HXDLIN( 729)								data65->oPos = (data65->oPos + 2);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data66 = data;
HXDLIN( 729)								data66->bPos = (data66->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data67 = data;
HXDLIN( 729)								data67->iPos = (data67->iPos + 1);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data68 = data;
HXDLIN( 729)								data68->fPos = (data68->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data69 = data;
HXDLIN( 729)								data69->oPos = (data69->oPos + 4);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data70 = data;
HXDLIN( 729)								data70->iiPos = (data70->iiPos + 2);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data71 = data;
HXDLIN( 729)								data71->ffPos = (data71->ffPos + 1);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data72 = data;
HXDLIN( 729)								data72->fPos = (data72->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data73 = data;
HXDLIN( 729)								data73->oPos = (data73->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data74 = data;
HXDLIN( 729)								data74->fPos = (data74->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data75 = data;
HXDLIN( 729)								data75->fPos = (data75->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data76 = data;
HXDLIN( 729)								data76->fPos = (data76->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data77 = data;
HXDLIN( 729)								data77->fPos = (data77->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data78 = data;
HXDLIN( 729)								data78->oPos = (data78->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data79 = data;
HXDLIN( 729)								data79->fPos = (data79->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data80 = data;
HXDLIN( 729)								data80->fPos = (data80->fPos + 5);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data81 = data;
HXDLIN( 729)								data81->oPos = (data81->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data82 = data;
HXDLIN( 729)								data82->oPos = (data82->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data83 = data;
HXDLIN( 729)								data83->oPos = (data83->oPos + 2);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data84 = data;
HXDLIN( 729)								data84->bPos = (data84->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data85 = data;
HXDLIN( 729)								data85->oPos = (data85->oPos + 4);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data86 = data;
HXDLIN( 729)								data86->iiPos = (data86->iiPos + 2);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data87 = data;
HXDLIN( 729)								data87->ffPos = (data87->ffPos + 1);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data88 = data;
HXDLIN( 729)								data88->fPos = (data88->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data89 = data;
HXDLIN( 729)								data89->oPos = (data89->oPos + 4);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data90 = data;
HXDLIN( 729)								data90->iPos = (data90->iPos + 1);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data91 = data;
HXDLIN( 729)								data91->fPos = (data91->fPos + 2);
HXDLIN( 729)								 ::openfl::display::_internal::DrawCommandReader data92 = data;
HXDLIN( 729)								data92->bPos = (data92->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data93 = data;
HXDLIN( 729)								data93->fPos = (data93->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data94 = data;
HXDLIN( 729)								data94->fPos = (data94->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data95 = data;
HXDLIN( 729)								data95->oPos = (data95->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 729)								 ::openfl::display::_internal::DrawCommandReader data96 = data;
HXDLIN( 729)								data96->oPos = (data96->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 729)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 729)						 ::openfl::display::_internal::DrawCommandReader c2 = data;
HXLINE( 730)						if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::fillPattern )) {
HXLINE( 732)							::openfl::display::_internal::CairoGraphics_obj::fillPatternMatrix = null();
            						}
HXLINE( 735)						::openfl::display::_internal::CairoGraphics_obj::fillPattern = ::openfl::display::_internal::CairoGraphics_obj::createGradientPattern(c2->buffer->o->__get(c2->oPos),c2->buffer->ii->__get(c2->iiPos).StaticCast< ::Array< int > >(),c2->buffer->ff->__get(c2->ffPos).StaticCast< ::Array< Float > >(),c2->buffer->ii->__get((c2->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c2->buffer->o->__get((c2->oPos + 1))) ),c2->buffer->o->__get((c2->oPos + 2)),c2->buffer->o->__get((c2->oPos + 3)),c2->buffer->f->__get(c2->fPos));
HXLINE( 738)						::openfl::display::_internal::CairoGraphics_obj::hasFill = true;
HXLINE( 739)						::openfl::display::_internal::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)3: {
HXLINE( 742)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data97 = data;
HXDLIN( 742)								data97->oPos = (data97->oPos + 2);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data98 = data;
HXDLIN( 742)								data98->bPos = (data98->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data99 = data;
HXDLIN( 742)								data99->iPos = (data99->iPos + 1);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data100 = data;
HXDLIN( 742)								data100->fPos = (data100->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data101 = data;
HXDLIN( 742)								data101->oPos = (data101->oPos + 4);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data102 = data;
HXDLIN( 742)								data102->iiPos = (data102->iiPos + 2);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data103 = data;
HXDLIN( 742)								data103->ffPos = (data103->ffPos + 1);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data104 = data;
HXDLIN( 742)								data104->fPos = (data104->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data105 = data;
HXDLIN( 742)								data105->oPos = (data105->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data106 = data;
HXDLIN( 742)								data106->fPos = (data106->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data107 = data;
HXDLIN( 742)								data107->fPos = (data107->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data108 = data;
HXDLIN( 742)								data108->fPos = (data108->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data109 = data;
HXDLIN( 742)								data109->fPos = (data109->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data110 = data;
HXDLIN( 742)								data110->oPos = (data110->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data111 = data;
HXDLIN( 742)								data111->fPos = (data111->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data112 = data;
HXDLIN( 742)								data112->fPos = (data112->fPos + 5);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data113 = data;
HXDLIN( 742)								data113->oPos = (data113->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data114 = data;
HXDLIN( 742)								data114->oPos = (data114->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data115 = data;
HXDLIN( 742)								data115->oPos = (data115->oPos + 2);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data116 = data;
HXDLIN( 742)								data116->bPos = (data116->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data117 = data;
HXDLIN( 742)								data117->oPos = (data117->oPos + 4);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data118 = data;
HXDLIN( 742)								data118->iiPos = (data118->iiPos + 2);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data119 = data;
HXDLIN( 742)								data119->ffPos = (data119->ffPos + 1);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data120 = data;
HXDLIN( 742)								data120->fPos = (data120->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data121 = data;
HXDLIN( 742)								data121->oPos = (data121->oPos + 4);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data122 = data;
HXDLIN( 742)								data122->iPos = (data122->iPos + 1);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data123 = data;
HXDLIN( 742)								data123->fPos = (data123->fPos + 2);
HXDLIN( 742)								 ::openfl::display::_internal::DrawCommandReader data124 = data;
HXDLIN( 742)								data124->bPos = (data124->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data125 = data;
HXDLIN( 742)								data125->fPos = (data125->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data126 = data;
HXDLIN( 742)								data126->fPos = (data126->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data127 = data;
HXDLIN( 742)								data127->oPos = (data127->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 742)								 ::openfl::display::_internal::DrawCommandReader data128 = data;
HXDLIN( 742)								data128->oPos = (data128->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 742)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 742)						 ::openfl::display::_internal::DrawCommandReader c3 = data;
HXLINE( 743)						 ::openfl::display::_internal::ShaderBuffer shaderBuffer = ( ( ::openfl::display::_internal::ShaderBuffer)(c3->buffer->o->__get(c3->oPos)) );
HXLINE( 745)						if ((shaderBuffer->inputCount > 0)) {
HXLINE( 747)							::openfl::display::_internal::CairoGraphics_obj::fillPattern = ::openfl::display::_internal::CairoGraphics_obj::createImagePattern(shaderBuffer->inputs->__get(0).StaticCast<  ::openfl::display::BitmapData >(),null(),::hx::IsNotEq( shaderBuffer->inputWrap->__get(0),0 ),::hx::IsNotEq( shaderBuffer->inputFilter->__get(0),5 ));
HXLINE( 750)							::openfl::display::_internal::CairoGraphics_obj::bitmapFill = shaderBuffer->inputs->__get(0).StaticCast<  ::openfl::display::BitmapData >();
HXLINE( 751)							::openfl::display::_internal::CairoGraphics_obj::bitmapRepeat = false;
HXLINE( 753)							::openfl::display::_internal::CairoGraphics_obj::hasFill = true;
            						}
            					}
            					break;
            					case (int)4: {
HXLINE( 525)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data129 = data;
HXDLIN( 525)								data129->oPos = (data129->oPos + 2);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data130 = data;
HXDLIN( 525)								data130->bPos = (data130->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data131 = data;
HXDLIN( 525)								data131->iPos = (data131->iPos + 1);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data132 = data;
HXDLIN( 525)								data132->fPos = (data132->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data133 = data;
HXDLIN( 525)								data133->oPos = (data133->oPos + 4);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data134 = data;
HXDLIN( 525)								data134->iiPos = (data134->iiPos + 2);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data135 = data;
HXDLIN( 525)								data135->ffPos = (data135->ffPos + 1);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data136 = data;
HXDLIN( 525)								data136->fPos = (data136->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data137 = data;
HXDLIN( 525)								data137->oPos = (data137->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data138 = data;
HXDLIN( 525)								data138->fPos = (data138->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data139 = data;
HXDLIN( 525)								data139->fPos = (data139->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data140 = data;
HXDLIN( 525)								data140->fPos = (data140->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data141 = data;
HXDLIN( 525)								data141->fPos = (data141->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data142 = data;
HXDLIN( 525)								data142->oPos = (data142->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data143 = data;
HXDLIN( 525)								data143->fPos = (data143->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data144 = data;
HXDLIN( 525)								data144->fPos = (data144->fPos + 5);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data145 = data;
HXDLIN( 525)								data145->oPos = (data145->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data146 = data;
HXDLIN( 525)								data146->oPos = (data146->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data147 = data;
HXDLIN( 525)								data147->oPos = (data147->oPos + 2);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data148 = data;
HXDLIN( 525)								data148->bPos = (data148->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data149 = data;
HXDLIN( 525)								data149->oPos = (data149->oPos + 4);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data150 = data;
HXDLIN( 525)								data150->iiPos = (data150->iiPos + 2);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data151 = data;
HXDLIN( 525)								data151->ffPos = (data151->ffPos + 1);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data152 = data;
HXDLIN( 525)								data152->fPos = (data152->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data153 = data;
HXDLIN( 525)								data153->oPos = (data153->oPos + 4);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data154 = data;
HXDLIN( 525)								data154->iPos = (data154->iPos + 1);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data155 = data;
HXDLIN( 525)								data155->fPos = (data155->fPos + 2);
HXDLIN( 525)								 ::openfl::display::_internal::DrawCommandReader data156 = data;
HXDLIN( 525)								data156->bPos = (data156->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data157 = data;
HXDLIN( 525)								data157->fPos = (data157->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data158 = data;
HXDLIN( 525)								data158->fPos = (data158->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data159 = data;
HXDLIN( 525)								data159->oPos = (data159->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 525)								 ::openfl::display::_internal::DrawCommandReader data160 = data;
HXDLIN( 525)								data160->oPos = (data160->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 525)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 525)						 ::openfl::display::_internal::DrawCommandReader c4 = data;
HXLINE( 526)						hasPath = true;
HXLINE( 527)						::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((c4->buffer->f->__get(c4->fPos) - offsetX),(c4->buffer->f->__get((c4->fPos + 1)) - offsetY),(c4->buffer->f->__get((c4->fPos + 2)) - offsetX),(c4->buffer->f->__get((c4->fPos + 3)) - offsetY),(c4->buffer->f->__get((c4->fPos + 4)) - offsetX),(c4->buffer->f->__get((c4->fPos + 5)) - offsetY));
            					}
            					break;
            					case (int)5: {
HXLINE( 537)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data161 = data;
HXDLIN( 537)								data161->oPos = (data161->oPos + 2);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data162 = data;
HXDLIN( 537)								data162->bPos = (data162->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data163 = data;
HXDLIN( 537)								data163->iPos = (data163->iPos + 1);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data164 = data;
HXDLIN( 537)								data164->fPos = (data164->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data165 = data;
HXDLIN( 537)								data165->oPos = (data165->oPos + 4);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data166 = data;
HXDLIN( 537)								data166->iiPos = (data166->iiPos + 2);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data167 = data;
HXDLIN( 537)								data167->ffPos = (data167->ffPos + 1);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data168 = data;
HXDLIN( 537)								data168->fPos = (data168->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data169 = data;
HXDLIN( 537)								data169->oPos = (data169->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data170 = data;
HXDLIN( 537)								data170->fPos = (data170->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data171 = data;
HXDLIN( 537)								data171->fPos = (data171->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data172 = data;
HXDLIN( 537)								data172->fPos = (data172->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data173 = data;
HXDLIN( 537)								data173->fPos = (data173->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data174 = data;
HXDLIN( 537)								data174->oPos = (data174->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data175 = data;
HXDLIN( 537)								data175->fPos = (data175->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data176 = data;
HXDLIN( 537)								data176->fPos = (data176->fPos + 5);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data177 = data;
HXDLIN( 537)								data177->oPos = (data177->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data178 = data;
HXDLIN( 537)								data178->oPos = (data178->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data179 = data;
HXDLIN( 537)								data179->oPos = (data179->oPos + 2);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data180 = data;
HXDLIN( 537)								data180->bPos = (data180->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data181 = data;
HXDLIN( 537)								data181->oPos = (data181->oPos + 4);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data182 = data;
HXDLIN( 537)								data182->iiPos = (data182->iiPos + 2);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data183 = data;
HXDLIN( 537)								data183->ffPos = (data183->ffPos + 1);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data184 = data;
HXDLIN( 537)								data184->fPos = (data184->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data185 = data;
HXDLIN( 537)								data185->oPos = (data185->oPos + 4);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data186 = data;
HXDLIN( 537)								data186->iPos = (data186->iPos + 1);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data187 = data;
HXDLIN( 537)								data187->fPos = (data187->fPos + 2);
HXDLIN( 537)								 ::openfl::display::_internal::DrawCommandReader data188 = data;
HXDLIN( 537)								data188->bPos = (data188->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data189 = data;
HXDLIN( 537)								data189->fPos = (data189->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data190 = data;
HXDLIN( 537)								data190->fPos = (data190->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data191 = data;
HXDLIN( 537)								data191->oPos = (data191->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 537)								 ::openfl::display::_internal::DrawCommandReader data192 = data;
HXDLIN( 537)								data192->oPos = (data192->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 537)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 537)						 ::openfl::display::_internal::DrawCommandReader c5 = data;
HXLINE( 538)						hasPath = true;
HXLINE( 539)						::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((c5->buffer->f->__get(c5->fPos) - offsetX),(c5->buffer->f->__get((c5->fPos + 1)) - offsetY),(c5->buffer->f->__get((c5->fPos + 2)) - offsetX),(c5->buffer->f->__get((c5->fPos + 3)) - offsetY));
            					}
            					break;
            					case (int)6: {
HXLINE( 542)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data193 = data;
HXDLIN( 542)								data193->oPos = (data193->oPos + 2);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data194 = data;
HXDLIN( 542)								data194->bPos = (data194->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data195 = data;
HXDLIN( 542)								data195->iPos = (data195->iPos + 1);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data196 = data;
HXDLIN( 542)								data196->fPos = (data196->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data197 = data;
HXDLIN( 542)								data197->oPos = (data197->oPos + 4);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data198 = data;
HXDLIN( 542)								data198->iiPos = (data198->iiPos + 2);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data199 = data;
HXDLIN( 542)								data199->ffPos = (data199->ffPos + 1);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data200 = data;
HXDLIN( 542)								data200->fPos = (data200->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data201 = data;
HXDLIN( 542)								data201->oPos = (data201->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data202 = data;
HXDLIN( 542)								data202->fPos = (data202->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data203 = data;
HXDLIN( 542)								data203->fPos = (data203->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data204 = data;
HXDLIN( 542)								data204->fPos = (data204->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data205 = data;
HXDLIN( 542)								data205->fPos = (data205->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data206 = data;
HXDLIN( 542)								data206->oPos = (data206->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data207 = data;
HXDLIN( 542)								data207->fPos = (data207->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data208 = data;
HXDLIN( 542)								data208->fPos = (data208->fPos + 5);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data209 = data;
HXDLIN( 542)								data209->oPos = (data209->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data210 = data;
HXDLIN( 542)								data210->oPos = (data210->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data211 = data;
HXDLIN( 542)								data211->oPos = (data211->oPos + 2);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data212 = data;
HXDLIN( 542)								data212->bPos = (data212->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data213 = data;
HXDLIN( 542)								data213->oPos = (data213->oPos + 4);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data214 = data;
HXDLIN( 542)								data214->iiPos = (data214->iiPos + 2);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data215 = data;
HXDLIN( 542)								data215->ffPos = (data215->ffPos + 1);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data216 = data;
HXDLIN( 542)								data216->fPos = (data216->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data217 = data;
HXDLIN( 542)								data217->oPos = (data217->oPos + 4);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data218 = data;
HXDLIN( 542)								data218->iPos = (data218->iPos + 1);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data219 = data;
HXDLIN( 542)								data219->fPos = (data219->fPos + 2);
HXDLIN( 542)								 ::openfl::display::_internal::DrawCommandReader data220 = data;
HXDLIN( 542)								data220->bPos = (data220->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data221 = data;
HXDLIN( 542)								data221->fPos = (data221->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data222 = data;
HXDLIN( 542)								data222->fPos = (data222->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data223 = data;
HXDLIN( 542)								data223->oPos = (data223->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 542)								 ::openfl::display::_internal::DrawCommandReader data224 = data;
HXDLIN( 542)								data224->oPos = (data224->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 542)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 542)						 ::openfl::display::_internal::DrawCommandReader c6 = data;
HXLINE( 543)						hasPath = true;
HXLINE( 544)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(((c6->buffer->f->__get(c6->fPos) - offsetX) + c6->buffer->f->__get((c6->fPos + 2))),(c6->buffer->f->__get((c6->fPos + 1)) - offsetY));
HXLINE( 545)						::openfl::display::_internal::CairoGraphics_obj::cairo->arc((c6->buffer->f->__get(c6->fPos) - offsetX),(c6->buffer->f->__get((c6->fPos + 1)) - offsetY),c6->buffer->f->__get((c6->fPos + 2)),( (Float)(0) ),(::Math_obj::PI * ( (Float)(2) )));
            					}
            					break;
            					case (int)7: {
HXLINE( 553)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data225 = data;
HXDLIN( 553)								data225->oPos = (data225->oPos + 2);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data226 = data;
HXDLIN( 553)								data226->bPos = (data226->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data227 = data;
HXDLIN( 553)								data227->iPos = (data227->iPos + 1);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data228 = data;
HXDLIN( 553)								data228->fPos = (data228->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data229 = data;
HXDLIN( 553)								data229->oPos = (data229->oPos + 4);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data230 = data;
HXDLIN( 553)								data230->iiPos = (data230->iiPos + 2);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data231 = data;
HXDLIN( 553)								data231->ffPos = (data231->ffPos + 1);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data232 = data;
HXDLIN( 553)								data232->fPos = (data232->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data233 = data;
HXDLIN( 553)								data233->oPos = (data233->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data234 = data;
HXDLIN( 553)								data234->fPos = (data234->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data235 = data;
HXDLIN( 553)								data235->fPos = (data235->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data236 = data;
HXDLIN( 553)								data236->fPos = (data236->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data237 = data;
HXDLIN( 553)								data237->fPos = (data237->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data238 = data;
HXDLIN( 553)								data238->oPos = (data238->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data239 = data;
HXDLIN( 553)								data239->fPos = (data239->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data240 = data;
HXDLIN( 553)								data240->fPos = (data240->fPos + 5);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data241 = data;
HXDLIN( 553)								data241->oPos = (data241->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data242 = data;
HXDLIN( 553)								data242->oPos = (data242->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data243 = data;
HXDLIN( 553)								data243->oPos = (data243->oPos + 2);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data244 = data;
HXDLIN( 553)								data244->bPos = (data244->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data245 = data;
HXDLIN( 553)								data245->oPos = (data245->oPos + 4);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data246 = data;
HXDLIN( 553)								data246->iiPos = (data246->iiPos + 2);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data247 = data;
HXDLIN( 553)								data247->ffPos = (data247->ffPos + 1);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data248 = data;
HXDLIN( 553)								data248->fPos = (data248->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data249 = data;
HXDLIN( 553)								data249->oPos = (data249->oPos + 4);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data250 = data;
HXDLIN( 553)								data250->iPos = (data250->iPos + 1);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data251 = data;
HXDLIN( 553)								data251->fPos = (data251->fPos + 2);
HXDLIN( 553)								 ::openfl::display::_internal::DrawCommandReader data252 = data;
HXDLIN( 553)								data252->bPos = (data252->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data253 = data;
HXDLIN( 553)								data253->fPos = (data253->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data254 = data;
HXDLIN( 553)								data254->fPos = (data254->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data255 = data;
HXDLIN( 553)								data255->oPos = (data255->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 553)								 ::openfl::display::_internal::DrawCommandReader data256 = data;
HXDLIN( 553)								data256->oPos = (data256->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 553)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 553)						 ::openfl::display::_internal::DrawCommandReader c7 = data;
HXLINE( 554)						hasPath = true;
HXLINE( 556)						x = c7->buffer->f->__get(c7->fPos);
HXLINE( 557)						y = c7->buffer->f->__get((c7->fPos + 1));
HXLINE( 558)						width = c7->buffer->f->__get((c7->fPos + 2));
HXLINE( 559)						height = c7->buffer->f->__get((c7->fPos + 3));
HXLINE( 561)						x = (x - offsetX);
HXLINE( 562)						y = (y - offsetY);
HXLINE( 564)						ox = ((width / ( (Float)(2) )) * kappa);
HXLINE( 565)						oy = ((height / ( (Float)(2) )) * kappa);
HXLINE( 566)						xe = (x + width);
HXLINE( 567)						ye = (y + height);
HXLINE( 568)						xm = (x + (width / ( (Float)(2) )));
HXLINE( 569)						ym = (y + (height / ( (Float)(2) )));
HXLINE( 571)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE( 572)						::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE( 573)						::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE( 574)						::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE( 575)						::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            					}
            					break;
            					case (int)8: {
HXLINE( 757)						int cacheExtend = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_extend(::openfl::display::_internal::CairoGraphics_obj::fillPattern);
HXLINE( 758)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::display::_internal::CairoGraphics_obj::fillPattern,0);
HXLINE( 760)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data257 = data;
HXDLIN( 760)								data257->oPos = (data257->oPos + 2);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data258 = data;
HXDLIN( 760)								data258->bPos = (data258->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data259 = data;
HXDLIN( 760)								data259->iPos = (data259->iPos + 1);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data260 = data;
HXDLIN( 760)								data260->fPos = (data260->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data261 = data;
HXDLIN( 760)								data261->oPos = (data261->oPos + 4);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data262 = data;
HXDLIN( 760)								data262->iiPos = (data262->iiPos + 2);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data263 = data;
HXDLIN( 760)								data263->ffPos = (data263->ffPos + 1);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data264 = data;
HXDLIN( 760)								data264->fPos = (data264->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data265 = data;
HXDLIN( 760)								data265->oPos = (data265->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data266 = data;
HXDLIN( 760)								data266->fPos = (data266->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data267 = data;
HXDLIN( 760)								data267->fPos = (data267->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data268 = data;
HXDLIN( 760)								data268->fPos = (data268->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data269 = data;
HXDLIN( 760)								data269->fPos = (data269->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data270 = data;
HXDLIN( 760)								data270->oPos = (data270->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data271 = data;
HXDLIN( 760)								data271->fPos = (data271->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data272 = data;
HXDLIN( 760)								data272->fPos = (data272->fPos + 5);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data273 = data;
HXDLIN( 760)								data273->oPos = (data273->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data274 = data;
HXDLIN( 760)								data274->oPos = (data274->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data275 = data;
HXDLIN( 760)								data275->oPos = (data275->oPos + 2);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data276 = data;
HXDLIN( 760)								data276->bPos = (data276->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data277 = data;
HXDLIN( 760)								data277->oPos = (data277->oPos + 4);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data278 = data;
HXDLIN( 760)								data278->iiPos = (data278->iiPos + 2);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data279 = data;
HXDLIN( 760)								data279->ffPos = (data279->ffPos + 1);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data280 = data;
HXDLIN( 760)								data280->fPos = (data280->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data281 = data;
HXDLIN( 760)								data281->oPos = (data281->oPos + 4);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data282 = data;
HXDLIN( 760)								data282->iPos = (data282->iPos + 1);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data283 = data;
HXDLIN( 760)								data283->fPos = (data283->fPos + 2);
HXDLIN( 760)								 ::openfl::display::_internal::DrawCommandReader data284 = data;
HXDLIN( 760)								data284->bPos = (data284->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data285 = data;
HXDLIN( 760)								data285->fPos = (data285->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data286 = data;
HXDLIN( 760)								data286->fPos = (data286->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data287 = data;
HXDLIN( 760)								data287->oPos = (data287->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 760)								 ::openfl::display::_internal::DrawCommandReader data288 = data;
HXDLIN( 760)								data288->oPos = (data288->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 760)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN( 760)						 ::openfl::display::_internal::DrawCommandReader c8 = data;
HXLINE( 761)						 ::openfl::_Vector::FloatVector rects = ( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get(c8->oPos)) );
HXLINE( 762)						 ::openfl::_Vector::IntVector indices = ( ( ::openfl::_Vector::IntVector)(c8->buffer->o->__get((c8->oPos + 1))) );
HXLINE( 763)						 ::openfl::_Vector::FloatVector transforms = ( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get((c8->oPos + 2))) );
HXLINE( 765)						bool hasIndices = ::hx::IsNotNull( indices );
HXLINE( 766)						bool transformABCD = false;
HXDLIN( 766)						bool transformXY = false;
HXLINE( 768)						int length;
HXDLIN( 768)						if (hasIndices) {
HXLINE( 768)							length = indices->get_length();
            						}
            						else {
HXLINE( 768)							length = ::Math_obj::floor((( (Float)(rects->get_length()) ) / ( (Float)(4) )));
            						}
HXLINE( 769)						if ((length == 0)) {
HXLINE( 769)							return;
            						}
HXLINE( 771)						if (::hx::IsNotNull( transforms )) {
HXLINE( 773)							if ((transforms->get_length() >= (length * 6))) {
HXLINE( 775)								transformABCD = true;
HXLINE( 776)								transformXY = true;
            							}
            							else {
HXLINE( 778)								if ((transforms->get_length() >= (length * 4))) {
HXLINE( 780)									transformABCD = true;
            								}
            								else {
HXLINE( 782)									if ((transforms->get_length() >= (length * 2))) {
HXLINE( 784)										transformXY = true;
            									}
            								}
            							}
            						}
HXLINE( 788)						 ::openfl::geom::Rectangle tileRect = ::openfl::geom::Rectangle_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Rectangle >();
HXLINE( 789)						 ::openfl::geom::Matrix tileTransform = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE( 791)						 ::openfl::geom::Rectangle sourceRect;
HXDLIN( 791)						if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::bitmapFill )) {
HXLINE( 791)							sourceRect = ::openfl::display::_internal::CairoGraphics_obj::bitmapFill->rect;
            						}
            						else {
HXLINE( 791)							sourceRect = null();
            						}
HXLINE( 792)						::openfl::display::_internal::CairoGraphics_obj::tempMatrix3->identity();
HXLINE( 794)						 ::openfl::geom::Matrix transform = ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___renderTransform;
HXLINE( 796)						Float alpha = ::openfl::display::_internal::CairoGraphics_obj::worldAlpha;
HXLINE( 798)						int ri;
HXDLIN( 798)						int ti;
HXLINE( 800)						{
HXLINE( 800)							int _g2 = 0;
HXDLIN( 800)							int _g3 = length;
HXDLIN( 800)							while((_g2 < _g3)){
HXLINE( 800)								_g2 = (_g2 + 1);
HXDLIN( 800)								int i = (_g2 - 1);
HXLINE( 802)								if (hasIndices) {
HXLINE( 802)									ri = (indices->get(i) * 4);
            								}
            								else {
HXLINE( 802)									ri = (i * 4);
            								}
HXLINE( 803)								if ((ri < 0)) {
HXLINE( 803)									continue;
            								}
HXLINE( 804)								Float _hx_tmp = rects->get(ri);
HXDLIN( 804)								Float _hx_tmp1 = rects->get((ri + 1));
HXDLIN( 804)								Float _hx_tmp2 = rects->get((ri + 2));
HXDLIN( 804)								tileRect->setTo(_hx_tmp,_hx_tmp1,_hx_tmp2,rects->get((ri + 3)));
HXLINE( 806)								bool _hx_tmp3;
HXDLIN( 806)								if (!((tileRect->width <= 0))) {
HXLINE( 806)									_hx_tmp3 = (tileRect->height <= 0);
            								}
            								else {
HXLINE( 806)									_hx_tmp3 = true;
            								}
HXDLIN( 806)								if (_hx_tmp3) {
HXLINE( 808)									continue;
            								}
HXLINE( 811)								bool _hx_tmp4;
HXDLIN( 811)								if (transformABCD) {
HXLINE( 811)									_hx_tmp4 = transformXY;
            								}
            								else {
HXLINE( 811)									_hx_tmp4 = false;
            								}
HXDLIN( 811)								if (_hx_tmp4) {
HXLINE( 813)									ti = (i * 6);
HXLINE( 814)									Float _hx_tmp5 = transforms->get(ti);
HXDLIN( 814)									Float _hx_tmp6 = transforms->get((ti + 1));
HXDLIN( 814)									Float _hx_tmp7 = transforms->get((ti + 2));
HXDLIN( 814)									Float _hx_tmp8 = transforms->get((ti + 3));
HXDLIN( 814)									Float _hx_tmp9 = transforms->get((ti + 4));
HXDLIN( 814)									tileTransform->setTo(_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,_hx_tmp9,transforms->get((ti + 5)));
            								}
            								else {
HXLINE( 817)									if (transformABCD) {
HXLINE( 819)										ti = (i * 4);
HXLINE( 820)										Float _hx_tmp10 = transforms->get(ti);
HXDLIN( 820)										Float _hx_tmp11 = transforms->get((ti + 1));
HXDLIN( 820)										Float _hx_tmp12 = transforms->get((ti + 2));
HXDLIN( 820)										tileTransform->setTo(_hx_tmp10,_hx_tmp11,_hx_tmp12,transforms->get((ti + 3)),tileRect->x,tileRect->y);
            									}
            									else {
HXLINE( 822)										if (transformXY) {
HXLINE( 824)											ti = (i * 2);
HXLINE( 825)											tileTransform->tx = transforms->get(ti);
HXLINE( 826)											tileTransform->ty = transforms->get((ti + 1));
            										}
            										else {
HXLINE( 830)											tileTransform->tx = tileRect->x;
HXLINE( 831)											tileTransform->ty = tileRect->y;
            										}
            									}
            								}
HXLINE( 834)								 ::openfl::geom::Matrix tileTransform1 = tileTransform;
HXDLIN( 834)								tileTransform1->tx = (tileTransform1->tx + (positionX - offsetX));
HXLINE( 835)								 ::openfl::geom::Matrix tileTransform2 = tileTransform;
HXDLIN( 835)								tileTransform2->ty = (tileTransform2->ty + (positionY - offsetY));
HXLINE( 836)								tileTransform->concat(transform);
HXLINE( 845)								 ::lime::graphics::cairo::Cairo _hx_tmp13 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN( 845)								_hx_tmp13->set_matrix(tileTransform->_hx___toMatrix3());
HXLINE( 847)								::openfl::display::_internal::CairoGraphics_obj::tempMatrix3->tx = tileRect->x;
HXLINE( 848)								::openfl::display::_internal::CairoGraphics_obj::tempMatrix3->ty = tileRect->y;
HXLINE( 849)								::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(::openfl::display::_internal::CairoGraphics_obj::fillPattern,::openfl::display::_internal::CairoGraphics_obj::tempMatrix3);
HXLINE( 850)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::fillPattern);
HXLINE( 852)								if (::hx::IsInstanceNotEq( tileRect,sourceRect )) {
HXLINE( 854)									::openfl::display::_internal::CairoGraphics_obj::cairo->save();
HXLINE( 856)									::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE( 857)									::openfl::display::_internal::CairoGraphics_obj::cairo->rectangle(( (Float)(0) ),( (Float)(0) ),tileRect->width,tileRect->height);
HXLINE( 858)									::openfl::display::_internal::CairoGraphics_obj::cairo->clip();
            								}
HXLINE( 861)								if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE( 863)									if ((alpha == 1)) {
HXLINE( 865)										::openfl::display::_internal::CairoGraphics_obj::cairo->paint();
            									}
            									else {
HXLINE( 869)										::openfl::display::_internal::CairoGraphics_obj::cairo->paintWithAlpha(alpha);
            									}
            								}
HXLINE( 873)								if (::hx::IsInstanceNotEq( tileRect,sourceRect )) {
HXLINE( 875)									::openfl::display::_internal::CairoGraphics_obj::cairo->restore();
            								}
            							}
            						}
HXLINE( 879)						::openfl::geom::Rectangle_obj::_hx___pool->release(tileRect);
HXLINE( 880)						::openfl::geom::Matrix_obj::_hx___pool->release(tileTransform);
HXLINE( 882)						 ::lime::graphics::cairo::Cairo _hx_tmp14 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN( 882)						_hx_tmp14->set_matrix(::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE( 883)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::display::_internal::CairoGraphics_obj::fillPattern,cacheExtend);
            					}
            					break;
            					case (int)9: {
HXLINE( 548)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data289 = data;
HXDLIN( 548)								data289->oPos = (data289->oPos + 2);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data290 = data;
HXDLIN( 548)								data290->bPos = (data290->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data291 = data;
HXDLIN( 548)								data291->iPos = (data291->iPos + 1);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data292 = data;
HXDLIN( 548)								data292->fPos = (data292->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data293 = data;
HXDLIN( 548)								data293->oPos = (data293->oPos + 4);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data294 = data;
HXDLIN( 548)								data294->iiPos = (data294->iiPos + 2);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data295 = data;
HXDLIN( 548)								data295->ffPos = (data295->ffPos + 1);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data296 = data;
HXDLIN( 548)								data296->fPos = (data296->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data297 = data;
HXDLIN( 548)								data297->oPos = (data297->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data298 = data;
HXDLIN( 548)								data298->fPos = (data298->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data299 = data;
HXDLIN( 548)								data299->fPos = (data299->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data300 = data;
HXDLIN( 548)								data300->fPos = (data300->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data301 = data;
HXDLIN( 548)								data301->fPos = (data301->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data302 = data;
HXDLIN( 548)								data302->oPos = (data302->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data303 = data;
HXDLIN( 548)								data303->fPos = (data303->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data304 = data;
HXDLIN( 548)								data304->fPos = (data304->fPos + 5);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data305 = data;
HXDLIN( 548)								data305->oPos = (data305->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data306 = data;
HXDLIN( 548)								data306->oPos = (data306->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data307 = data;
HXDLIN( 548)								data307->oPos = (data307->oPos + 2);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data308 = data;
HXDLIN( 548)								data308->bPos = (data308->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data309 = data;
HXDLIN( 548)								data309->oPos = (data309->oPos + 4);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data310 = data;
HXDLIN( 548)								data310->iiPos = (data310->iiPos + 2);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data311 = data;
HXDLIN( 548)								data311->ffPos = (data311->ffPos + 1);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data312 = data;
HXDLIN( 548)								data312->fPos = (data312->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data313 = data;
HXDLIN( 548)								data313->oPos = (data313->oPos + 4);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data314 = data;
HXDLIN( 548)								data314->iPos = (data314->iPos + 1);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data315 = data;
HXDLIN( 548)								data315->fPos = (data315->fPos + 2);
HXDLIN( 548)								 ::openfl::display::_internal::DrawCommandReader data316 = data;
HXDLIN( 548)								data316->bPos = (data316->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data317 = data;
HXDLIN( 548)								data317->fPos = (data317->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data318 = data;
HXDLIN( 548)								data318->fPos = (data318->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data319 = data;
HXDLIN( 548)								data319->oPos = (data319->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 548)								 ::openfl::display::_internal::DrawCommandReader data320 = data;
HXDLIN( 548)								data320->oPos = (data320->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 548)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 548)						 ::openfl::display::_internal::DrawCommandReader c9 = data;
HXLINE( 549)						hasPath = true;
HXLINE( 550)						::openfl::display::_internal::CairoGraphics_obj::cairo->rectangle((c9->buffer->f->__get(c9->fPos) - offsetX),(c9->buffer->f->__get((c9->fPos + 1)) - offsetY),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)));
            					}
            					break;
            					case (int)10: {
HXLINE( 578)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data321 = data;
HXDLIN( 578)								data321->oPos = (data321->oPos + 2);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data322 = data;
HXDLIN( 578)								data322->bPos = (data322->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data323 = data;
HXDLIN( 578)								data323->iPos = (data323->iPos + 1);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data324 = data;
HXDLIN( 578)								data324->fPos = (data324->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data325 = data;
HXDLIN( 578)								data325->oPos = (data325->oPos + 4);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data326 = data;
HXDLIN( 578)								data326->iiPos = (data326->iiPos + 2);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data327 = data;
HXDLIN( 578)								data327->ffPos = (data327->ffPos + 1);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data328 = data;
HXDLIN( 578)								data328->fPos = (data328->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data329 = data;
HXDLIN( 578)								data329->oPos = (data329->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data330 = data;
HXDLIN( 578)								data330->fPos = (data330->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data331 = data;
HXDLIN( 578)								data331->fPos = (data331->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data332 = data;
HXDLIN( 578)								data332->fPos = (data332->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data333 = data;
HXDLIN( 578)								data333->fPos = (data333->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data334 = data;
HXDLIN( 578)								data334->oPos = (data334->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data335 = data;
HXDLIN( 578)								data335->fPos = (data335->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data336 = data;
HXDLIN( 578)								data336->fPos = (data336->fPos + 5);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data337 = data;
HXDLIN( 578)								data337->oPos = (data337->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data338 = data;
HXDLIN( 578)								data338->oPos = (data338->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data339 = data;
HXDLIN( 578)								data339->oPos = (data339->oPos + 2);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data340 = data;
HXDLIN( 578)								data340->bPos = (data340->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data341 = data;
HXDLIN( 578)								data341->oPos = (data341->oPos + 4);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data342 = data;
HXDLIN( 578)								data342->iiPos = (data342->iiPos + 2);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data343 = data;
HXDLIN( 578)								data343->ffPos = (data343->ffPos + 1);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data344 = data;
HXDLIN( 578)								data344->fPos = (data344->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data345 = data;
HXDLIN( 578)								data345->oPos = (data345->oPos + 4);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data346 = data;
HXDLIN( 578)								data346->iPos = (data346->iPos + 1);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data347 = data;
HXDLIN( 578)								data347->fPos = (data347->fPos + 2);
HXDLIN( 578)								 ::openfl::display::_internal::DrawCommandReader data348 = data;
HXDLIN( 578)								data348->bPos = (data348->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data349 = data;
HXDLIN( 578)								data349->fPos = (data349->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data350 = data;
HXDLIN( 578)								data350->fPos = (data350->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data351 = data;
HXDLIN( 578)								data351->oPos = (data351->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 578)								 ::openfl::display::_internal::DrawCommandReader data352 = data;
HXDLIN( 578)								data352->oPos = (data352->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 578)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 578)						 ::openfl::display::_internal::DrawCommandReader c10 = data;
HXLINE( 579)						hasPath = true;
HXLINE( 580)						::openfl::display::_internal::CairoGraphics_obj::drawRoundRect((c10->buffer->f->__get(c10->fPos) - offsetX),(c10->buffer->f->__get((c10->fPos + 1)) - offsetY),c10->buffer->f->__get((c10->fPos + 2)),c10->buffer->f->__get((c10->fPos + 3)),c10->buffer->f->__get((c10->fPos + 4)),c10->buffer->o->__get(c10->oPos));
            					}
            					break;
            					case (int)12: {
HXLINE( 886)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data353 = data;
HXDLIN( 886)								data353->oPos = (data353->oPos + 2);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data354 = data;
HXDLIN( 886)								data354->bPos = (data354->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data355 = data;
HXDLIN( 886)								data355->iPos = (data355->iPos + 1);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data356 = data;
HXDLIN( 886)								data356->fPos = (data356->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data357 = data;
HXDLIN( 886)								data357->oPos = (data357->oPos + 4);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data358 = data;
HXDLIN( 886)								data358->iiPos = (data358->iiPos + 2);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data359 = data;
HXDLIN( 886)								data359->ffPos = (data359->ffPos + 1);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data360 = data;
HXDLIN( 886)								data360->fPos = (data360->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data361 = data;
HXDLIN( 886)								data361->oPos = (data361->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data362 = data;
HXDLIN( 886)								data362->fPos = (data362->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data363 = data;
HXDLIN( 886)								data363->fPos = (data363->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data364 = data;
HXDLIN( 886)								data364->fPos = (data364->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data365 = data;
HXDLIN( 886)								data365->fPos = (data365->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data366 = data;
HXDLIN( 886)								data366->oPos = (data366->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data367 = data;
HXDLIN( 886)								data367->fPos = (data367->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data368 = data;
HXDLIN( 886)								data368->fPos = (data368->fPos + 5);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data369 = data;
HXDLIN( 886)								data369->oPos = (data369->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data370 = data;
HXDLIN( 886)								data370->oPos = (data370->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data371 = data;
HXDLIN( 886)								data371->oPos = (data371->oPos + 2);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data372 = data;
HXDLIN( 886)								data372->bPos = (data372->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data373 = data;
HXDLIN( 886)								data373->oPos = (data373->oPos + 4);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data374 = data;
HXDLIN( 886)								data374->iiPos = (data374->iiPos + 2);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data375 = data;
HXDLIN( 886)								data375->ffPos = (data375->ffPos + 1);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data376 = data;
HXDLIN( 886)								data376->fPos = (data376->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data377 = data;
HXDLIN( 886)								data377->oPos = (data377->oPos + 4);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data378 = data;
HXDLIN( 886)								data378->iPos = (data378->iPos + 1);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data379 = data;
HXDLIN( 886)								data379->fPos = (data379->fPos + 2);
HXDLIN( 886)								 ::openfl::display::_internal::DrawCommandReader data380 = data;
HXDLIN( 886)								data380->bPos = (data380->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data381 = data;
HXDLIN( 886)								data381->fPos = (data381->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data382 = data;
HXDLIN( 886)								data382->fPos = (data382->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data383 = data;
HXDLIN( 886)								data383->oPos = (data383->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 886)								 ::openfl::display::_internal::DrawCommandReader data384 = data;
HXDLIN( 886)								data384->oPos = (data384->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 886)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 886)						 ::openfl::display::_internal::DrawCommandReader c11 = data;
HXLINE( 887)						 ::openfl::_Vector::FloatVector v = ( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get(c11->oPos)) );
HXLINE( 888)						 ::openfl::_Vector::IntVector ind = ( ( ::openfl::_Vector::IntVector)(c11->buffer->o->__get((c11->oPos + 1))) );
HXLINE( 889)						 ::openfl::_Vector::FloatVector uvt = ( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get((c11->oPos + 2))) );
HXLINE( 890)						bool colorFill = ::hx::IsNull( ::openfl::display::_internal::CairoGraphics_obj::bitmapFill );
HXLINE( 892)						bool _hx_tmp15;
HXDLIN( 892)						if (colorFill) {
HXLINE( 892)							_hx_tmp15 = ::hx::IsNotNull( uvt );
            						}
            						else {
HXLINE( 892)							_hx_tmp15 = false;
            						}
HXDLIN( 892)						if (_hx_tmp15) {
HXLINE( 894)							goto _hx_goto_14;
            						}
HXLINE( 897)						int width1 = 0;
HXLINE( 898)						int height1 = 0;
HXLINE( 899)						 ::lime::math::Matrix3 currentMatrix = ::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3();
HXLINE( 901)						if (!(colorFill)) {
HXLINE( 905)							if (::hx::IsNull( uvt )) {
HXLINE( 907)								int length1 = null();
HXDLIN( 907)								bool fixed = null();
HXDLIN( 907)								::Array< Float > array = null();
HXDLIN( 907)								uvt =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length1,fixed,array,true);
HXLINE( 909)								{
HXLINE( 909)									int _g4 = 0;
HXDLIN( 909)									int _g5 = ::Std_obj::_hx_int((( (Float)(v->get_length()) ) / ( (Float)(2) )));
HXDLIN( 909)									while((_g4 < _g5)){
HXLINE( 909)										_g4 = (_g4 + 1);
HXDLIN( 909)										int i1 = (_g4 - 1);
HXLINE( 911)										{
HXLINE( 911)											Float value = v->get((i1 * 2));
HXDLIN( 911)											uvt->push((value - (offsetX / ( (Float)(::openfl::display::_internal::CairoGraphics_obj::bitmapFill->width) ))));
            										}
HXLINE( 912)										{
HXLINE( 912)											Float value1 = v->get(((i1 * 2) + 1));
HXDLIN( 912)											uvt->push((value1 - (offsetY / ( (Float)(::openfl::display::_internal::CairoGraphics_obj::bitmapFill->height) ))));
            										}
            									}
            								}
            							}
HXLINE( 916)							int skipT = ( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get((c11->oPos + 2))) )->get_length();
HXDLIN( 916)							bool skipT1 = (skipT != v->get_length());
HXLINE( 917)							 ::Dynamic normalizedUVT = ::openfl::display::_internal::CairoGraphics_obj::normalizeUVT(uvt,skipT1);
HXLINE( 918)							Float maxUVT = ( (Float)(normalizedUVT->__Field(HX_("max",a4,0a,53,00),::hx::paccDynamic)) );
HXLINE( 919)							uvt = ( ( ::openfl::_Vector::FloatVector)(normalizedUVT->__Field(HX_("uvt",f3,2e,59,00),::hx::paccDynamic)) );
HXLINE( 921)							if ((maxUVT > 1)) {
HXLINE( 923)								width1 = ::Std_obj::_hx_int(::openfl::display::_internal::CairoGraphics_obj::bounds->width);
HXLINE( 924)								height1 = ::Std_obj::_hx_int(::openfl::display::_internal::CairoGraphics_obj::bounds->height);
            							}
            							else {
HXLINE( 928)								width1 = ::openfl::display::_internal::CairoGraphics_obj::bitmapFill->width;
HXLINE( 929)								height1 = ::openfl::display::_internal::CairoGraphics_obj::bitmapFill->height;
            							}
            						}
HXLINE( 933)						int i2 = 0;
HXLINE( 934)						int l = ind->get_length();
HXLINE( 936)						int a_;
HXDLIN( 936)						int b_;
HXDLIN( 936)						int c_;
HXLINE( 937)						int iax;
HXDLIN( 937)						int iay;
HXDLIN( 937)						int ibx;
HXDLIN( 937)						int iby;
HXDLIN( 937)						int icx;
HXDLIN( 937)						int icy;
HXLINE( 938)						Float x1;
HXDLIN( 938)						Float y1;
HXDLIN( 938)						Float x2;
HXDLIN( 938)						Float y2;
HXDLIN( 938)						Float x3;
HXDLIN( 938)						Float y3;
HXLINE( 939)						Float uvx1;
HXDLIN( 939)						Float uvy1;
HXDLIN( 939)						Float uvx2;
HXDLIN( 939)						Float uvy2;
HXDLIN( 939)						Float uvx3;
HXDLIN( 939)						Float uvy3;
HXLINE( 940)						Float denom;
HXLINE( 941)						Float t1;
HXDLIN( 941)						Float t2;
HXDLIN( 941)						Float t3;
HXDLIN( 941)						Float t4;
HXLINE( 942)						Float dx;
HXDLIN( 942)						Float dy;
HXLINE( 944)						::openfl::display::_internal::CairoGraphics_obj::cairo->set_antialias(1);
HXLINE( 946)						while((i2 < l)){
HXLINE( 948)							a_ = i2;
HXLINE( 949)							b_ = (i2 + 1);
HXLINE( 950)							c_ = (i2 + 2);
HXLINE( 952)							iax = (ind->get(a_) * 2);
HXLINE( 953)							iay = ((ind->get(a_) * 2) + 1);
HXLINE( 954)							ibx = (ind->get(b_) * 2);
HXLINE( 955)							iby = ((ind->get(b_) * 2) + 1);
HXLINE( 956)							icx = (ind->get(c_) * 2);
HXLINE( 957)							icy = ((ind->get(c_) * 2) + 1);
HXLINE( 959)							x1 = (v->get(iax) - offsetX);
HXLINE( 960)							y1 = (v->get(iay) - offsetY);
HXLINE( 961)							x2 = (v->get(ibx) - offsetX);
HXLINE( 962)							y2 = (v->get(iby) - offsetY);
HXLINE( 963)							x3 = (v->get(icx) - offsetX);
HXLINE( 964)							y3 = (v->get(icy) - offsetY);
HXLINE( 966)							 ::Dynamic _hx_switch_0 = c11->buffer->o->__get((c11->oPos + 3));
            							if (  (_hx_switch_0==0) ){
HXLINE( 976)								if (((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < 0)) {
HXLINE( 978)									i2 = (i2 + 3);
HXLINE( 979)									continue;
            								}
HXLINE( 976)								goto _hx_goto_18;
            							}
            							if (  (_hx_switch_0==2) ){
HXLINE( 969)								if (!(((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < 0))) {
HXLINE( 971)									i2 = (i2 + 3);
HXLINE( 972)									continue;
            								}
HXLINE( 969)								goto _hx_goto_18;
            							}
            							/* default */{
            							}
            							_hx_goto_18:;
HXLINE( 985)							if (colorFill) {
HXLINE( 987)								::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE( 988)								::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(x1,y1);
HXLINE( 989)								::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(x2,y2);
HXLINE( 990)								::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE( 991)								::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
HXLINE( 992)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::fillPattern);
HXLINE( 993)								if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE( 993)									::openfl::display::_internal::CairoGraphics_obj::cairo->fillPreserve();
            								}
HXLINE( 994)								i2 = (i2 + 3);
HXLINE( 995)								continue;
            							}
HXLINE( 998)							 ::lime::graphics::cairo::Cairo _hx_tmp16 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN( 998)							_hx_tmp16->set_matrix(::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE(1002)							uvx1 = (uvt->get(iax) * ( (Float)(width1) ));
HXLINE(1003)							uvx2 = (uvt->get(ibx) * ( (Float)(width1) ));
HXLINE(1004)							uvx3 = (uvt->get(icx) * ( (Float)(width1) ));
HXLINE(1005)							uvy1 = (uvt->get(iay) * ( (Float)(height1) ));
HXLINE(1006)							uvy2 = (uvt->get(iby) * ( (Float)(height1) ));
HXLINE(1007)							uvy3 = (uvt->get(icy) * ( (Float)(height1) ));
HXLINE(1009)							denom = ((((uvx1 * (uvy3 - uvy2)) - (uvx2 * uvy3)) + (uvx3 * uvy2)) + ((uvx2 - uvx3) * uvy1));
HXLINE(1011)							if ((denom == 0)) {
HXLINE(1013)								i2 = (i2 + 3);
HXLINE(1014)								continue;
            							}
HXLINE(1017)							::openfl::display::_internal::CairoGraphics_obj::cairo->newPath();
HXLINE(1018)							::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(x1,y1);
HXLINE(1019)							::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(x2,y2);
HXLINE(1020)							::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE(1021)							::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
HXLINE(1024)							x1 = (x1 * currentMatrix->a);
HXLINE(1025)							x2 = (x2 * currentMatrix->a);
HXLINE(1026)							x3 = (x3 * currentMatrix->a);
HXLINE(1027)							y1 = (y1 * currentMatrix->d);
HXLINE(1028)							y2 = (y2 * currentMatrix->d);
HXLINE(1029)							y3 = (y3 * currentMatrix->d);
HXLINE(1031)							t1 = (-(((((uvy1 * (x3 - x2)) - (uvy2 * x3)) + (uvy3 * x2)) + ((uvy2 - uvy3) * x1))) / denom);
HXLINE(1032)							t2 = (((((uvy2 * y3) + (uvy1 * (y2 - y3))) - (uvy3 * y2)) + ((uvy3 - uvy2) * y1)) / denom);
HXLINE(1033)							t3 = (((((uvx1 * (x3 - x2)) - (uvx2 * x3)) + (uvx3 * x2)) + ((uvx2 - uvx3) * x1)) / denom);
HXLINE(1034)							t4 = (-(((((uvx2 * y3) + (uvx1 * (y2 - y3))) - (uvx3 * y2)) + ((uvx3 - uvx2) * y1))) / denom);
HXLINE(1035)							dx = ((((uvx1 * ((uvy3 * x2) - (uvy2 * x3))) + (uvy1 * ((uvx2 * x3) - (uvx3 * x2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * x1)) / denom);
HXLINE(1036)							dy = ((((uvx1 * ((uvy3 * y2) - (uvy2 * y3))) + (uvy1 * ((uvx2 * y3) - (uvx3 * y2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * y1)) / denom);
HXLINE(1038)							{
HXLINE(1038)								 ::lime::math::Matrix3 _this = ::openfl::display::_internal::CairoGraphics_obj::tempMatrix3;
HXDLIN(1038)								_this->a = t1;
HXDLIN(1038)								_this->b = t2;
HXDLIN(1038)								_this->c = t3;
HXDLIN(1038)								_this->d = t4;
HXDLIN(1038)								_this->tx = dx;
HXDLIN(1038)								_this->ty = dy;
            							}
HXLINE(1039)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_matrix(::openfl::display::_internal::CairoGraphics_obj::tempMatrix3);
HXLINE(1040)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::fillPattern);
HXLINE(1041)							if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE(1041)								::openfl::display::_internal::CairoGraphics_obj::cairo->fill();
            							}
HXLINE(1043)							i2 = (i2 + 3);
            						}
HXLINE(1046)						 ::lime::graphics::cairo::Cairo _hx_tmp17 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN(1046)						_hx_tmp17->set_matrix(::openfl::display::_internal::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
            					}
            					break;
            					case (int)14: {
HXLINE( 688)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data385 = data;
HXDLIN( 688)								data385->oPos = (data385->oPos + 2);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data386 = data;
HXDLIN( 688)								data386->bPos = (data386->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data387 = data;
HXDLIN( 688)								data387->iPos = (data387->iPos + 1);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data388 = data;
HXDLIN( 688)								data388->fPos = (data388->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data389 = data;
HXDLIN( 688)								data389->oPos = (data389->oPos + 4);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data390 = data;
HXDLIN( 688)								data390->iiPos = (data390->iiPos + 2);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data391 = data;
HXDLIN( 688)								data391->ffPos = (data391->ffPos + 1);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data392 = data;
HXDLIN( 688)								data392->fPos = (data392->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data393 = data;
HXDLIN( 688)								data393->oPos = (data393->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data394 = data;
HXDLIN( 688)								data394->fPos = (data394->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data395 = data;
HXDLIN( 688)								data395->fPos = (data395->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data396 = data;
HXDLIN( 688)								data396->fPos = (data396->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data397 = data;
HXDLIN( 688)								data397->fPos = (data397->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data398 = data;
HXDLIN( 688)								data398->oPos = (data398->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data399 = data;
HXDLIN( 688)								data399->fPos = (data399->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data400 = data;
HXDLIN( 688)								data400->fPos = (data400->fPos + 5);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data401 = data;
HXDLIN( 688)								data401->oPos = (data401->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data402 = data;
HXDLIN( 688)								data402->oPos = (data402->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data403 = data;
HXDLIN( 688)								data403->oPos = (data403->oPos + 2);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data404 = data;
HXDLIN( 688)								data404->bPos = (data404->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data405 = data;
HXDLIN( 688)								data405->oPos = (data405->oPos + 4);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data406 = data;
HXDLIN( 688)								data406->iiPos = (data406->iiPos + 2);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data407 = data;
HXDLIN( 688)								data407->ffPos = (data407->ffPos + 1);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data408 = data;
HXDLIN( 688)								data408->fPos = (data408->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data409 = data;
HXDLIN( 688)								data409->oPos = (data409->oPos + 4);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data410 = data;
HXDLIN( 688)								data410->iPos = (data410->iPos + 1);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data411 = data;
HXDLIN( 688)								data411->fPos = (data411->fPos + 2);
HXDLIN( 688)								 ::openfl::display::_internal::DrawCommandReader data412 = data;
HXDLIN( 688)								data412->bPos = (data412->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data413 = data;
HXDLIN( 688)								data413->fPos = (data413->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data414 = data;
HXDLIN( 688)								data414->fPos = (data414->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data415 = data;
HXDLIN( 688)								data415->oPos = (data415->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 688)								 ::openfl::display::_internal::DrawCommandReader data416 = data;
HXDLIN( 688)								data416->oPos = (data416->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 688)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 688)						 ::openfl::display::_internal::DrawCommandReader c12 = data;
HXLINE( 689)						bool _hx_tmp18;
HXDLIN( 689)						if (stroke) {
HXLINE( 689)							_hx_tmp18 = ::openfl::display::_internal::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 689)							_hx_tmp18 = false;
            						}
HXDLIN( 689)						if (_hx_tmp18) {
HXLINE( 691)							::openfl::display::_internal::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 694)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 695)						::openfl::display::_internal::CairoGraphics_obj::strokePattern = ::openfl::display::_internal::CairoGraphics_obj::createImagePattern(( ( ::openfl::display::BitmapData)(c12->buffer->o->__get(c12->oPos)) ),( ( ::openfl::geom::Matrix)(c12->buffer->o->__get((c12->oPos + 1))) ),c12->buffer->b->__get(c12->bPos),c12->buffer->b->__get((c12->bPos + 1)));
HXLINE( 697)						::openfl::display::_internal::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)15: {
HXLINE( 675)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data417 = data;
HXDLIN( 675)								data417->oPos = (data417->oPos + 2);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data418 = data;
HXDLIN( 675)								data418->bPos = (data418->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data419 = data;
HXDLIN( 675)								data419->iPos = (data419->iPos + 1);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data420 = data;
HXDLIN( 675)								data420->fPos = (data420->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data421 = data;
HXDLIN( 675)								data421->oPos = (data421->oPos + 4);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data422 = data;
HXDLIN( 675)								data422->iiPos = (data422->iiPos + 2);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data423 = data;
HXDLIN( 675)								data423->ffPos = (data423->ffPos + 1);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data424 = data;
HXDLIN( 675)								data424->fPos = (data424->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data425 = data;
HXDLIN( 675)								data425->oPos = (data425->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data426 = data;
HXDLIN( 675)								data426->fPos = (data426->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data427 = data;
HXDLIN( 675)								data427->fPos = (data427->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data428 = data;
HXDLIN( 675)								data428->fPos = (data428->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data429 = data;
HXDLIN( 675)								data429->fPos = (data429->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data430 = data;
HXDLIN( 675)								data430->oPos = (data430->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data431 = data;
HXDLIN( 675)								data431->fPos = (data431->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data432 = data;
HXDLIN( 675)								data432->fPos = (data432->fPos + 5);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data433 = data;
HXDLIN( 675)								data433->oPos = (data433->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data434 = data;
HXDLIN( 675)								data434->oPos = (data434->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data435 = data;
HXDLIN( 675)								data435->oPos = (data435->oPos + 2);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data436 = data;
HXDLIN( 675)								data436->bPos = (data436->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data437 = data;
HXDLIN( 675)								data437->oPos = (data437->oPos + 4);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data438 = data;
HXDLIN( 675)								data438->iiPos = (data438->iiPos + 2);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data439 = data;
HXDLIN( 675)								data439->ffPos = (data439->ffPos + 1);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data440 = data;
HXDLIN( 675)								data440->fPos = (data440->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data441 = data;
HXDLIN( 675)								data441->oPos = (data441->oPos + 4);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data442 = data;
HXDLIN( 675)								data442->iPos = (data442->iPos + 1);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data443 = data;
HXDLIN( 675)								data443->fPos = (data443->fPos + 2);
HXDLIN( 675)								 ::openfl::display::_internal::DrawCommandReader data444 = data;
HXDLIN( 675)								data444->bPos = (data444->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data445 = data;
HXDLIN( 675)								data445->fPos = (data445->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data446 = data;
HXDLIN( 675)								data446->fPos = (data446->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data447 = data;
HXDLIN( 675)								data447->oPos = (data447->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 675)								 ::openfl::display::_internal::DrawCommandReader data448 = data;
HXDLIN( 675)								data448->oPos = (data448->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 675)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 675)						 ::openfl::display::_internal::DrawCommandReader c13 = data;
HXLINE( 676)						bool _hx_tmp19;
HXDLIN( 676)						if (stroke) {
HXLINE( 676)							_hx_tmp19 = ::openfl::display::_internal::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 676)							_hx_tmp19 = false;
            						}
HXDLIN( 676)						if (_hx_tmp19) {
HXLINE( 678)							::openfl::display::_internal::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 681)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 682)						::openfl::display::_internal::CairoGraphics_obj::strokePattern = ::openfl::display::_internal::CairoGraphics_obj::createGradientPattern(c13->buffer->o->__get(c13->oPos),c13->buffer->ii->__get(c13->iiPos).StaticCast< ::Array< int > >(),c13->buffer->ff->__get(c13->ffPos).StaticCast< ::Array< Float > >(),c13->buffer->ii->__get((c13->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->buffer->o->__get((c13->oPos + 1))) ),c13->buffer->o->__get((c13->oPos + 2)),c13->buffer->o->__get((c13->oPos + 3)),c13->buffer->f->__get(c13->fPos));
HXLINE( 685)						::openfl::display::_internal::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)16: {
HXLINE( 612)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data449 = data;
HXDLIN( 612)								data449->oPos = (data449->oPos + 2);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data450 = data;
HXDLIN( 612)								data450->bPos = (data450->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data451 = data;
HXDLIN( 612)								data451->iPos = (data451->iPos + 1);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data452 = data;
HXDLIN( 612)								data452->fPos = (data452->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data453 = data;
HXDLIN( 612)								data453->oPos = (data453->oPos + 4);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data454 = data;
HXDLIN( 612)								data454->iiPos = (data454->iiPos + 2);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data455 = data;
HXDLIN( 612)								data455->ffPos = (data455->ffPos + 1);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data456 = data;
HXDLIN( 612)								data456->fPos = (data456->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data457 = data;
HXDLIN( 612)								data457->oPos = (data457->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data458 = data;
HXDLIN( 612)								data458->fPos = (data458->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data459 = data;
HXDLIN( 612)								data459->fPos = (data459->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data460 = data;
HXDLIN( 612)								data460->fPos = (data460->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data461 = data;
HXDLIN( 612)								data461->fPos = (data461->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data462 = data;
HXDLIN( 612)								data462->oPos = (data462->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data463 = data;
HXDLIN( 612)								data463->fPos = (data463->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data464 = data;
HXDLIN( 612)								data464->fPos = (data464->fPos + 5);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data465 = data;
HXDLIN( 612)								data465->oPos = (data465->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data466 = data;
HXDLIN( 612)								data466->oPos = (data466->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data467 = data;
HXDLIN( 612)								data467->oPos = (data467->oPos + 2);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data468 = data;
HXDLIN( 612)								data468->bPos = (data468->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data469 = data;
HXDLIN( 612)								data469->oPos = (data469->oPos + 4);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data470 = data;
HXDLIN( 612)								data470->iiPos = (data470->iiPos + 2);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data471 = data;
HXDLIN( 612)								data471->ffPos = (data471->ffPos + 1);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data472 = data;
HXDLIN( 612)								data472->fPos = (data472->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data473 = data;
HXDLIN( 612)								data473->oPos = (data473->oPos + 4);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data474 = data;
HXDLIN( 612)								data474->iPos = (data474->iPos + 1);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data475 = data;
HXDLIN( 612)								data475->fPos = (data475->fPos + 2);
HXDLIN( 612)								 ::openfl::display::_internal::DrawCommandReader data476 = data;
HXDLIN( 612)								data476->bPos = (data476->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data477 = data;
HXDLIN( 612)								data477->fPos = (data477->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data478 = data;
HXDLIN( 612)								data478->fPos = (data478->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data479 = data;
HXDLIN( 612)								data479->oPos = (data479->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 612)								 ::openfl::display::_internal::DrawCommandReader data480 = data;
HXDLIN( 612)								data480->oPos = (data480->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 612)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 612)						 ::openfl::display::_internal::DrawCommandReader c14 = data;
HXLINE( 613)						bool _hx_tmp20;
HXDLIN( 613)						if (stroke) {
HXLINE( 613)							_hx_tmp20 = ::openfl::display::_internal::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 613)							_hx_tmp20 = false;
            						}
HXDLIN( 613)						if (_hx_tmp20) {
HXLINE( 615)							::openfl::display::_internal::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 618)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 620)						if (::hx::IsNull( c14->buffer->o->__get(c14->oPos) )) {
HXLINE( 622)							::openfl::display::_internal::CairoGraphics_obj::hasStroke = false;
            						}
            						else {
HXLINE( 626)							::openfl::display::_internal::CairoGraphics_obj::hasStroke = true;
HXLINE( 628)							Float _hx_tmp21;
HXDLIN( 628)							if (::hx::IsGreater( c14->buffer->o->__get(c14->oPos),0 )) {
HXLINE( 628)								_hx_tmp21 = ( (Float)(c14->buffer->o->__get(c14->oPos)) );
            							}
            							else {
HXLINE( 628)								_hx_tmp21 = ( (Float)(1) );
            							}
HXDLIN( 628)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_lineWidth(_hx_tmp21);
HXLINE( 630)							if (::hx::IsNull( c14->buffer->o->__get((c14->oPos + 3)) )) {
HXLINE( 632)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_lineJoin(1);
            							}
            							else {
HXLINE( 636)								int _hx_tmp22;
HXDLIN( 636)								 ::Dynamic _hx_switch_1 = c14->buffer->o->__get((c14->oPos + 3));
            								if (  (_hx_switch_1==0) ){
HXLINE( 636)									_hx_tmp22 = 2;
HXDLIN( 636)									goto _hx_goto_19;
            								}
            								if (  (_hx_switch_1==1) ){
HXLINE( 636)									_hx_tmp22 = 0;
HXDLIN( 636)									goto _hx_goto_19;
            								}
            								/* default */{
HXLINE( 636)									_hx_tmp22 = 1;
            								}
            								_hx_goto_19:;
HXDLIN( 636)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_lineJoin(_hx_tmp22);
            							}
HXLINE( 644)							if (::hx::IsNull( c14->buffer->o->__get((c14->oPos + 2)) )) {
HXLINE( 646)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_lineCap(1);
            							}
            							else {
HXLINE( 650)								int _hx_tmp23;
HXDLIN( 650)								 ::Dynamic _hx_switch_2 = c14->buffer->o->__get((c14->oPos + 2));
            								if (  (_hx_switch_2==0) ){
HXLINE( 650)									_hx_tmp23 = 0;
HXDLIN( 650)									goto _hx_goto_20;
            								}
            								if (  (_hx_switch_2==2) ){
HXLINE( 650)									_hx_tmp23 = 2;
HXDLIN( 650)									goto _hx_goto_20;
            								}
            								/* default */{
HXLINE( 650)									_hx_tmp23 = 1;
            								}
            								_hx_goto_20:;
HXDLIN( 650)								::openfl::display::_internal::CairoGraphics_obj::cairo->set_lineCap(_hx_tmp23);
            							}
HXLINE( 658)							::openfl::display::_internal::CairoGraphics_obj::cairo->set_miterLimit(c14->buffer->f->__get((c14->fPos + 1)));
HXLINE( 660)							r = (( (Float)(::hx::UShr((c14->buffer->i->__get(c14->iPos) & 16711680),16)) ) / ( (Float)(255) ));
HXLINE( 661)							g = (( (Float)(::hx::UShr((c14->buffer->i->__get(c14->iPos) & 65280),8)) ) / ( (Float)(255) ));
HXLINE( 662)							b = (( (Float)((c14->buffer->i->__get(c14->iPos) & 255)) ) / ( (Float)(255) ));
HXLINE( 664)							if ((c14->buffer->f->__get(c14->fPos) == 1)) {
HXLINE( 666)								::openfl::display::_internal::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGB(r,g,b);
            							}
            							else {
HXLINE( 670)								::openfl::display::_internal::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(r,g,b,c14->buffer->f->__get(c14->fPos));
            							}
            						}
            					}
            					break;
            					case (int)17: {
HXLINE( 583)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data481 = data;
HXDLIN( 583)								data481->oPos = (data481->oPos + 2);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data482 = data;
HXDLIN( 583)								data482->bPos = (data482->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data483 = data;
HXDLIN( 583)								data483->iPos = (data483->iPos + 1);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data484 = data;
HXDLIN( 583)								data484->fPos = (data484->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data485 = data;
HXDLIN( 583)								data485->oPos = (data485->oPos + 4);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data486 = data;
HXDLIN( 583)								data486->iiPos = (data486->iiPos + 2);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data487 = data;
HXDLIN( 583)								data487->ffPos = (data487->ffPos + 1);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data488 = data;
HXDLIN( 583)								data488->fPos = (data488->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data489 = data;
HXDLIN( 583)								data489->oPos = (data489->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data490 = data;
HXDLIN( 583)								data490->fPos = (data490->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data491 = data;
HXDLIN( 583)								data491->fPos = (data491->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data492 = data;
HXDLIN( 583)								data492->fPos = (data492->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data493 = data;
HXDLIN( 583)								data493->fPos = (data493->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data494 = data;
HXDLIN( 583)								data494->oPos = (data494->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data495 = data;
HXDLIN( 583)								data495->fPos = (data495->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data496 = data;
HXDLIN( 583)								data496->fPos = (data496->fPos + 5);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data497 = data;
HXDLIN( 583)								data497->oPos = (data497->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data498 = data;
HXDLIN( 583)								data498->oPos = (data498->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data499 = data;
HXDLIN( 583)								data499->oPos = (data499->oPos + 2);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data500 = data;
HXDLIN( 583)								data500->bPos = (data500->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data501 = data;
HXDLIN( 583)								data501->oPos = (data501->oPos + 4);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data502 = data;
HXDLIN( 583)								data502->iiPos = (data502->iiPos + 2);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data503 = data;
HXDLIN( 583)								data503->ffPos = (data503->ffPos + 1);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data504 = data;
HXDLIN( 583)								data504->fPos = (data504->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data505 = data;
HXDLIN( 583)								data505->oPos = (data505->oPos + 4);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data506 = data;
HXDLIN( 583)								data506->iPos = (data506->iPos + 1);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data507 = data;
HXDLIN( 583)								data507->fPos = (data507->fPos + 2);
HXDLIN( 583)								 ::openfl::display::_internal::DrawCommandReader data508 = data;
HXDLIN( 583)								data508->bPos = (data508->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data509 = data;
HXDLIN( 583)								data509->fPos = (data509->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data510 = data;
HXDLIN( 583)								data510->fPos = (data510->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data511 = data;
HXDLIN( 583)								data511->oPos = (data511->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 583)								 ::openfl::display::_internal::DrawCommandReader data512 = data;
HXDLIN( 583)								data512->oPos = (data512->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 583)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 583)						 ::openfl::display::_internal::DrawCommandReader c15 = data;
HXLINE( 584)						hasPath = true;
HXLINE( 585)						::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo((c15->buffer->f->__get(c15->fPos) - offsetX),(c15->buffer->f->__get((c15->fPos + 1)) - offsetY));
HXLINE( 587)						positionX = c15->buffer->f->__get(c15->fPos);
HXLINE( 588)						positionY = c15->buffer->f->__get((c15->fPos + 1));
HXLINE( 590)						bool _hx_tmp24;
HXDLIN( 590)						if ((positionX == startX)) {
HXLINE( 590)							_hx_tmp24 = (positionY == startY);
            						}
            						else {
HXLINE( 590)							_hx_tmp24 = false;
            						}
HXDLIN( 590)						if (_hx_tmp24) {
HXLINE( 592)							closeGap = true;
            						}
            					}
            					break;
            					case (int)18: {
HXLINE( 596)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data513 = data;
HXDLIN( 596)								data513->oPos = (data513->oPos + 2);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data514 = data;
HXDLIN( 596)								data514->bPos = (data514->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data515 = data;
HXDLIN( 596)								data515->iPos = (data515->iPos + 1);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data516 = data;
HXDLIN( 596)								data516->fPos = (data516->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data517 = data;
HXDLIN( 596)								data517->oPos = (data517->oPos + 4);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data518 = data;
HXDLIN( 596)								data518->iiPos = (data518->iiPos + 2);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data519 = data;
HXDLIN( 596)								data519->ffPos = (data519->ffPos + 1);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data520 = data;
HXDLIN( 596)								data520->fPos = (data520->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data521 = data;
HXDLIN( 596)								data521->oPos = (data521->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data522 = data;
HXDLIN( 596)								data522->fPos = (data522->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data523 = data;
HXDLIN( 596)								data523->fPos = (data523->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data524 = data;
HXDLIN( 596)								data524->fPos = (data524->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data525 = data;
HXDLIN( 596)								data525->fPos = (data525->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data526 = data;
HXDLIN( 596)								data526->oPos = (data526->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data527 = data;
HXDLIN( 596)								data527->fPos = (data527->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data528 = data;
HXDLIN( 596)								data528->fPos = (data528->fPos + 5);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data529 = data;
HXDLIN( 596)								data529->oPos = (data529->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data530 = data;
HXDLIN( 596)								data530->oPos = (data530->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data531 = data;
HXDLIN( 596)								data531->oPos = (data531->oPos + 2);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data532 = data;
HXDLIN( 596)								data532->bPos = (data532->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data533 = data;
HXDLIN( 596)								data533->oPos = (data533->oPos + 4);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data534 = data;
HXDLIN( 596)								data534->iiPos = (data534->iiPos + 2);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data535 = data;
HXDLIN( 596)								data535->ffPos = (data535->ffPos + 1);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data536 = data;
HXDLIN( 596)								data536->fPos = (data536->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data537 = data;
HXDLIN( 596)								data537->oPos = (data537->oPos + 4);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data538 = data;
HXDLIN( 596)								data538->iPos = (data538->iPos + 1);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data539 = data;
HXDLIN( 596)								data539->fPos = (data539->fPos + 2);
HXDLIN( 596)								 ::openfl::display::_internal::DrawCommandReader data540 = data;
HXDLIN( 596)								data540->bPos = (data540->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data541 = data;
HXDLIN( 596)								data541->fPos = (data541->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data542 = data;
HXDLIN( 596)								data542->fPos = (data542->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data543 = data;
HXDLIN( 596)								data543->oPos = (data543->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 596)								 ::openfl::display::_internal::DrawCommandReader data544 = data;
HXDLIN( 596)								data544->oPos = (data544->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 596)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 596)						 ::openfl::display::_internal::DrawCommandReader c16 = data;
HXLINE( 597)						::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo((c16->buffer->f->__get(c16->fPos) - offsetX),(c16->buffer->f->__get((c16->fPos + 1)) - offsetY));
HXLINE( 599)						positionX = c16->buffer->f->__get(c16->fPos);
HXLINE( 600)						positionY = c16->buffer->f->__get((c16->fPos + 1));
HXLINE( 602)						bool _hx_tmp25;
HXDLIN( 602)						bool _hx_tmp26;
HXDLIN( 602)						if (setStart) {
HXLINE( 602)							_hx_tmp26 = (c16->buffer->f->__get(c16->fPos) != startX);
            						}
            						else {
HXLINE( 602)							_hx_tmp26 = false;
            						}
HXDLIN( 602)						if (_hx_tmp26) {
HXLINE( 602)							_hx_tmp25 = (c16->buffer->f->__get((c16->fPos + 1)) != startY);
            						}
            						else {
HXLINE( 602)							_hx_tmp25 = false;
            						}
HXDLIN( 602)						if (_hx_tmp25) {
HXLINE( 604)							closeGap = true;
            						}
HXLINE( 607)						startX = c16->buffer->f->__get(c16->fPos);
HXLINE( 608)						startY = c16->buffer->f->__get((c16->fPos + 1));
HXLINE( 609)						setStart = true;
            					}
            					break;
            					case (int)21: {
HXLINE(1049)						{
HXLINE(1049)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data545 = data;
HXDLIN(1049)									data545->oPos = (data545->oPos + 2);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data546 = data;
HXDLIN(1049)									data546->bPos = (data546->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data547 = data;
HXDLIN(1049)									data547->iPos = (data547->iPos + 1);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data548 = data;
HXDLIN(1049)									data548->fPos = (data548->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data549 = data;
HXDLIN(1049)									data549->oPos = (data549->oPos + 4);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data550 = data;
HXDLIN(1049)									data550->iiPos = (data550->iiPos + 2);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data551 = data;
HXDLIN(1049)									data551->ffPos = (data551->ffPos + 1);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data552 = data;
HXDLIN(1049)									data552->fPos = (data552->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data553 = data;
HXDLIN(1049)									data553->oPos = (data553->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data554 = data;
HXDLIN(1049)									data554->fPos = (data554->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data555 = data;
HXDLIN(1049)									data555->fPos = (data555->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data556 = data;
HXDLIN(1049)									data556->fPos = (data556->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data557 = data;
HXDLIN(1049)									data557->fPos = (data557->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data558 = data;
HXDLIN(1049)									data558->oPos = (data558->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data559 = data;
HXDLIN(1049)									data559->fPos = (data559->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data560 = data;
HXDLIN(1049)									data560->fPos = (data560->fPos + 5);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data561 = data;
HXDLIN(1049)									data561->oPos = (data561->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data562 = data;
HXDLIN(1049)									data562->oPos = (data562->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data563 = data;
HXDLIN(1049)									data563->oPos = (data563->oPos + 2);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data564 = data;
HXDLIN(1049)									data564->bPos = (data564->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data565 = data;
HXDLIN(1049)									data565->oPos = (data565->oPos + 4);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data566 = data;
HXDLIN(1049)									data566->iiPos = (data566->iiPos + 2);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data567 = data;
HXDLIN(1049)									data567->ffPos = (data567->ffPos + 1);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data568 = data;
HXDLIN(1049)									data568->fPos = (data568->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data569 = data;
HXDLIN(1049)									data569->oPos = (data569->oPos + 4);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data570 = data;
HXDLIN(1049)									data570->iPos = (data570->iPos + 1);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data571 = data;
HXDLIN(1049)									data571->fPos = (data571->fPos + 2);
HXDLIN(1049)									 ::openfl::display::_internal::DrawCommandReader data572 = data;
HXDLIN(1049)									data572->bPos = (data572->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data573 = data;
HXDLIN(1049)									data573->fPos = (data573->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data574 = data;
HXDLIN(1049)									data574->fPos = (data574->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data575 = data;
HXDLIN(1049)									data575->oPos = (data575->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1049)									 ::openfl::display::_internal::DrawCommandReader data576 = data;
HXDLIN(1049)									data576->oPos = (data576->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1049)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1049)							 ::openfl::display::_internal::DrawCommandReader this1 = data;
            						}
HXLINE(1050)						::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(1);
            					}
            					break;
            					case (int)22: {
HXLINE(1053)						{
HXLINE(1053)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data577 = data;
HXDLIN(1053)									data577->oPos = (data577->oPos + 2);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data578 = data;
HXDLIN(1053)									data578->bPos = (data578->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data579 = data;
HXDLIN(1053)									data579->iPos = (data579->iPos + 1);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data580 = data;
HXDLIN(1053)									data580->fPos = (data580->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data581 = data;
HXDLIN(1053)									data581->oPos = (data581->oPos + 4);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data582 = data;
HXDLIN(1053)									data582->iiPos = (data582->iiPos + 2);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data583 = data;
HXDLIN(1053)									data583->ffPos = (data583->ffPos + 1);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data584 = data;
HXDLIN(1053)									data584->fPos = (data584->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data585 = data;
HXDLIN(1053)									data585->oPos = (data585->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data586 = data;
HXDLIN(1053)									data586->fPos = (data586->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data587 = data;
HXDLIN(1053)									data587->fPos = (data587->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data588 = data;
HXDLIN(1053)									data588->fPos = (data588->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data589 = data;
HXDLIN(1053)									data589->fPos = (data589->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data590 = data;
HXDLIN(1053)									data590->oPos = (data590->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data591 = data;
HXDLIN(1053)									data591->fPos = (data591->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data592 = data;
HXDLIN(1053)									data592->fPos = (data592->fPos + 5);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data593 = data;
HXDLIN(1053)									data593->oPos = (data593->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data594 = data;
HXDLIN(1053)									data594->oPos = (data594->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data595 = data;
HXDLIN(1053)									data595->oPos = (data595->oPos + 2);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data596 = data;
HXDLIN(1053)									data596->bPos = (data596->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data597 = data;
HXDLIN(1053)									data597->oPos = (data597->oPos + 4);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data598 = data;
HXDLIN(1053)									data598->iiPos = (data598->iiPos + 2);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data599 = data;
HXDLIN(1053)									data599->ffPos = (data599->ffPos + 1);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data600 = data;
HXDLIN(1053)									data600->fPos = (data600->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data601 = data;
HXDLIN(1053)									data601->oPos = (data601->oPos + 4);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data602 = data;
HXDLIN(1053)									data602->iPos = (data602->iPos + 1);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data603 = data;
HXDLIN(1053)									data603->fPos = (data603->fPos + 2);
HXDLIN(1053)									 ::openfl::display::_internal::DrawCommandReader data604 = data;
HXDLIN(1053)									data604->bPos = (data604->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data605 = data;
HXDLIN(1053)									data605->fPos = (data605->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data606 = data;
HXDLIN(1053)									data606->fPos = (data606->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data607 = data;
HXDLIN(1053)									data607->oPos = (data607->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1053)									 ::openfl::display::_internal::DrawCommandReader data608 = data;
HXDLIN(1053)									data608->oPos = (data608->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1053)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1053)							 ::openfl::display::_internal::DrawCommandReader this2 = data;
            						}
HXLINE(1054)						::openfl::display::_internal::CairoGraphics_obj::cairo->set_fillRule(0);
            					}
            					break;
            					default:{
HXLINE(1057)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data609 = data;
HXDLIN(1057)								data609->oPos = (data609->oPos + 2);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data610 = data;
HXDLIN(1057)								data610->bPos = (data610->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data611 = data;
HXDLIN(1057)								data611->iPos = (data611->iPos + 1);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data612 = data;
HXDLIN(1057)								data612->fPos = (data612->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data613 = data;
HXDLIN(1057)								data613->oPos = (data613->oPos + 4);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data614 = data;
HXDLIN(1057)								data614->iiPos = (data614->iiPos + 2);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data615 = data;
HXDLIN(1057)								data615->ffPos = (data615->ffPos + 1);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data616 = data;
HXDLIN(1057)								data616->fPos = (data616->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data617 = data;
HXDLIN(1057)								data617->oPos = (data617->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data618 = data;
HXDLIN(1057)								data618->fPos = (data618->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data619 = data;
HXDLIN(1057)								data619->fPos = (data619->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data620 = data;
HXDLIN(1057)								data620->fPos = (data620->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data621 = data;
HXDLIN(1057)								data621->fPos = (data621->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data622 = data;
HXDLIN(1057)								data622->oPos = (data622->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data623 = data;
HXDLIN(1057)								data623->fPos = (data623->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data624 = data;
HXDLIN(1057)								data624->fPos = (data624->fPos + 5);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data625 = data;
HXDLIN(1057)								data625->oPos = (data625->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data626 = data;
HXDLIN(1057)								data626->oPos = (data626->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data627 = data;
HXDLIN(1057)								data627->oPos = (data627->oPos + 2);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data628 = data;
HXDLIN(1057)								data628->bPos = (data628->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data629 = data;
HXDLIN(1057)								data629->oPos = (data629->oPos + 4);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data630 = data;
HXDLIN(1057)								data630->iiPos = (data630->iiPos + 2);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data631 = data;
HXDLIN(1057)								data631->ffPos = (data631->ffPos + 1);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data632 = data;
HXDLIN(1057)								data632->fPos = (data632->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data633 = data;
HXDLIN(1057)								data633->oPos = (data633->oPos + 4);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data634 = data;
HXDLIN(1057)								data634->iPos = (data634->iPos + 1);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data635 = data;
HXDLIN(1057)								data635->fPos = (data635->fPos + 2);
HXDLIN(1057)								 ::openfl::display::_internal::DrawCommandReader data636 = data;
HXDLIN(1057)								data636->bPos = (data636->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data637 = data;
HXDLIN(1057)								data637->fPos = (data637->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data638 = data;
HXDLIN(1057)								data638->fPos = (data638->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data639 = data;
HXDLIN(1057)								data639->oPos = (data639->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(1057)								 ::openfl::display::_internal::DrawCommandReader data640 = data;
HXDLIN(1057)								data640->oPos = (data640->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(1057)						data->prev = type;
            					}
            				}
            			}
            			_hx_goto_14:;
            		}
HXLINE(1061)		data->destroy();
HXLINE(1063)		if (hasPath) {
HXLINE(1065)			bool _hx_tmp27;
HXDLIN(1065)			if (stroke) {
HXLINE(1065)				_hx_tmp27 = ::openfl::display::_internal::CairoGraphics_obj::hasStroke;
            			}
            			else {
HXLINE(1065)				_hx_tmp27 = false;
            			}
HXDLIN(1065)			if (_hx_tmp27) {
HXLINE(1067)				if (::openfl::display::_internal::CairoGraphics_obj::hasFill) {
HXLINE(1069)					bool _hx_tmp28;
HXDLIN(1069)					if ((positionX == startX)) {
HXLINE(1069)						_hx_tmp28 = (positionY != startY);
            					}
            					else {
HXLINE(1069)						_hx_tmp28 = true;
            					}
HXDLIN(1069)					if (_hx_tmp28) {
HXLINE(1071)						::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo((startX - offsetX),(startY - offsetY));
HXLINE(1072)						closeGap = true;
            					}
HXLINE(1075)					if (closeGap) {
HXLINE(1075)						::openfl::display::_internal::CairoGraphics_obj::closePath(true);
            					}
            				}
            				else {
HXLINE(1077)					bool _hx_tmp29;
HXDLIN(1077)					bool _hx_tmp30;
HXDLIN(1077)					if (closeGap) {
HXLINE(1077)						_hx_tmp30 = (positionX == startX);
            					}
            					else {
HXLINE(1077)						_hx_tmp30 = false;
            					}
HXDLIN(1077)					if (_hx_tmp30) {
HXLINE(1077)						_hx_tmp29 = (positionY == startY);
            					}
            					else {
HXLINE(1077)						_hx_tmp29 = false;
            					}
HXDLIN(1077)					if (_hx_tmp29) {
HXLINE(1079)						::openfl::display::_internal::CairoGraphics_obj::closePath(true);
            					}
            				}
HXLINE(1082)				::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::strokePattern);
HXLINE(1083)				if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE(1083)					::openfl::display::_internal::CairoGraphics_obj::cairo->strokePreserve();
            				}
            			}
HXLINE(1086)			bool _hx_tmp31;
HXDLIN(1086)			if (!(stroke)) {
HXLINE(1086)				_hx_tmp31 = ::openfl::display::_internal::CairoGraphics_obj::hasFill;
            			}
            			else {
HXLINE(1086)				_hx_tmp31 = false;
            			}
HXDLIN(1086)			if (_hx_tmp31) {
HXLINE(1088)				::openfl::display::_internal::CairoGraphics_obj::cairo->translate(-(::openfl::display::_internal::CairoGraphics_obj::bounds->x),-(::openfl::display::_internal::CairoGraphics_obj::bounds->y));
HXLINE(1090)				if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::fillPatternMatrix )) {
HXLINE(1092)					 ::openfl::geom::Matrix matrix = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE(1093)					matrix->copyFrom(::openfl::display::_internal::CairoGraphics_obj::fillPatternMatrix);
HXLINE(1094)					matrix->invert();
HXLINE(1096)					if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1098)						matrix->concat(::openfl::display::_internal::CairoGraphics_obj::pendingMatrix);
            					}
HXLINE(1101)					 ::Dynamic _hx_tmp32 = ::openfl::display::_internal::CairoGraphics_obj::fillPattern;
HXDLIN(1101)					::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(_hx_tmp32,matrix->_hx___toMatrix3());
HXLINE(1103)					::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            				}
HXLINE(1106)				::openfl::display::_internal::CairoGraphics_obj::cairo->set_source(::openfl::display::_internal::CairoGraphics_obj::fillPattern);
HXLINE(1108)				if (::hx::IsNotNull( ::openfl::display::_internal::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1110)					 ::lime::graphics::cairo::Cairo _hx_tmp33 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN(1110)					_hx_tmp33->transform(::openfl::display::_internal::CairoGraphics_obj::pendingMatrix->_hx___toMatrix3());
HXLINE(1111)					if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE(1111)						::openfl::display::_internal::CairoGraphics_obj::cairo->fillPreserve();
            					}
HXLINE(1112)					 ::lime::graphics::cairo::Cairo _hx_tmp34 = ::openfl::display::_internal::CairoGraphics_obj::cairo;
HXDLIN(1112)					_hx_tmp34->transform(::openfl::display::_internal::CairoGraphics_obj::inversePendingMatrix->_hx___toMatrix3());
            				}
            				else {
HXLINE(1116)					if (!(::openfl::display::_internal::CairoGraphics_obj::hitTesting)) {
HXLINE(1116)						::openfl::display::_internal::CairoGraphics_obj::cairo->fillPreserve();
            					}
            				}
HXLINE(1119)				::openfl::display::_internal::CairoGraphics_obj::cairo->translate(::openfl::display::_internal::CairoGraphics_obj::bounds->x,::openfl::display::_internal::CairoGraphics_obj::bounds->y);
HXLINE(1120)				::openfl::display::_internal::CairoGraphics_obj::cairo->closePath();
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,playCommands,(void))

void CairoGraphics_obj::quadraticCurveTo(Float cx,Float cy,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_1126_quadraticCurveTo)
HXLINE(1127)		 ::lime::math::Vector2 current = null();
HXLINE(1129)		if (!(::openfl::display::_internal::CairoGraphics_obj::cairo->get_hasCurrentPoint())) {
HXLINE(1131)			::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(cx,cy);
HXLINE(1132)			current =  ::lime::math::Vector2_obj::__alloc( HX_CTX ,cx,cy);
            		}
            		else {
HXLINE(1136)			current = ::openfl::display::_internal::CairoGraphics_obj::cairo->get_currentPoint();
            		}
HXLINE(1139)		Float cx1 = (current->x + (((Float)0.66666666666666663) * (cx - current->x)));
HXLINE(1140)		Float cy1 = (current->y + (((Float)0.66666666666666663) * (cy - current->y)));
HXLINE(1141)		Float cx2 = (x + (((Float)0.66666666666666663) * (cx - x)));
HXLINE(1142)		Float cy2 = (y + (((Float)0.66666666666666663) * (cy - y)));
HXLINE(1144)		::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo(cx1,cy1,cx2,cy2,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,quadraticCurveTo,(void))

void CairoGraphics_obj::render( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_1149_render)
HXLINE(1151)		::openfl::display::_internal::CairoGraphics_obj::graphics = graphics;
HXLINE(1152)		::openfl::display::_internal::CairoGraphics_obj::allowSmoothing = renderer->_hx___allowSmoothing;
HXLINE(1153)		::openfl::display::_internal::CairoGraphics_obj::worldAlpha = renderer->_hx___getAlpha(graphics->_hx___owner->_hx___worldAlpha);
HXLINE(1158)		Float pixelRatio = renderer->_hx___pixelRatio;
HXLINE(1161)		graphics->_hx___update(renderer->_hx___worldTransform,pixelRatio);
HXLINE(1163)		bool _hx_tmp;
HXDLIN(1163)		if (graphics->_hx___softwareDirty) {
HXLINE(1163)			_hx_tmp = graphics->_hx___managed;
            		}
            		else {
HXLINE(1163)			_hx_tmp = true;
            		}
HXDLIN(1163)		if (_hx_tmp) {
HXLINE(1165)			::openfl::display::_internal::CairoGraphics_obj::graphics = null();
HXLINE(1166)			return;
            		}
HXLINE(1169)		::openfl::display::_internal::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE(1171)		int width = graphics->_hx___width;
HXLINE(1172)		int height = graphics->_hx___height;
HXLINE(1174)		bool _hx_tmp1;
HXDLIN(1174)		bool _hx_tmp2;
HXDLIN(1174)		bool _hx_tmp3;
HXDLIN(1174)		bool _hx_tmp4;
HXDLIN(1174)		if (graphics->_hx___visible) {
HXLINE(1174)			_hx_tmp4 = (graphics->_hx___commands->get_length() == 0);
            		}
            		else {
HXLINE(1174)			_hx_tmp4 = true;
            		}
HXDLIN(1174)		if (!(_hx_tmp4)) {
HXLINE(1174)			_hx_tmp3 = ::hx::IsNull( ::openfl::display::_internal::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE(1174)			_hx_tmp3 = true;
            		}
HXDLIN(1174)		if (!(_hx_tmp3)) {
HXLINE(1174)			_hx_tmp2 = (width < 1);
            		}
            		else {
HXLINE(1174)			_hx_tmp2 = true;
            		}
HXDLIN(1174)		if (!(_hx_tmp2)) {
HXLINE(1174)			_hx_tmp1 = (height < 1);
            		}
            		else {
HXLINE(1174)			_hx_tmp1 = true;
            		}
HXDLIN(1174)		if (_hx_tmp1) {
HXLINE(1176)			graphics->_hx___cairo = null();
HXLINE(1177)			graphics->_hx___bitmap = null();
            		}
            		else {
HXLINE(1181)			::openfl::display::_internal::CairoGraphics_obj::hitTesting = false;
HXLINE(1182)			bool needsUpscaling = false;
HXLINE(1184)			if (::hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1186)				 ::Dynamic surface = graphics->_hx___cairo->get_target();
HXLINE(1188)				bool _hx_tmp5;
HXDLIN(1188)				if ((width <= ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_width(surface))) {
HXLINE(1188)					_hx_tmp5 = (height > ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_height(surface));
            				}
            				else {
HXLINE(1188)					_hx_tmp5 = true;
            				}
HXDLIN(1188)				if (_hx_tmp5) {
HXLINE(1190)					graphics->_hx___cairo = null();
HXLINE(1191)					needsUpscaling = true;
            				}
            			}
HXLINE(1195)			bool _hx_tmp6;
HXDLIN(1195)			if (::hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1195)				_hx_tmp6 = ::hx::IsNull( graphics->_hx___bitmap );
            			}
            			else {
HXLINE(1195)				_hx_tmp6 = true;
            			}
HXDLIN(1195)			if (_hx_tmp6) {
HXLINE(1197)				 ::openfl::display::BitmapData bitmap;
HXDLIN(1197)				if (needsUpscaling) {
HXLINE(1197)					int bitmap1 = ::Std_obj::_hx_int((( (Float)(width) ) * ((Float)1.25)));
HXDLIN(1197)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap1,::Std_obj::_hx_int((( (Float)(height) ) * ((Float)1.25))),true,0);
            				}
            				else {
HXLINE(1197)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,width,height,true,0);
            				}
HXLINE(1198)				 ::Dynamic surface1 = bitmap->getSurface();
HXLINE(1199)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface1);
HXLINE(1200)				graphics->_hx___bitmap = bitmap;
            			}
HXLINE(1203)			::openfl::display::_internal::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE(1205)			renderer->_hx___setBlendModeCairo(::openfl::display::_internal::CairoGraphics_obj::cairo,10);
HXLINE(1206)			renderer->applyMatrix(graphics->_hx___renderTransform,::openfl::display::_internal::CairoGraphics_obj::cairo);
HXLINE(1208)			::openfl::display::_internal::CairoGraphics_obj::cairo->setOperator(0);
HXLINE(1209)			::openfl::display::_internal::CairoGraphics_obj::cairo->paint();
HXLINE(1210)			::openfl::display::_internal::CairoGraphics_obj::cairo->setOperator(2);
HXLINE(1212)			::openfl::display::_internal::CairoGraphics_obj::fillCommands->clear();
HXLINE(1213)			::openfl::display::_internal::CairoGraphics_obj::strokeCommands->clear();
HXLINE(1215)			::openfl::display::_internal::CairoGraphics_obj::hasFill = false;
HXLINE(1216)			::openfl::display::_internal::CairoGraphics_obj::hasStroke = false;
HXLINE(1218)			::openfl::display::_internal::CairoGraphics_obj::fillPattern = null();
HXLINE(1219)			::openfl::display::_internal::CairoGraphics_obj::strokePattern = null();
HXLINE(1221)			bool hasLineStyle = false;
HXLINE(1222)			Float initStrokeX = ((Float)0.0);
HXLINE(1223)			Float initStrokeY = ((Float)0.0);
HXLINE(1225)			 ::openfl::display::_internal::DrawCommandReader data =  ::openfl::display::_internal::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1227)			{
HXLINE(1227)				int _g = 0;
HXDLIN(1227)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1227)				while((_g < _g1->length)){
HXLINE(1227)					 ::openfl::display::_internal::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::display::_internal::DrawCommandType >();
HXDLIN(1227)					_g = (_g + 1);
HXLINE(1229)					switch((int)(type->_hx_getIndex())){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE(1341)							::openfl::display::_internal::CairoGraphics_obj::endFill();
HXLINE(1342)							::openfl::display::_internal::CairoGraphics_obj::endStroke();
HXLINE(1344)							if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE(1346)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data1 = data;
HXDLIN(1346)										data1->oPos = (data1->oPos + 2);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data2 = data;
HXDLIN(1346)										data2->bPos = (data2->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data3 = data;
HXDLIN(1346)										data3->iPos = (data3->iPos + 1);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data4 = data;
HXDLIN(1346)										data4->fPos = (data4->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data5 = data;
HXDLIN(1346)										data5->oPos = (data5->oPos + 4);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data6 = data;
HXDLIN(1346)										data6->iiPos = (data6->iiPos + 2);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data7 = data;
HXDLIN(1346)										data7->ffPos = (data7->ffPos + 1);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data8 = data;
HXDLIN(1346)										data8->fPos = (data8->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data9 = data;
HXDLIN(1346)										data9->oPos = (data9->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data10 = data;
HXDLIN(1346)										data10->fPos = (data10->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data11 = data;
HXDLIN(1346)										data11->fPos = (data11->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data12 = data;
HXDLIN(1346)										data12->fPos = (data12->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data13 = data;
HXDLIN(1346)										data13->fPos = (data13->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data14 = data;
HXDLIN(1346)										data14->oPos = (data14->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data15 = data;
HXDLIN(1346)										data15->fPos = (data15->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data16 = data;
HXDLIN(1346)										data16->fPos = (data16->fPos + 5);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data17 = data;
HXDLIN(1346)										data17->oPos = (data17->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data18 = data;
HXDLIN(1346)										data18->oPos = (data18->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data19 = data;
HXDLIN(1346)										data19->oPos = (data19->oPos + 2);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data20 = data;
HXDLIN(1346)										data20->bPos = (data20->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data21 = data;
HXDLIN(1346)										data21->oPos = (data21->oPos + 4);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data22 = data;
HXDLIN(1346)										data22->iiPos = (data22->iiPos + 2);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data23 = data;
HXDLIN(1346)										data23->ffPos = (data23->ffPos + 1);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data24 = data;
HXDLIN(1346)										data24->fPos = (data24->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data25 = data;
HXDLIN(1346)										data25->oPos = (data25->oPos + 4);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data26 = data;
HXDLIN(1346)										data26->iPos = (data26->iPos + 1);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data27 = data;
HXDLIN(1346)										data27->fPos = (data27->fPos + 2);
HXDLIN(1346)										 ::openfl::display::_internal::DrawCommandReader data28 = data;
HXDLIN(1346)										data28->bPos = (data28->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data29 = data;
HXDLIN(1346)										data29->fPos = (data29->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data30 = data;
HXDLIN(1346)										data30->fPos = (data30->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data31 = data;
HXDLIN(1346)										data31->oPos = (data31->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE(1346)										 ::openfl::display::_internal::DrawCommandReader data32 = data;
HXDLIN(1346)										data32->oPos = (data32->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE(1346)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(1346)								 ::openfl::display::_internal::DrawCommandReader c = data;
HXLINE(1347)								::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginBitmapFill(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
HXLINE(1348)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginBitmapFill(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
            							}
            							else {
HXLINE(1350)								if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE(1352)									switch((int)(data->prev->_hx_getIndex())){
            										case (int)0: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data33 = data;
HXDLIN(1352)											data33->oPos = (data33->oPos + 2);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data34 = data;
HXDLIN(1352)											data34->bPos = (data34->bPos + 2);
            										}
            										break;
            										case (int)1: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data35 = data;
HXDLIN(1352)											data35->iPos = (data35->iPos + 1);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data36 = data;
HXDLIN(1352)											data36->fPos = (data36->fPos + 1);
            										}
            										break;
            										case (int)2: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data37 = data;
HXDLIN(1352)											data37->oPos = (data37->oPos + 4);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data38 = data;
HXDLIN(1352)											data38->iiPos = (data38->iiPos + 2);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data39 = data;
HXDLIN(1352)											data39->ffPos = (data39->ffPos + 1);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data40 = data;
HXDLIN(1352)											data40->fPos = (data40->fPos + 1);
            										}
            										break;
            										case (int)3: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data41 = data;
HXDLIN(1352)											data41->oPos = (data41->oPos + 1);
            										}
            										break;
            										case (int)4: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data42 = data;
HXDLIN(1352)											data42->fPos = (data42->fPos + 6);
            										}
            										break;
            										case (int)5: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data43 = data;
HXDLIN(1352)											data43->fPos = (data43->fPos + 4);
            										}
            										break;
            										case (int)6: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data44 = data;
HXDLIN(1352)											data44->fPos = (data44->fPos + 3);
            										}
            										break;
            										case (int)7: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data45 = data;
HXDLIN(1352)											data45->fPos = (data45->fPos + 4);
            										}
            										break;
            										case (int)8: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data46 = data;
HXDLIN(1352)											data46->oPos = (data46->oPos + 3);
            										}
            										break;
            										case (int)9: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data47 = data;
HXDLIN(1352)											data47->fPos = (data47->fPos + 4);
            										}
            										break;
            										case (int)10: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data48 = data;
HXDLIN(1352)											data48->fPos = (data48->fPos + 5);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data49 = data;
HXDLIN(1352)											data49->oPos = (data49->oPos + 1);
            										}
            										break;
            										case (int)12: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data50 = data;
HXDLIN(1352)											data50->oPos = (data50->oPos + 4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data51 = data;
HXDLIN(1352)											data51->oPos = (data51->oPos + 2);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data52 = data;
HXDLIN(1352)											data52->bPos = (data52->bPos + 2);
            										}
            										break;
            										case (int)15: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data53 = data;
HXDLIN(1352)											data53->oPos = (data53->oPos + 4);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data54 = data;
HXDLIN(1352)											data54->iiPos = (data54->iiPos + 2);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data55 = data;
HXDLIN(1352)											data55->ffPos = (data55->ffPos + 1);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data56 = data;
HXDLIN(1352)											data56->fPos = (data56->fPos + 1);
            										}
            										break;
            										case (int)16: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data57 = data;
HXDLIN(1352)											data57->oPos = (data57->oPos + 4);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data58 = data;
HXDLIN(1352)											data58->iPos = (data58->iPos + 1);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data59 = data;
HXDLIN(1352)											data59->fPos = (data59->fPos + 2);
HXDLIN(1352)											 ::openfl::display::_internal::DrawCommandReader data60 = data;
HXDLIN(1352)											data60->bPos = (data60->bPos + 1);
            										}
            										break;
            										case (int)17: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data61 = data;
HXDLIN(1352)											data61->fPos = (data61->fPos + 2);
            										}
            										break;
            										case (int)18: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data62 = data;
HXDLIN(1352)											data62->fPos = (data62->fPos + 2);
            										}
            										break;
            										case (int)19: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data63 = data;
HXDLIN(1352)											data63->oPos = (data63->oPos + 1);
            										}
            										break;
            										case (int)20: {
HXLINE(1352)											 ::openfl::display::_internal::DrawCommandReader data64 = data;
HXDLIN(1352)											data64->oPos = (data64->oPos + 1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
HXLINE(1352)									data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(1352)									 ::openfl::display::_internal::DrawCommandReader c1 = data;
HXLINE(1353)									::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginGradientFill(c1->buffer->o->__get(c1->oPos),c1->buffer->ii->__get(c1->iiPos).StaticCast< ::Array< int > >(),c1->buffer->ff->__get(c1->ffPos).StaticCast< ::Array< Float > >(),c1->buffer->ii->__get((c1->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c1->buffer->o->__get((c1->oPos + 1))) ),c1->buffer->o->__get((c1->oPos + 2)),c1->buffer->o->__get((c1->oPos + 3)),c1->buffer->f->__get(c1->fPos));
HXLINE(1355)									::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginGradientFill(c1->buffer->o->__get(c1->oPos),c1->buffer->ii->__get(c1->iiPos).StaticCast< ::Array< int > >(),c1->buffer->ff->__get(c1->ffPos).StaticCast< ::Array< Float > >(),c1->buffer->ii->__get((c1->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c1->buffer->o->__get((c1->oPos + 1))) ),c1->buffer->o->__get((c1->oPos + 2)),c1->buffer->o->__get((c1->oPos + 3)),c1->buffer->f->__get(c1->fPos));
            								}
            								else {
HXLINE(1358)									if (::hx::IsPointerEq( type,::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE(1360)										switch((int)(data->prev->_hx_getIndex())){
            											case (int)0: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data65 = data;
HXDLIN(1360)												data65->oPos = (data65->oPos + 2);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data66 = data;
HXDLIN(1360)												data66->bPos = (data66->bPos + 2);
            											}
            											break;
            											case (int)1: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data67 = data;
HXDLIN(1360)												data67->iPos = (data67->iPos + 1);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data68 = data;
HXDLIN(1360)												data68->fPos = (data68->fPos + 1);
            											}
            											break;
            											case (int)2: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data69 = data;
HXDLIN(1360)												data69->oPos = (data69->oPos + 4);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data70 = data;
HXDLIN(1360)												data70->iiPos = (data70->iiPos + 2);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data71 = data;
HXDLIN(1360)												data71->ffPos = (data71->ffPos + 1);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data72 = data;
HXDLIN(1360)												data72->fPos = (data72->fPos + 1);
            											}
            											break;
            											case (int)3: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data73 = data;
HXDLIN(1360)												data73->oPos = (data73->oPos + 1);
            											}
            											break;
            											case (int)4: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data74 = data;
HXDLIN(1360)												data74->fPos = (data74->fPos + 6);
            											}
            											break;
            											case (int)5: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data75 = data;
HXDLIN(1360)												data75->fPos = (data75->fPos + 4);
            											}
            											break;
            											case (int)6: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data76 = data;
HXDLIN(1360)												data76->fPos = (data76->fPos + 3);
            											}
            											break;
            											case (int)7: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data77 = data;
HXDLIN(1360)												data77->fPos = (data77->fPos + 4);
            											}
            											break;
            											case (int)8: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data78 = data;
HXDLIN(1360)												data78->oPos = (data78->oPos + 3);
            											}
            											break;
            											case (int)9: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data79 = data;
HXDLIN(1360)												data79->fPos = (data79->fPos + 4);
            											}
            											break;
            											case (int)10: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data80 = data;
HXDLIN(1360)												data80->fPos = (data80->fPos + 5);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data81 = data;
HXDLIN(1360)												data81->oPos = (data81->oPos + 1);
            											}
            											break;
            											case (int)12: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data82 = data;
HXDLIN(1360)												data82->oPos = (data82->oPos + 4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data83 = data;
HXDLIN(1360)												data83->oPos = (data83->oPos + 2);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data84 = data;
HXDLIN(1360)												data84->bPos = (data84->bPos + 2);
            											}
            											break;
            											case (int)15: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data85 = data;
HXDLIN(1360)												data85->oPos = (data85->oPos + 4);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data86 = data;
HXDLIN(1360)												data86->iiPos = (data86->iiPos + 2);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data87 = data;
HXDLIN(1360)												data87->ffPos = (data87->ffPos + 1);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data88 = data;
HXDLIN(1360)												data88->fPos = (data88->fPos + 1);
            											}
            											break;
            											case (int)16: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data89 = data;
HXDLIN(1360)												data89->oPos = (data89->oPos + 4);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data90 = data;
HXDLIN(1360)												data90->iPos = (data90->iPos + 1);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data91 = data;
HXDLIN(1360)												data91->fPos = (data91->fPos + 2);
HXDLIN(1360)												 ::openfl::display::_internal::DrawCommandReader data92 = data;
HXDLIN(1360)												data92->bPos = (data92->bPos + 1);
            											}
            											break;
            											case (int)17: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data93 = data;
HXDLIN(1360)												data93->fPos = (data93->fPos + 2);
            											}
            											break;
            											case (int)18: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data94 = data;
HXDLIN(1360)												data94->fPos = (data94->fPos + 2);
            											}
            											break;
            											case (int)19: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data95 = data;
HXDLIN(1360)												data95->oPos = (data95->oPos + 1);
            											}
            											break;
            											case (int)20: {
HXLINE(1360)												 ::openfl::display::_internal::DrawCommandReader data96 = data;
HXDLIN(1360)												data96->oPos = (data96->oPos + 1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
HXLINE(1360)										data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN(1360)										 ::openfl::display::_internal::DrawCommandReader c2 = data;
HXLINE(1361)										::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::display::_internal::ShaderBuffer)(c2->buffer->o->__get(c2->oPos)) ));
HXLINE(1362)										::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::display::_internal::ShaderBuffer)(c2->buffer->o->__get(c2->oPos)) ));
            									}
            									else {
HXLINE(1366)										switch((int)(data->prev->_hx_getIndex())){
            											case (int)0: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data97 = data;
HXDLIN(1366)												data97->oPos = (data97->oPos + 2);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data98 = data;
HXDLIN(1366)												data98->bPos = (data98->bPos + 2);
            											}
            											break;
            											case (int)1: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data99 = data;
HXDLIN(1366)												data99->iPos = (data99->iPos + 1);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data100 = data;
HXDLIN(1366)												data100->fPos = (data100->fPos + 1);
            											}
            											break;
            											case (int)2: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data101 = data;
HXDLIN(1366)												data101->oPos = (data101->oPos + 4);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data102 = data;
HXDLIN(1366)												data102->iiPos = (data102->iiPos + 2);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data103 = data;
HXDLIN(1366)												data103->ffPos = (data103->ffPos + 1);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data104 = data;
HXDLIN(1366)												data104->fPos = (data104->fPos + 1);
            											}
            											break;
            											case (int)3: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data105 = data;
HXDLIN(1366)												data105->oPos = (data105->oPos + 1);
            											}
            											break;
            											case (int)4: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data106 = data;
HXDLIN(1366)												data106->fPos = (data106->fPos + 6);
            											}
            											break;
            											case (int)5: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data107 = data;
HXDLIN(1366)												data107->fPos = (data107->fPos + 4);
            											}
            											break;
            											case (int)6: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data108 = data;
HXDLIN(1366)												data108->fPos = (data108->fPos + 3);
            											}
            											break;
            											case (int)7: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data109 = data;
HXDLIN(1366)												data109->fPos = (data109->fPos + 4);
            											}
            											break;
            											case (int)8: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data110 = data;
HXDLIN(1366)												data110->oPos = (data110->oPos + 3);
            											}
            											break;
            											case (int)9: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data111 = data;
HXDLIN(1366)												data111->fPos = (data111->fPos + 4);
            											}
            											break;
            											case (int)10: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data112 = data;
HXDLIN(1366)												data112->fPos = (data112->fPos + 5);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data113 = data;
HXDLIN(1366)												data113->oPos = (data113->oPos + 1);
            											}
            											break;
            											case (int)12: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data114 = data;
HXDLIN(1366)												data114->oPos = (data114->oPos + 4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data115 = data;
HXDLIN(1366)												data115->oPos = (data115->oPos + 2);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data116 = data;
HXDLIN(1366)												data116->bPos = (data116->bPos + 2);
            											}
            											break;
            											case (int)15: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data117 = data;
HXDLIN(1366)												data117->oPos = (data117->oPos + 4);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data118 = data;
HXDLIN(1366)												data118->iiPos = (data118->iiPos + 2);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data119 = data;
HXDLIN(1366)												data119->ffPos = (data119->ffPos + 1);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data120 = data;
HXDLIN(1366)												data120->fPos = (data120->fPos + 1);
            											}
            											break;
            											case (int)16: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data121 = data;
HXDLIN(1366)												data121->oPos = (data121->oPos + 4);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data122 = data;
HXDLIN(1366)												data122->iPos = (data122->iPos + 1);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data123 = data;
HXDLIN(1366)												data123->fPos = (data123->fPos + 2);
HXDLIN(1366)												 ::openfl::display::_internal::DrawCommandReader data124 = data;
HXDLIN(1366)												data124->bPos = (data124->bPos + 1);
            											}
            											break;
            											case (int)17: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data125 = data;
HXDLIN(1366)												data125->fPos = (data125->fPos + 2);
            											}
            											break;
            											case (int)18: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data126 = data;
HXDLIN(1366)												data126->fPos = (data126->fPos + 2);
            											}
            											break;
            											case (int)19: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data127 = data;
HXDLIN(1366)												data127->oPos = (data127->oPos + 1);
            											}
            											break;
            											case (int)20: {
HXLINE(1366)												 ::openfl::display::_internal::DrawCommandReader data128 = data;
HXDLIN(1366)												data128->oPos = (data128->oPos + 1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
HXLINE(1366)										data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(1366)										 ::openfl::display::_internal::DrawCommandReader c3 = data;
HXLINE(1367)										::openfl::display::_internal::CairoGraphics_obj::fillCommands->beginFill(c3->buffer->i->__get(c3->iPos),c3->buffer->f->__get(c3->fPos));
HXLINE(1368)										::openfl::display::_internal::CairoGraphics_obj::strokeCommands->beginFill(c3->buffer->i->__get(c3->iPos),c3->buffer->f->__get(c3->fPos));
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE(1232)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data129 = data;
HXDLIN(1232)									data129->oPos = (data129->oPos + 2);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data130 = data;
HXDLIN(1232)									data130->bPos = (data130->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data131 = data;
HXDLIN(1232)									data131->iPos = (data131->iPos + 1);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data132 = data;
HXDLIN(1232)									data132->fPos = (data132->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data133 = data;
HXDLIN(1232)									data133->oPos = (data133->oPos + 4);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data134 = data;
HXDLIN(1232)									data134->iiPos = (data134->iiPos + 2);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data135 = data;
HXDLIN(1232)									data135->ffPos = (data135->ffPos + 1);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data136 = data;
HXDLIN(1232)									data136->fPos = (data136->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data137 = data;
HXDLIN(1232)									data137->oPos = (data137->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data138 = data;
HXDLIN(1232)									data138->fPos = (data138->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data139 = data;
HXDLIN(1232)									data139->fPos = (data139->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data140 = data;
HXDLIN(1232)									data140->fPos = (data140->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data141 = data;
HXDLIN(1232)									data141->fPos = (data141->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data142 = data;
HXDLIN(1232)									data142->oPos = (data142->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data143 = data;
HXDLIN(1232)									data143->fPos = (data143->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data144 = data;
HXDLIN(1232)									data144->fPos = (data144->fPos + 5);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data145 = data;
HXDLIN(1232)									data145->oPos = (data145->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data146 = data;
HXDLIN(1232)									data146->oPos = (data146->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data147 = data;
HXDLIN(1232)									data147->oPos = (data147->oPos + 2);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data148 = data;
HXDLIN(1232)									data148->bPos = (data148->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data149 = data;
HXDLIN(1232)									data149->oPos = (data149->oPos + 4);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data150 = data;
HXDLIN(1232)									data150->iiPos = (data150->iiPos + 2);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data151 = data;
HXDLIN(1232)									data151->ffPos = (data151->ffPos + 1);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data152 = data;
HXDLIN(1232)									data152->fPos = (data152->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data153 = data;
HXDLIN(1232)									data153->oPos = (data153->oPos + 4);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data154 = data;
HXDLIN(1232)									data154->iPos = (data154->iPos + 1);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data155 = data;
HXDLIN(1232)									data155->fPos = (data155->fPos + 2);
HXDLIN(1232)									 ::openfl::display::_internal::DrawCommandReader data156 = data;
HXDLIN(1232)									data156->bPos = (data156->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data157 = data;
HXDLIN(1232)									data157->fPos = (data157->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data158 = data;
HXDLIN(1232)									data158->fPos = (data158->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data159 = data;
HXDLIN(1232)									data159->oPos = (data159->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1232)									 ::openfl::display::_internal::DrawCommandReader data160 = data;
HXDLIN(1232)									data160->oPos = (data160->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1232)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1232)							 ::openfl::display::_internal::DrawCommandReader c4 = data;
HXLINE(1233)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->cubicCurveTo(c4->buffer->f->__get(c4->fPos),c4->buffer->f->__get((c4->fPos + 1)),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)),c4->buffer->f->__get((c4->fPos + 4)),c4->buffer->f->__get((c4->fPos + 5)));
HXLINE(1235)							if (hasLineStyle) {
HXLINE(1237)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->cubicCurveTo(c4->buffer->f->__get(c4->fPos),c4->buffer->f->__get((c4->fPos + 1)),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)),c4->buffer->f->__get((c4->fPos + 4)),c4->buffer->f->__get((c4->fPos + 5)));
            							}
            							else {
HXLINE(1241)								initStrokeX = c4->buffer->f->__get((c4->fPos + 4));
HXLINE(1242)								initStrokeY = c4->buffer->f->__get((c4->fPos + 5));
            							}
            						}
            						break;
            						case (int)5: {
HXLINE(1246)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data161 = data;
HXDLIN(1246)									data161->oPos = (data161->oPos + 2);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data162 = data;
HXDLIN(1246)									data162->bPos = (data162->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data163 = data;
HXDLIN(1246)									data163->iPos = (data163->iPos + 1);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data164 = data;
HXDLIN(1246)									data164->fPos = (data164->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data165 = data;
HXDLIN(1246)									data165->oPos = (data165->oPos + 4);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data166 = data;
HXDLIN(1246)									data166->iiPos = (data166->iiPos + 2);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data167 = data;
HXDLIN(1246)									data167->ffPos = (data167->ffPos + 1);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data168 = data;
HXDLIN(1246)									data168->fPos = (data168->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data169 = data;
HXDLIN(1246)									data169->oPos = (data169->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data170 = data;
HXDLIN(1246)									data170->fPos = (data170->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data171 = data;
HXDLIN(1246)									data171->fPos = (data171->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data172 = data;
HXDLIN(1246)									data172->fPos = (data172->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data173 = data;
HXDLIN(1246)									data173->fPos = (data173->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data174 = data;
HXDLIN(1246)									data174->oPos = (data174->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data175 = data;
HXDLIN(1246)									data175->fPos = (data175->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data176 = data;
HXDLIN(1246)									data176->fPos = (data176->fPos + 5);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data177 = data;
HXDLIN(1246)									data177->oPos = (data177->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data178 = data;
HXDLIN(1246)									data178->oPos = (data178->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data179 = data;
HXDLIN(1246)									data179->oPos = (data179->oPos + 2);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data180 = data;
HXDLIN(1246)									data180->bPos = (data180->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data181 = data;
HXDLIN(1246)									data181->oPos = (data181->oPos + 4);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data182 = data;
HXDLIN(1246)									data182->iiPos = (data182->iiPos + 2);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data183 = data;
HXDLIN(1246)									data183->ffPos = (data183->ffPos + 1);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data184 = data;
HXDLIN(1246)									data184->fPos = (data184->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data185 = data;
HXDLIN(1246)									data185->oPos = (data185->oPos + 4);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data186 = data;
HXDLIN(1246)									data186->iPos = (data186->iPos + 1);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data187 = data;
HXDLIN(1246)									data187->fPos = (data187->fPos + 2);
HXDLIN(1246)									 ::openfl::display::_internal::DrawCommandReader data188 = data;
HXDLIN(1246)									data188->bPos = (data188->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data189 = data;
HXDLIN(1246)									data189->fPos = (data189->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data190 = data;
HXDLIN(1246)									data190->fPos = (data190->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data191 = data;
HXDLIN(1246)									data191->oPos = (data191->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1246)									 ::openfl::display::_internal::DrawCommandReader data192 = data;
HXDLIN(1246)									data192->oPos = (data192->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1246)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1246)							 ::openfl::display::_internal::DrawCommandReader c5 = data;
HXLINE(1247)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->curveTo(c5->buffer->f->__get(c5->fPos),c5->buffer->f->__get((c5->fPos + 1)),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)));
HXLINE(1249)							if (hasLineStyle) {
HXLINE(1251)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->curveTo(c5->buffer->f->__get(c5->fPos),c5->buffer->f->__get((c5->fPos + 1)),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)));
            							}
            							else {
HXLINE(1255)								initStrokeX = c5->buffer->f->__get((c5->fPos + 2));
HXLINE(1256)								initStrokeY = c5->buffer->f->__get((c5->fPos + 3));
            							}
            						}
            						break;
            						case (int)6: {
HXLINE(1372)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data193 = data;
HXDLIN(1372)									data193->oPos = (data193->oPos + 2);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data194 = data;
HXDLIN(1372)									data194->bPos = (data194->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data195 = data;
HXDLIN(1372)									data195->iPos = (data195->iPos + 1);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data196 = data;
HXDLIN(1372)									data196->fPos = (data196->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data197 = data;
HXDLIN(1372)									data197->oPos = (data197->oPos + 4);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data198 = data;
HXDLIN(1372)									data198->iiPos = (data198->iiPos + 2);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data199 = data;
HXDLIN(1372)									data199->ffPos = (data199->ffPos + 1);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data200 = data;
HXDLIN(1372)									data200->fPos = (data200->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data201 = data;
HXDLIN(1372)									data201->oPos = (data201->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data202 = data;
HXDLIN(1372)									data202->fPos = (data202->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data203 = data;
HXDLIN(1372)									data203->fPos = (data203->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data204 = data;
HXDLIN(1372)									data204->fPos = (data204->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data205 = data;
HXDLIN(1372)									data205->fPos = (data205->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data206 = data;
HXDLIN(1372)									data206->oPos = (data206->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data207 = data;
HXDLIN(1372)									data207->fPos = (data207->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data208 = data;
HXDLIN(1372)									data208->fPos = (data208->fPos + 5);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data209 = data;
HXDLIN(1372)									data209->oPos = (data209->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data210 = data;
HXDLIN(1372)									data210->oPos = (data210->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data211 = data;
HXDLIN(1372)									data211->oPos = (data211->oPos + 2);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data212 = data;
HXDLIN(1372)									data212->bPos = (data212->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data213 = data;
HXDLIN(1372)									data213->oPos = (data213->oPos + 4);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data214 = data;
HXDLIN(1372)									data214->iiPos = (data214->iiPos + 2);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data215 = data;
HXDLIN(1372)									data215->ffPos = (data215->ffPos + 1);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data216 = data;
HXDLIN(1372)									data216->fPos = (data216->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data217 = data;
HXDLIN(1372)									data217->oPos = (data217->oPos + 4);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data218 = data;
HXDLIN(1372)									data218->iPos = (data218->iPos + 1);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data219 = data;
HXDLIN(1372)									data219->fPos = (data219->fPos + 2);
HXDLIN(1372)									 ::openfl::display::_internal::DrawCommandReader data220 = data;
HXDLIN(1372)									data220->bPos = (data220->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data221 = data;
HXDLIN(1372)									data221->fPos = (data221->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data222 = data;
HXDLIN(1372)									data222->fPos = (data222->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data223 = data;
HXDLIN(1372)									data223->oPos = (data223->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1372)									 ::openfl::display::_internal::DrawCommandReader data224 = data;
HXDLIN(1372)									data224->oPos = (data224->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1372)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1372)							 ::openfl::display::_internal::DrawCommandReader c6 = data;
HXLINE(1373)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawCircle(c6->buffer->f->__get(c6->fPos),c6->buffer->f->__get((c6->fPos + 1)),c6->buffer->f->__get((c6->fPos + 2)));
HXLINE(1375)							if (hasLineStyle) {
HXLINE(1377)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawCircle(c6->buffer->f->__get(c6->fPos),c6->buffer->f->__get((c6->fPos + 1)),c6->buffer->f->__get((c6->fPos + 2)));
            							}
            						}
            						break;
            						case (int)7: {
HXLINE(1381)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data225 = data;
HXDLIN(1381)									data225->oPos = (data225->oPos + 2);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data226 = data;
HXDLIN(1381)									data226->bPos = (data226->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data227 = data;
HXDLIN(1381)									data227->iPos = (data227->iPos + 1);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data228 = data;
HXDLIN(1381)									data228->fPos = (data228->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data229 = data;
HXDLIN(1381)									data229->oPos = (data229->oPos + 4);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data230 = data;
HXDLIN(1381)									data230->iiPos = (data230->iiPos + 2);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data231 = data;
HXDLIN(1381)									data231->ffPos = (data231->ffPos + 1);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data232 = data;
HXDLIN(1381)									data232->fPos = (data232->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data233 = data;
HXDLIN(1381)									data233->oPos = (data233->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data234 = data;
HXDLIN(1381)									data234->fPos = (data234->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data235 = data;
HXDLIN(1381)									data235->fPos = (data235->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data236 = data;
HXDLIN(1381)									data236->fPos = (data236->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data237 = data;
HXDLIN(1381)									data237->fPos = (data237->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data238 = data;
HXDLIN(1381)									data238->oPos = (data238->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data239 = data;
HXDLIN(1381)									data239->fPos = (data239->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data240 = data;
HXDLIN(1381)									data240->fPos = (data240->fPos + 5);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data241 = data;
HXDLIN(1381)									data241->oPos = (data241->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data242 = data;
HXDLIN(1381)									data242->oPos = (data242->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data243 = data;
HXDLIN(1381)									data243->oPos = (data243->oPos + 2);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data244 = data;
HXDLIN(1381)									data244->bPos = (data244->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data245 = data;
HXDLIN(1381)									data245->oPos = (data245->oPos + 4);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data246 = data;
HXDLIN(1381)									data246->iiPos = (data246->iiPos + 2);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data247 = data;
HXDLIN(1381)									data247->ffPos = (data247->ffPos + 1);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data248 = data;
HXDLIN(1381)									data248->fPos = (data248->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data249 = data;
HXDLIN(1381)									data249->oPos = (data249->oPos + 4);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data250 = data;
HXDLIN(1381)									data250->iPos = (data250->iPos + 1);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data251 = data;
HXDLIN(1381)									data251->fPos = (data251->fPos + 2);
HXDLIN(1381)									 ::openfl::display::_internal::DrawCommandReader data252 = data;
HXDLIN(1381)									data252->bPos = (data252->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data253 = data;
HXDLIN(1381)									data253->fPos = (data253->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data254 = data;
HXDLIN(1381)									data254->fPos = (data254->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data255 = data;
HXDLIN(1381)									data255->oPos = (data255->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1381)									 ::openfl::display::_internal::DrawCommandReader data256 = data;
HXDLIN(1381)									data256->oPos = (data256->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1381)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1381)							 ::openfl::display::_internal::DrawCommandReader c7 = data;
HXLINE(1382)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawEllipse(c7->buffer->f->__get(c7->fPos),c7->buffer->f->__get((c7->fPos + 1)),c7->buffer->f->__get((c7->fPos + 2)),c7->buffer->f->__get((c7->fPos + 3)));
HXLINE(1384)							if (hasLineStyle) {
HXLINE(1386)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawEllipse(c7->buffer->f->__get(c7->fPos),c7->buffer->f->__get((c7->fPos + 1)),c7->buffer->f->__get((c7->fPos + 2)),c7->buffer->f->__get((c7->fPos + 3)));
            							}
            						}
            						break;
            						case (int)8: {
HXLINE(1408)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data257 = data;
HXDLIN(1408)									data257->oPos = (data257->oPos + 2);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data258 = data;
HXDLIN(1408)									data258->bPos = (data258->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data259 = data;
HXDLIN(1408)									data259->iPos = (data259->iPos + 1);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data260 = data;
HXDLIN(1408)									data260->fPos = (data260->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data261 = data;
HXDLIN(1408)									data261->oPos = (data261->oPos + 4);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data262 = data;
HXDLIN(1408)									data262->iiPos = (data262->iiPos + 2);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data263 = data;
HXDLIN(1408)									data263->ffPos = (data263->ffPos + 1);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data264 = data;
HXDLIN(1408)									data264->fPos = (data264->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data265 = data;
HXDLIN(1408)									data265->oPos = (data265->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data266 = data;
HXDLIN(1408)									data266->fPos = (data266->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data267 = data;
HXDLIN(1408)									data267->fPos = (data267->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data268 = data;
HXDLIN(1408)									data268->fPos = (data268->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data269 = data;
HXDLIN(1408)									data269->fPos = (data269->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data270 = data;
HXDLIN(1408)									data270->oPos = (data270->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data271 = data;
HXDLIN(1408)									data271->fPos = (data271->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data272 = data;
HXDLIN(1408)									data272->fPos = (data272->fPos + 5);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data273 = data;
HXDLIN(1408)									data273->oPos = (data273->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data274 = data;
HXDLIN(1408)									data274->oPos = (data274->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data275 = data;
HXDLIN(1408)									data275->oPos = (data275->oPos + 2);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data276 = data;
HXDLIN(1408)									data276->bPos = (data276->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data277 = data;
HXDLIN(1408)									data277->oPos = (data277->oPos + 4);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data278 = data;
HXDLIN(1408)									data278->iiPos = (data278->iiPos + 2);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data279 = data;
HXDLIN(1408)									data279->ffPos = (data279->ffPos + 1);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data280 = data;
HXDLIN(1408)									data280->fPos = (data280->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data281 = data;
HXDLIN(1408)									data281->oPos = (data281->oPos + 4);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data282 = data;
HXDLIN(1408)									data282->iPos = (data282->iPos + 1);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data283 = data;
HXDLIN(1408)									data283->fPos = (data283->fPos + 2);
HXDLIN(1408)									 ::openfl::display::_internal::DrawCommandReader data284 = data;
HXDLIN(1408)									data284->bPos = (data284->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data285 = data;
HXDLIN(1408)									data285->fPos = (data285->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data286 = data;
HXDLIN(1408)									data286->fPos = (data286->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data287 = data;
HXDLIN(1408)									data287->oPos = (data287->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1408)									 ::openfl::display::_internal::DrawCommandReader data288 = data;
HXDLIN(1408)									data288->oPos = (data288->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1408)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN(1408)							 ::openfl::display::_internal::DrawCommandReader c8 = data;
HXLINE(1409)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawQuads(( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get(c8->oPos)) ),( ( ::openfl::_Vector::IntVector)(c8->buffer->o->__get((c8->oPos + 1))) ),( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get((c8->oPos + 2))) ));
            						}
            						break;
            						case (int)9: {
HXLINE(1390)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data289 = data;
HXDLIN(1390)									data289->oPos = (data289->oPos + 2);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data290 = data;
HXDLIN(1390)									data290->bPos = (data290->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data291 = data;
HXDLIN(1390)									data291->iPos = (data291->iPos + 1);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data292 = data;
HXDLIN(1390)									data292->fPos = (data292->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data293 = data;
HXDLIN(1390)									data293->oPos = (data293->oPos + 4);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data294 = data;
HXDLIN(1390)									data294->iiPos = (data294->iiPos + 2);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data295 = data;
HXDLIN(1390)									data295->ffPos = (data295->ffPos + 1);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data296 = data;
HXDLIN(1390)									data296->fPos = (data296->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data297 = data;
HXDLIN(1390)									data297->oPos = (data297->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data298 = data;
HXDLIN(1390)									data298->fPos = (data298->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data299 = data;
HXDLIN(1390)									data299->fPos = (data299->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data300 = data;
HXDLIN(1390)									data300->fPos = (data300->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data301 = data;
HXDLIN(1390)									data301->fPos = (data301->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data302 = data;
HXDLIN(1390)									data302->oPos = (data302->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data303 = data;
HXDLIN(1390)									data303->fPos = (data303->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data304 = data;
HXDLIN(1390)									data304->fPos = (data304->fPos + 5);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data305 = data;
HXDLIN(1390)									data305->oPos = (data305->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data306 = data;
HXDLIN(1390)									data306->oPos = (data306->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data307 = data;
HXDLIN(1390)									data307->oPos = (data307->oPos + 2);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data308 = data;
HXDLIN(1390)									data308->bPos = (data308->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data309 = data;
HXDLIN(1390)									data309->oPos = (data309->oPos + 4);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data310 = data;
HXDLIN(1390)									data310->iiPos = (data310->iiPos + 2);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data311 = data;
HXDLIN(1390)									data311->ffPos = (data311->ffPos + 1);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data312 = data;
HXDLIN(1390)									data312->fPos = (data312->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data313 = data;
HXDLIN(1390)									data313->oPos = (data313->oPos + 4);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data314 = data;
HXDLIN(1390)									data314->iPos = (data314->iPos + 1);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data315 = data;
HXDLIN(1390)									data315->fPos = (data315->fPos + 2);
HXDLIN(1390)									 ::openfl::display::_internal::DrawCommandReader data316 = data;
HXDLIN(1390)									data316->bPos = (data316->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data317 = data;
HXDLIN(1390)									data317->fPos = (data317->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data318 = data;
HXDLIN(1390)									data318->fPos = (data318->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data319 = data;
HXDLIN(1390)									data319->oPos = (data319->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1390)									 ::openfl::display::_internal::DrawCommandReader data320 = data;
HXDLIN(1390)									data320->oPos = (data320->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1390)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1390)							 ::openfl::display::_internal::DrawCommandReader c9 = data;
HXLINE(1391)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawRect(c9->buffer->f->__get(c9->fPos),c9->buffer->f->__get((c9->fPos + 1)),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)));
HXLINE(1393)							if (hasLineStyle) {
HXLINE(1395)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawRect(c9->buffer->f->__get(c9->fPos),c9->buffer->f->__get((c9->fPos + 1)),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)));
            							}
            						}
            						break;
            						case (int)10: {
HXLINE(1399)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data321 = data;
HXDLIN(1399)									data321->oPos = (data321->oPos + 2);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data322 = data;
HXDLIN(1399)									data322->bPos = (data322->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data323 = data;
HXDLIN(1399)									data323->iPos = (data323->iPos + 1);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data324 = data;
HXDLIN(1399)									data324->fPos = (data324->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data325 = data;
HXDLIN(1399)									data325->oPos = (data325->oPos + 4);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data326 = data;
HXDLIN(1399)									data326->iiPos = (data326->iiPos + 2);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data327 = data;
HXDLIN(1399)									data327->ffPos = (data327->ffPos + 1);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data328 = data;
HXDLIN(1399)									data328->fPos = (data328->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data329 = data;
HXDLIN(1399)									data329->oPos = (data329->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data330 = data;
HXDLIN(1399)									data330->fPos = (data330->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data331 = data;
HXDLIN(1399)									data331->fPos = (data331->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data332 = data;
HXDLIN(1399)									data332->fPos = (data332->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data333 = data;
HXDLIN(1399)									data333->fPos = (data333->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data334 = data;
HXDLIN(1399)									data334->oPos = (data334->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data335 = data;
HXDLIN(1399)									data335->fPos = (data335->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data336 = data;
HXDLIN(1399)									data336->fPos = (data336->fPos + 5);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data337 = data;
HXDLIN(1399)									data337->oPos = (data337->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data338 = data;
HXDLIN(1399)									data338->oPos = (data338->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data339 = data;
HXDLIN(1399)									data339->oPos = (data339->oPos + 2);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data340 = data;
HXDLIN(1399)									data340->bPos = (data340->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data341 = data;
HXDLIN(1399)									data341->oPos = (data341->oPos + 4);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data342 = data;
HXDLIN(1399)									data342->iiPos = (data342->iiPos + 2);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data343 = data;
HXDLIN(1399)									data343->ffPos = (data343->ffPos + 1);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data344 = data;
HXDLIN(1399)									data344->fPos = (data344->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data345 = data;
HXDLIN(1399)									data345->oPos = (data345->oPos + 4);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data346 = data;
HXDLIN(1399)									data346->iPos = (data346->iPos + 1);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data347 = data;
HXDLIN(1399)									data347->fPos = (data347->fPos + 2);
HXDLIN(1399)									 ::openfl::display::_internal::DrawCommandReader data348 = data;
HXDLIN(1399)									data348->bPos = (data348->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data349 = data;
HXDLIN(1399)									data349->fPos = (data349->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data350 = data;
HXDLIN(1399)									data350->fPos = (data350->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data351 = data;
HXDLIN(1399)									data351->oPos = (data351->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1399)									 ::openfl::display::_internal::DrawCommandReader data352 = data;
HXDLIN(1399)									data352->oPos = (data352->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1399)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1399)							 ::openfl::display::_internal::DrawCommandReader c10 = data;
HXLINE(1400)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawRoundRect(c10->buffer->f->__get(c10->fPos),c10->buffer->f->__get((c10->fPos + 1)),c10->buffer->f->__get((c10->fPos + 2)),c10->buffer->f->__get((c10->fPos + 3)),c10->buffer->f->__get((c10->fPos + 4)),c10->buffer->o->__get(c10->oPos));
HXLINE(1402)							if (hasLineStyle) {
HXLINE(1404)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->drawRoundRect(c10->buffer->f->__get(c10->fPos),c10->buffer->f->__get((c10->fPos + 1)),c10->buffer->f->__get((c10->fPos + 2)),c10->buffer->f->__get((c10->fPos + 3)),c10->buffer->f->__get((c10->fPos + 4)),c10->buffer->o->__get(c10->oPos));
            							}
            						}
            						break;
            						case (int)12: {
HXLINE(1412)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data353 = data;
HXDLIN(1412)									data353->oPos = (data353->oPos + 2);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data354 = data;
HXDLIN(1412)									data354->bPos = (data354->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data355 = data;
HXDLIN(1412)									data355->iPos = (data355->iPos + 1);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data356 = data;
HXDLIN(1412)									data356->fPos = (data356->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data357 = data;
HXDLIN(1412)									data357->oPos = (data357->oPos + 4);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data358 = data;
HXDLIN(1412)									data358->iiPos = (data358->iiPos + 2);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data359 = data;
HXDLIN(1412)									data359->ffPos = (data359->ffPos + 1);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data360 = data;
HXDLIN(1412)									data360->fPos = (data360->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data361 = data;
HXDLIN(1412)									data361->oPos = (data361->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data362 = data;
HXDLIN(1412)									data362->fPos = (data362->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data363 = data;
HXDLIN(1412)									data363->fPos = (data363->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data364 = data;
HXDLIN(1412)									data364->fPos = (data364->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data365 = data;
HXDLIN(1412)									data365->fPos = (data365->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data366 = data;
HXDLIN(1412)									data366->oPos = (data366->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data367 = data;
HXDLIN(1412)									data367->fPos = (data367->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data368 = data;
HXDLIN(1412)									data368->fPos = (data368->fPos + 5);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data369 = data;
HXDLIN(1412)									data369->oPos = (data369->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data370 = data;
HXDLIN(1412)									data370->oPos = (data370->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data371 = data;
HXDLIN(1412)									data371->oPos = (data371->oPos + 2);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data372 = data;
HXDLIN(1412)									data372->bPos = (data372->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data373 = data;
HXDLIN(1412)									data373->oPos = (data373->oPos + 4);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data374 = data;
HXDLIN(1412)									data374->iiPos = (data374->iiPos + 2);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data375 = data;
HXDLIN(1412)									data375->ffPos = (data375->ffPos + 1);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data376 = data;
HXDLIN(1412)									data376->fPos = (data376->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data377 = data;
HXDLIN(1412)									data377->oPos = (data377->oPos + 4);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data378 = data;
HXDLIN(1412)									data378->iPos = (data378->iPos + 1);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data379 = data;
HXDLIN(1412)									data379->fPos = (data379->fPos + 2);
HXDLIN(1412)									 ::openfl::display::_internal::DrawCommandReader data380 = data;
HXDLIN(1412)									data380->bPos = (data380->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data381 = data;
HXDLIN(1412)									data381->fPos = (data381->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data382 = data;
HXDLIN(1412)									data382->fPos = (data382->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data383 = data;
HXDLIN(1412)									data383->oPos = (data383->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1412)									 ::openfl::display::_internal::DrawCommandReader data384 = data;
HXDLIN(1412)									data384->oPos = (data384->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1412)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN(1412)							 ::openfl::display::_internal::DrawCommandReader c11 = data;
HXLINE(1413)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get(c11->oPos)) ),( ( ::openfl::_Vector::IntVector)(c11->buffer->o->__get((c11->oPos + 1))) ),( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get((c11->oPos + 2))) ),c11->buffer->o->__get((c11->oPos + 3)));
            						}
            						break;
            						case (int)13: {
HXLINE(1288)							{
HXLINE(1288)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data385 = data;
HXDLIN(1288)										data385->oPos = (data385->oPos + 2);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data386 = data;
HXDLIN(1288)										data386->bPos = (data386->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data387 = data;
HXDLIN(1288)										data387->iPos = (data387->iPos + 1);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data388 = data;
HXDLIN(1288)										data388->fPos = (data388->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data389 = data;
HXDLIN(1288)										data389->oPos = (data389->oPos + 4);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data390 = data;
HXDLIN(1288)										data390->iiPos = (data390->iiPos + 2);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data391 = data;
HXDLIN(1288)										data391->ffPos = (data391->ffPos + 1);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data392 = data;
HXDLIN(1288)										data392->fPos = (data392->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data393 = data;
HXDLIN(1288)										data393->oPos = (data393->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data394 = data;
HXDLIN(1288)										data394->fPos = (data394->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data395 = data;
HXDLIN(1288)										data395->fPos = (data395->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data396 = data;
HXDLIN(1288)										data396->fPos = (data396->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data397 = data;
HXDLIN(1288)										data397->fPos = (data397->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data398 = data;
HXDLIN(1288)										data398->oPos = (data398->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data399 = data;
HXDLIN(1288)										data399->fPos = (data399->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data400 = data;
HXDLIN(1288)										data400->fPos = (data400->fPos + 5);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data401 = data;
HXDLIN(1288)										data401->oPos = (data401->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data402 = data;
HXDLIN(1288)										data402->oPos = (data402->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data403 = data;
HXDLIN(1288)										data403->oPos = (data403->oPos + 2);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data404 = data;
HXDLIN(1288)										data404->bPos = (data404->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data405 = data;
HXDLIN(1288)										data405->oPos = (data405->oPos + 4);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data406 = data;
HXDLIN(1288)										data406->iiPos = (data406->iiPos + 2);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data407 = data;
HXDLIN(1288)										data407->ffPos = (data407->ffPos + 1);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data408 = data;
HXDLIN(1288)										data408->fPos = (data408->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data409 = data;
HXDLIN(1288)										data409->oPos = (data409->oPos + 4);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data410 = data;
HXDLIN(1288)										data410->iPos = (data410->iPos + 1);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data411 = data;
HXDLIN(1288)										data411->fPos = (data411->fPos + 2);
HXDLIN(1288)										 ::openfl::display::_internal::DrawCommandReader data412 = data;
HXDLIN(1288)										data412->bPos = (data412->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data413 = data;
HXDLIN(1288)										data413->fPos = (data413->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data414 = data;
HXDLIN(1288)										data414->fPos = (data414->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data415 = data;
HXDLIN(1288)										data415->oPos = (data415->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE(1288)										 ::openfl::display::_internal::DrawCommandReader data416 = data;
HXDLIN(1288)										data416->oPos = (data416->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE(1288)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::END_FILL_dyn();
HXDLIN(1288)								 ::openfl::display::_internal::DrawCommandReader this1 = data;
            							}
HXLINE(1289)							::openfl::display::_internal::CairoGraphics_obj::endFill();
HXLINE(1290)							::openfl::display::_internal::CairoGraphics_obj::endStroke();
HXLINE(1291)							::openfl::display::_internal::CairoGraphics_obj::hasFill = false;
HXLINE(1292)							hasLineStyle = false;
HXLINE(1293)							::openfl::display::_internal::CairoGraphics_obj::bitmapFill = null();
HXLINE(1294)							initStrokeX = ( (Float)(0) );
HXLINE(1295)							initStrokeY = ( (Float)(0) );
            						}
            						break;
            						case (int)14: {
HXLINE(1312)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data417 = data;
HXDLIN(1312)									data417->oPos = (data417->oPos + 2);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data418 = data;
HXDLIN(1312)									data418->bPos = (data418->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data419 = data;
HXDLIN(1312)									data419->iPos = (data419->iPos + 1);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data420 = data;
HXDLIN(1312)									data420->fPos = (data420->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data421 = data;
HXDLIN(1312)									data421->oPos = (data421->oPos + 4);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data422 = data;
HXDLIN(1312)									data422->iiPos = (data422->iiPos + 2);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data423 = data;
HXDLIN(1312)									data423->ffPos = (data423->ffPos + 1);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data424 = data;
HXDLIN(1312)									data424->fPos = (data424->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data425 = data;
HXDLIN(1312)									data425->oPos = (data425->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data426 = data;
HXDLIN(1312)									data426->fPos = (data426->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data427 = data;
HXDLIN(1312)									data427->fPos = (data427->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data428 = data;
HXDLIN(1312)									data428->fPos = (data428->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data429 = data;
HXDLIN(1312)									data429->fPos = (data429->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data430 = data;
HXDLIN(1312)									data430->oPos = (data430->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data431 = data;
HXDLIN(1312)									data431->fPos = (data431->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data432 = data;
HXDLIN(1312)									data432->fPos = (data432->fPos + 5);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data433 = data;
HXDLIN(1312)									data433->oPos = (data433->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data434 = data;
HXDLIN(1312)									data434->oPos = (data434->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data435 = data;
HXDLIN(1312)									data435->oPos = (data435->oPos + 2);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data436 = data;
HXDLIN(1312)									data436->bPos = (data436->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data437 = data;
HXDLIN(1312)									data437->oPos = (data437->oPos + 4);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data438 = data;
HXDLIN(1312)									data438->iiPos = (data438->iiPos + 2);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data439 = data;
HXDLIN(1312)									data439->ffPos = (data439->ffPos + 1);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data440 = data;
HXDLIN(1312)									data440->fPos = (data440->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data441 = data;
HXDLIN(1312)									data441->oPos = (data441->oPos + 4);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data442 = data;
HXDLIN(1312)									data442->iPos = (data442->iPos + 1);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data443 = data;
HXDLIN(1312)									data443->fPos = (data443->fPos + 2);
HXDLIN(1312)									 ::openfl::display::_internal::DrawCommandReader data444 = data;
HXDLIN(1312)									data444->bPos = (data444->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data445 = data;
HXDLIN(1312)									data445->fPos = (data445->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data446 = data;
HXDLIN(1312)									data446->fPos = (data446->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data447 = data;
HXDLIN(1312)									data447->oPos = (data447->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1312)									 ::openfl::display::_internal::DrawCommandReader data448 = data;
HXDLIN(1312)									data448->oPos = (data448->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1312)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN(1312)							 ::openfl::display::_internal::DrawCommandReader c12 = data;
HXLINE(1314)							bool _hx_tmp7;
HXDLIN(1314)							if (!(hasLineStyle)) {
HXLINE(1314)								if ((initStrokeX == 0)) {
HXLINE(1314)									_hx_tmp7 = (initStrokeY != 0);
            								}
            								else {
HXLINE(1314)									_hx_tmp7 = true;
            								}
            							}
            							else {
HXLINE(1314)								_hx_tmp7 = false;
            							}
HXDLIN(1314)							if (_hx_tmp7) {
HXLINE(1316)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1317)								initStrokeX = ( (Float)(0) );
HXLINE(1318)								initStrokeY = ( (Float)(0) );
            							}
HXLINE(1321)							hasLineStyle = true;
HXLINE(1322)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c12->buffer->o->__get(c12->oPos)) ),( ( ::openfl::geom::Matrix)(c12->buffer->o->__get((c12->oPos + 1))) ),c12->buffer->b->__get(c12->bPos),c12->buffer->b->__get((c12->bPos + 1)));
            						}
            						break;
            						case (int)15: {
HXLINE(1298)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data449 = data;
HXDLIN(1298)									data449->oPos = (data449->oPos + 2);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data450 = data;
HXDLIN(1298)									data450->bPos = (data450->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data451 = data;
HXDLIN(1298)									data451->iPos = (data451->iPos + 1);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data452 = data;
HXDLIN(1298)									data452->fPos = (data452->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data453 = data;
HXDLIN(1298)									data453->oPos = (data453->oPos + 4);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data454 = data;
HXDLIN(1298)									data454->iiPos = (data454->iiPos + 2);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data455 = data;
HXDLIN(1298)									data455->ffPos = (data455->ffPos + 1);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data456 = data;
HXDLIN(1298)									data456->fPos = (data456->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data457 = data;
HXDLIN(1298)									data457->oPos = (data457->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data458 = data;
HXDLIN(1298)									data458->fPos = (data458->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data459 = data;
HXDLIN(1298)									data459->fPos = (data459->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data460 = data;
HXDLIN(1298)									data460->fPos = (data460->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data461 = data;
HXDLIN(1298)									data461->fPos = (data461->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data462 = data;
HXDLIN(1298)									data462->oPos = (data462->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data463 = data;
HXDLIN(1298)									data463->fPos = (data463->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data464 = data;
HXDLIN(1298)									data464->fPos = (data464->fPos + 5);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data465 = data;
HXDLIN(1298)									data465->oPos = (data465->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data466 = data;
HXDLIN(1298)									data466->oPos = (data466->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data467 = data;
HXDLIN(1298)									data467->oPos = (data467->oPos + 2);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data468 = data;
HXDLIN(1298)									data468->bPos = (data468->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data469 = data;
HXDLIN(1298)									data469->oPos = (data469->oPos + 4);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data470 = data;
HXDLIN(1298)									data470->iiPos = (data470->iiPos + 2);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data471 = data;
HXDLIN(1298)									data471->ffPos = (data471->ffPos + 1);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data472 = data;
HXDLIN(1298)									data472->fPos = (data472->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data473 = data;
HXDLIN(1298)									data473->oPos = (data473->oPos + 4);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data474 = data;
HXDLIN(1298)									data474->iPos = (data474->iPos + 1);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data475 = data;
HXDLIN(1298)									data475->fPos = (data475->fPos + 2);
HXDLIN(1298)									 ::openfl::display::_internal::DrawCommandReader data476 = data;
HXDLIN(1298)									data476->bPos = (data476->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data477 = data;
HXDLIN(1298)									data477->fPos = (data477->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data478 = data;
HXDLIN(1298)									data478->fPos = (data478->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data479 = data;
HXDLIN(1298)									data479->oPos = (data479->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1298)									 ::openfl::display::_internal::DrawCommandReader data480 = data;
HXDLIN(1298)									data480->oPos = (data480->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1298)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN(1298)							 ::openfl::display::_internal::DrawCommandReader c13 = data;
HXLINE(1300)							bool _hx_tmp8;
HXDLIN(1300)							if (!(hasLineStyle)) {
HXLINE(1300)								if ((initStrokeX == 0)) {
HXLINE(1300)									_hx_tmp8 = (initStrokeY != 0);
            								}
            								else {
HXLINE(1300)									_hx_tmp8 = true;
            								}
            							}
            							else {
HXLINE(1300)								_hx_tmp8 = false;
            							}
HXDLIN(1300)							if (_hx_tmp8) {
HXLINE(1302)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1303)								initStrokeX = ( (Float)(0) );
HXLINE(1304)								initStrokeY = ( (Float)(0) );
            							}
HXLINE(1307)							hasLineStyle = true;
HXLINE(1308)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineGradientStyle(c13->buffer->o->__get(c13->oPos),c13->buffer->ii->__get(c13->iiPos).StaticCast< ::Array< int > >(),c13->buffer->ff->__get(c13->ffPos).StaticCast< ::Array< Float > >(),c13->buffer->ii->__get((c13->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->buffer->o->__get((c13->oPos + 1))) ),c13->buffer->o->__get((c13->oPos + 2)),c13->buffer->o->__get((c13->oPos + 3)),c13->buffer->f->__get(c13->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE(1325)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data481 = data;
HXDLIN(1325)									data481->oPos = (data481->oPos + 2);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data482 = data;
HXDLIN(1325)									data482->bPos = (data482->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data483 = data;
HXDLIN(1325)									data483->iPos = (data483->iPos + 1);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data484 = data;
HXDLIN(1325)									data484->fPos = (data484->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data485 = data;
HXDLIN(1325)									data485->oPos = (data485->oPos + 4);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data486 = data;
HXDLIN(1325)									data486->iiPos = (data486->iiPos + 2);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data487 = data;
HXDLIN(1325)									data487->ffPos = (data487->ffPos + 1);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data488 = data;
HXDLIN(1325)									data488->fPos = (data488->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data489 = data;
HXDLIN(1325)									data489->oPos = (data489->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data490 = data;
HXDLIN(1325)									data490->fPos = (data490->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data491 = data;
HXDLIN(1325)									data491->fPos = (data491->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data492 = data;
HXDLIN(1325)									data492->fPos = (data492->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data493 = data;
HXDLIN(1325)									data493->fPos = (data493->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data494 = data;
HXDLIN(1325)									data494->oPos = (data494->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data495 = data;
HXDLIN(1325)									data495->fPos = (data495->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data496 = data;
HXDLIN(1325)									data496->fPos = (data496->fPos + 5);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data497 = data;
HXDLIN(1325)									data497->oPos = (data497->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data498 = data;
HXDLIN(1325)									data498->oPos = (data498->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data499 = data;
HXDLIN(1325)									data499->oPos = (data499->oPos + 2);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data500 = data;
HXDLIN(1325)									data500->bPos = (data500->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data501 = data;
HXDLIN(1325)									data501->oPos = (data501->oPos + 4);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data502 = data;
HXDLIN(1325)									data502->iiPos = (data502->iiPos + 2);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data503 = data;
HXDLIN(1325)									data503->ffPos = (data503->ffPos + 1);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data504 = data;
HXDLIN(1325)									data504->fPos = (data504->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data505 = data;
HXDLIN(1325)									data505->oPos = (data505->oPos + 4);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data506 = data;
HXDLIN(1325)									data506->iPos = (data506->iPos + 1);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data507 = data;
HXDLIN(1325)									data507->fPos = (data507->fPos + 2);
HXDLIN(1325)									 ::openfl::display::_internal::DrawCommandReader data508 = data;
HXDLIN(1325)									data508->bPos = (data508->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data509 = data;
HXDLIN(1325)									data509->fPos = (data509->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data510 = data;
HXDLIN(1325)									data510->fPos = (data510->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data511 = data;
HXDLIN(1325)									data511->oPos = (data511->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1325)									 ::openfl::display::_internal::DrawCommandReader data512 = data;
HXDLIN(1325)									data512->oPos = (data512->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1325)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN(1325)							 ::openfl::display::_internal::DrawCommandReader c14 = data;
HXLINE(1327)							bool _hx_tmp9;
HXDLIN(1327)							if (!(hasLineStyle)) {
HXLINE(1327)								_hx_tmp9 = ::hx::IsNotNull( c14->buffer->o->__get(c14->oPos) );
            							}
            							else {
HXLINE(1327)								_hx_tmp9 = false;
            							}
HXDLIN(1327)							if (_hx_tmp9) {
HXLINE(1329)								bool _hx_tmp10;
HXDLIN(1329)								if ((initStrokeX == 0)) {
HXLINE(1329)									_hx_tmp10 = (initStrokeY != 0);
            								}
            								else {
HXLINE(1329)									_hx_tmp10 = true;
            								}
HXDLIN(1329)								if (_hx_tmp10) {
HXLINE(1331)									::openfl::display::_internal::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1332)									initStrokeX = ( (Float)(0) );
HXLINE(1333)									initStrokeY = ( (Float)(0) );
            								}
            							}
HXLINE(1337)							hasLineStyle = ::hx::IsNotNull( c14->buffer->o->__get(c14->oPos) );
HXLINE(1338)							::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineStyle(c14->buffer->o->__get(c14->oPos),c14->buffer->i->__get(c14->iPos),c14->buffer->f->__get(c14->fPos),c14->buffer->b->__get(c14->bPos),c14->buffer->o->__get((c14->oPos + 1)),c14->buffer->o->__get((c14->oPos + 2)),c14->buffer->o->__get((c14->oPos + 3)),c14->buffer->f->__get((c14->fPos + 1)));
            						}
            						break;
            						case (int)17: {
HXLINE(1260)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data513 = data;
HXDLIN(1260)									data513->oPos = (data513->oPos + 2);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data514 = data;
HXDLIN(1260)									data514->bPos = (data514->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data515 = data;
HXDLIN(1260)									data515->iPos = (data515->iPos + 1);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data516 = data;
HXDLIN(1260)									data516->fPos = (data516->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data517 = data;
HXDLIN(1260)									data517->oPos = (data517->oPos + 4);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data518 = data;
HXDLIN(1260)									data518->iiPos = (data518->iiPos + 2);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data519 = data;
HXDLIN(1260)									data519->ffPos = (data519->ffPos + 1);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data520 = data;
HXDLIN(1260)									data520->fPos = (data520->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data521 = data;
HXDLIN(1260)									data521->oPos = (data521->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data522 = data;
HXDLIN(1260)									data522->fPos = (data522->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data523 = data;
HXDLIN(1260)									data523->fPos = (data523->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data524 = data;
HXDLIN(1260)									data524->fPos = (data524->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data525 = data;
HXDLIN(1260)									data525->fPos = (data525->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data526 = data;
HXDLIN(1260)									data526->oPos = (data526->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data527 = data;
HXDLIN(1260)									data527->fPos = (data527->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data528 = data;
HXDLIN(1260)									data528->fPos = (data528->fPos + 5);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data529 = data;
HXDLIN(1260)									data529->oPos = (data529->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data530 = data;
HXDLIN(1260)									data530->oPos = (data530->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data531 = data;
HXDLIN(1260)									data531->oPos = (data531->oPos + 2);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data532 = data;
HXDLIN(1260)									data532->bPos = (data532->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data533 = data;
HXDLIN(1260)									data533->oPos = (data533->oPos + 4);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data534 = data;
HXDLIN(1260)									data534->iiPos = (data534->iiPos + 2);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data535 = data;
HXDLIN(1260)									data535->ffPos = (data535->ffPos + 1);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data536 = data;
HXDLIN(1260)									data536->fPos = (data536->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data537 = data;
HXDLIN(1260)									data537->oPos = (data537->oPos + 4);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data538 = data;
HXDLIN(1260)									data538->iPos = (data538->iPos + 1);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data539 = data;
HXDLIN(1260)									data539->fPos = (data539->fPos + 2);
HXDLIN(1260)									 ::openfl::display::_internal::DrawCommandReader data540 = data;
HXDLIN(1260)									data540->bPos = (data540->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data541 = data;
HXDLIN(1260)									data541->fPos = (data541->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data542 = data;
HXDLIN(1260)									data542->fPos = (data542->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data543 = data;
HXDLIN(1260)									data543->oPos = (data543->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1260)									 ::openfl::display::_internal::DrawCommandReader data544 = data;
HXDLIN(1260)									data544->oPos = (data544->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1260)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1260)							 ::openfl::display::_internal::DrawCommandReader c15 = data;
HXLINE(1261)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->lineTo(c15->buffer->f->__get(c15->fPos),c15->buffer->f->__get((c15->fPos + 1)));
HXLINE(1263)							if (hasLineStyle) {
HXLINE(1265)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->lineTo(c15->buffer->f->__get(c15->fPos),c15->buffer->f->__get((c15->fPos + 1)));
            							}
            							else {
HXLINE(1269)								initStrokeX = c15->buffer->f->__get(c15->fPos);
HXLINE(1270)								initStrokeY = c15->buffer->f->__get((c15->fPos + 1));
            							}
            						}
            						break;
            						case (int)18: {
HXLINE(1274)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data545 = data;
HXDLIN(1274)									data545->oPos = (data545->oPos + 2);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data546 = data;
HXDLIN(1274)									data546->bPos = (data546->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data547 = data;
HXDLIN(1274)									data547->iPos = (data547->iPos + 1);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data548 = data;
HXDLIN(1274)									data548->fPos = (data548->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data549 = data;
HXDLIN(1274)									data549->oPos = (data549->oPos + 4);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data550 = data;
HXDLIN(1274)									data550->iiPos = (data550->iiPos + 2);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data551 = data;
HXDLIN(1274)									data551->ffPos = (data551->ffPos + 1);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data552 = data;
HXDLIN(1274)									data552->fPos = (data552->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data553 = data;
HXDLIN(1274)									data553->oPos = (data553->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data554 = data;
HXDLIN(1274)									data554->fPos = (data554->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data555 = data;
HXDLIN(1274)									data555->fPos = (data555->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data556 = data;
HXDLIN(1274)									data556->fPos = (data556->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data557 = data;
HXDLIN(1274)									data557->fPos = (data557->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data558 = data;
HXDLIN(1274)									data558->oPos = (data558->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data559 = data;
HXDLIN(1274)									data559->fPos = (data559->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data560 = data;
HXDLIN(1274)									data560->fPos = (data560->fPos + 5);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data561 = data;
HXDLIN(1274)									data561->oPos = (data561->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data562 = data;
HXDLIN(1274)									data562->oPos = (data562->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data563 = data;
HXDLIN(1274)									data563->oPos = (data563->oPos + 2);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data564 = data;
HXDLIN(1274)									data564->bPos = (data564->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data565 = data;
HXDLIN(1274)									data565->oPos = (data565->oPos + 4);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data566 = data;
HXDLIN(1274)									data566->iiPos = (data566->iiPos + 2);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data567 = data;
HXDLIN(1274)									data567->ffPos = (data567->ffPos + 1);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data568 = data;
HXDLIN(1274)									data568->fPos = (data568->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data569 = data;
HXDLIN(1274)									data569->oPos = (data569->oPos + 4);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data570 = data;
HXDLIN(1274)									data570->iPos = (data570->iPos + 1);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data571 = data;
HXDLIN(1274)									data571->fPos = (data571->fPos + 2);
HXDLIN(1274)									 ::openfl::display::_internal::DrawCommandReader data572 = data;
HXDLIN(1274)									data572->bPos = (data572->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data573 = data;
HXDLIN(1274)									data573->fPos = (data573->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data574 = data;
HXDLIN(1274)									data574->fPos = (data574->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data575 = data;
HXDLIN(1274)									data575->oPos = (data575->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1274)									 ::openfl::display::_internal::DrawCommandReader data576 = data;
HXDLIN(1274)									data576->oPos = (data576->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1274)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1274)							 ::openfl::display::_internal::DrawCommandReader c16 = data;
HXLINE(1275)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->moveTo(c16->buffer->f->__get(c16->fPos),c16->buffer->f->__get((c16->fPos + 1)));
HXLINE(1277)							if (hasLineStyle) {
HXLINE(1279)								::openfl::display::_internal::CairoGraphics_obj::strokeCommands->moveTo(c16->buffer->f->__get(c16->fPos),c16->buffer->f->__get((c16->fPos + 1)));
            							}
            							else {
HXLINE(1283)								initStrokeX = c16->buffer->f->__get(c16->fPos);
HXLINE(1284)								initStrokeY = c16->buffer->f->__get((c16->fPos + 1));
            							}
            						}
            						break;
            						case (int)19: {
HXLINE(1416)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data577 = data;
HXDLIN(1416)									data577->oPos = (data577->oPos + 2);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data578 = data;
HXDLIN(1416)									data578->bPos = (data578->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data579 = data;
HXDLIN(1416)									data579->iPos = (data579->iPos + 1);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data580 = data;
HXDLIN(1416)									data580->fPos = (data580->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data581 = data;
HXDLIN(1416)									data581->oPos = (data581->oPos + 4);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data582 = data;
HXDLIN(1416)									data582->iiPos = (data582->iiPos + 2);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data583 = data;
HXDLIN(1416)									data583->ffPos = (data583->ffPos + 1);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data584 = data;
HXDLIN(1416)									data584->fPos = (data584->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data585 = data;
HXDLIN(1416)									data585->oPos = (data585->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data586 = data;
HXDLIN(1416)									data586->fPos = (data586->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data587 = data;
HXDLIN(1416)									data587->fPos = (data587->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data588 = data;
HXDLIN(1416)									data588->fPos = (data588->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data589 = data;
HXDLIN(1416)									data589->fPos = (data589->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data590 = data;
HXDLIN(1416)									data590->oPos = (data590->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data591 = data;
HXDLIN(1416)									data591->fPos = (data591->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data592 = data;
HXDLIN(1416)									data592->fPos = (data592->fPos + 5);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data593 = data;
HXDLIN(1416)									data593->oPos = (data593->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data594 = data;
HXDLIN(1416)									data594->oPos = (data594->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data595 = data;
HXDLIN(1416)									data595->oPos = (data595->oPos + 2);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data596 = data;
HXDLIN(1416)									data596->bPos = (data596->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data597 = data;
HXDLIN(1416)									data597->oPos = (data597->oPos + 4);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data598 = data;
HXDLIN(1416)									data598->iiPos = (data598->iiPos + 2);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data599 = data;
HXDLIN(1416)									data599->ffPos = (data599->ffPos + 1);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data600 = data;
HXDLIN(1416)									data600->fPos = (data600->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data601 = data;
HXDLIN(1416)									data601->oPos = (data601->oPos + 4);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data602 = data;
HXDLIN(1416)									data602->iPos = (data602->iPos + 1);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data603 = data;
HXDLIN(1416)									data603->fPos = (data603->fPos + 2);
HXDLIN(1416)									 ::openfl::display::_internal::DrawCommandReader data604 = data;
HXDLIN(1416)									data604->bPos = (data604->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data605 = data;
HXDLIN(1416)									data605->fPos = (data605->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data606 = data;
HXDLIN(1416)									data606->fPos = (data606->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data607 = data;
HXDLIN(1416)									data607->oPos = (data607->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1416)									 ::openfl::display::_internal::DrawCommandReader data608 = data;
HXDLIN(1416)									data608->oPos = (data608->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1416)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::OVERRIDE_BLEND_MODE_dyn();
HXDLIN(1416)							 ::openfl::display::_internal::DrawCommandReader c17 = data;
HXLINE(1417)							renderer->_hx___setBlendModeCairo(::openfl::display::_internal::CairoGraphics_obj::cairo,c17->buffer->o->__get(c17->oPos));
            						}
            						break;
            						case (int)21: {
HXLINE(1420)							{
HXLINE(1420)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data609 = data;
HXDLIN(1420)										data609->oPos = (data609->oPos + 2);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data610 = data;
HXDLIN(1420)										data610->bPos = (data610->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data611 = data;
HXDLIN(1420)										data611->iPos = (data611->iPos + 1);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data612 = data;
HXDLIN(1420)										data612->fPos = (data612->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data613 = data;
HXDLIN(1420)										data613->oPos = (data613->oPos + 4);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data614 = data;
HXDLIN(1420)										data614->iiPos = (data614->iiPos + 2);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data615 = data;
HXDLIN(1420)										data615->ffPos = (data615->ffPos + 1);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data616 = data;
HXDLIN(1420)										data616->fPos = (data616->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data617 = data;
HXDLIN(1420)										data617->oPos = (data617->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data618 = data;
HXDLIN(1420)										data618->fPos = (data618->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data619 = data;
HXDLIN(1420)										data619->fPos = (data619->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data620 = data;
HXDLIN(1420)										data620->fPos = (data620->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data621 = data;
HXDLIN(1420)										data621->fPos = (data621->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data622 = data;
HXDLIN(1420)										data622->oPos = (data622->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data623 = data;
HXDLIN(1420)										data623->fPos = (data623->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data624 = data;
HXDLIN(1420)										data624->fPos = (data624->fPos + 5);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data625 = data;
HXDLIN(1420)										data625->oPos = (data625->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data626 = data;
HXDLIN(1420)										data626->oPos = (data626->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data627 = data;
HXDLIN(1420)										data627->oPos = (data627->oPos + 2);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data628 = data;
HXDLIN(1420)										data628->bPos = (data628->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data629 = data;
HXDLIN(1420)										data629->oPos = (data629->oPos + 4);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data630 = data;
HXDLIN(1420)										data630->iiPos = (data630->iiPos + 2);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data631 = data;
HXDLIN(1420)										data631->ffPos = (data631->ffPos + 1);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data632 = data;
HXDLIN(1420)										data632->fPos = (data632->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data633 = data;
HXDLIN(1420)										data633->oPos = (data633->oPos + 4);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data634 = data;
HXDLIN(1420)										data634->iPos = (data634->iPos + 1);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data635 = data;
HXDLIN(1420)										data635->fPos = (data635->fPos + 2);
HXDLIN(1420)										 ::openfl::display::_internal::DrawCommandReader data636 = data;
HXDLIN(1420)										data636->bPos = (data636->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data637 = data;
HXDLIN(1420)										data637->fPos = (data637->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data638 = data;
HXDLIN(1420)										data638->fPos = (data638->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data639 = data;
HXDLIN(1420)										data639->oPos = (data639->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE(1420)										 ::openfl::display::_internal::DrawCommandReader data640 = data;
HXDLIN(1420)										data640->oPos = (data640->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE(1420)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1420)								 ::openfl::display::_internal::DrawCommandReader this2 = data;
            							}
HXLINE(1421)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->windingEvenOdd();
            						}
            						break;
            						case (int)22: {
HXLINE(1424)							{
HXLINE(1424)								switch((int)(data->prev->_hx_getIndex())){
            									case (int)0: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data641 = data;
HXDLIN(1424)										data641->oPos = (data641->oPos + 2);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data642 = data;
HXDLIN(1424)										data642->bPos = (data642->bPos + 2);
            									}
            									break;
            									case (int)1: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data643 = data;
HXDLIN(1424)										data643->iPos = (data643->iPos + 1);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data644 = data;
HXDLIN(1424)										data644->fPos = (data644->fPos + 1);
            									}
            									break;
            									case (int)2: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data645 = data;
HXDLIN(1424)										data645->oPos = (data645->oPos + 4);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data646 = data;
HXDLIN(1424)										data646->iiPos = (data646->iiPos + 2);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data647 = data;
HXDLIN(1424)										data647->ffPos = (data647->ffPos + 1);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data648 = data;
HXDLIN(1424)										data648->fPos = (data648->fPos + 1);
            									}
            									break;
            									case (int)3: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data649 = data;
HXDLIN(1424)										data649->oPos = (data649->oPos + 1);
            									}
            									break;
            									case (int)4: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data650 = data;
HXDLIN(1424)										data650->fPos = (data650->fPos + 6);
            									}
            									break;
            									case (int)5: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data651 = data;
HXDLIN(1424)										data651->fPos = (data651->fPos + 4);
            									}
            									break;
            									case (int)6: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data652 = data;
HXDLIN(1424)										data652->fPos = (data652->fPos + 3);
            									}
            									break;
            									case (int)7: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data653 = data;
HXDLIN(1424)										data653->fPos = (data653->fPos + 4);
            									}
            									break;
            									case (int)8: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data654 = data;
HXDLIN(1424)										data654->oPos = (data654->oPos + 3);
            									}
            									break;
            									case (int)9: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data655 = data;
HXDLIN(1424)										data655->fPos = (data655->fPos + 4);
            									}
            									break;
            									case (int)10: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data656 = data;
HXDLIN(1424)										data656->fPos = (data656->fPos + 5);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data657 = data;
HXDLIN(1424)										data657->oPos = (data657->oPos + 1);
            									}
            									break;
            									case (int)12: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data658 = data;
HXDLIN(1424)										data658->oPos = (data658->oPos + 4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data659 = data;
HXDLIN(1424)										data659->oPos = (data659->oPos + 2);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data660 = data;
HXDLIN(1424)										data660->bPos = (data660->bPos + 2);
            									}
            									break;
            									case (int)15: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data661 = data;
HXDLIN(1424)										data661->oPos = (data661->oPos + 4);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data662 = data;
HXDLIN(1424)										data662->iiPos = (data662->iiPos + 2);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data663 = data;
HXDLIN(1424)										data663->ffPos = (data663->ffPos + 1);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data664 = data;
HXDLIN(1424)										data664->fPos = (data664->fPos + 1);
            									}
            									break;
            									case (int)16: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data665 = data;
HXDLIN(1424)										data665->oPos = (data665->oPos + 4);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data666 = data;
HXDLIN(1424)										data666->iPos = (data666->iPos + 1);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data667 = data;
HXDLIN(1424)										data667->fPos = (data667->fPos + 2);
HXDLIN(1424)										 ::openfl::display::_internal::DrawCommandReader data668 = data;
HXDLIN(1424)										data668->bPos = (data668->bPos + 1);
            									}
            									break;
            									case (int)17: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data669 = data;
HXDLIN(1424)										data669->fPos = (data669->fPos + 2);
            									}
            									break;
            									case (int)18: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data670 = data;
HXDLIN(1424)										data670->fPos = (data670->fPos + 2);
            									}
            									break;
            									case (int)19: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data671 = data;
HXDLIN(1424)										data671->oPos = (data671->oPos + 1);
            									}
            									break;
            									case (int)20: {
HXLINE(1424)										 ::openfl::display::_internal::DrawCommandReader data672 = data;
HXDLIN(1424)										data672->oPos = (data672->oPos + 1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
HXLINE(1424)								data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1424)								 ::openfl::display::_internal::DrawCommandReader this3 = data;
            							}
HXLINE(1425)							::openfl::display::_internal::CairoGraphics_obj::fillCommands->windingNonZero();
            						}
            						break;
            						default:{
HXLINE(1428)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data673 = data;
HXDLIN(1428)									data673->oPos = (data673->oPos + 2);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data674 = data;
HXDLIN(1428)									data674->bPos = (data674->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data675 = data;
HXDLIN(1428)									data675->iPos = (data675->iPos + 1);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data676 = data;
HXDLIN(1428)									data676->fPos = (data676->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data677 = data;
HXDLIN(1428)									data677->oPos = (data677->oPos + 4);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data678 = data;
HXDLIN(1428)									data678->iiPos = (data678->iiPos + 2);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data679 = data;
HXDLIN(1428)									data679->ffPos = (data679->ffPos + 1);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data680 = data;
HXDLIN(1428)									data680->fPos = (data680->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data681 = data;
HXDLIN(1428)									data681->oPos = (data681->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data682 = data;
HXDLIN(1428)									data682->fPos = (data682->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data683 = data;
HXDLIN(1428)									data683->fPos = (data683->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data684 = data;
HXDLIN(1428)									data684->fPos = (data684->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data685 = data;
HXDLIN(1428)									data685->fPos = (data685->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data686 = data;
HXDLIN(1428)									data686->oPos = (data686->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data687 = data;
HXDLIN(1428)									data687->fPos = (data687->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data688 = data;
HXDLIN(1428)									data688->fPos = (data688->fPos + 5);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data689 = data;
HXDLIN(1428)									data689->oPos = (data689->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data690 = data;
HXDLIN(1428)									data690->oPos = (data690->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data691 = data;
HXDLIN(1428)									data691->oPos = (data691->oPos + 2);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data692 = data;
HXDLIN(1428)									data692->bPos = (data692->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data693 = data;
HXDLIN(1428)									data693->oPos = (data693->oPos + 4);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data694 = data;
HXDLIN(1428)									data694->iiPos = (data694->iiPos + 2);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data695 = data;
HXDLIN(1428)									data695->ffPos = (data695->ffPos + 1);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data696 = data;
HXDLIN(1428)									data696->fPos = (data696->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data697 = data;
HXDLIN(1428)									data697->oPos = (data697->oPos + 4);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data698 = data;
HXDLIN(1428)									data698->iPos = (data698->iPos + 1);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data699 = data;
HXDLIN(1428)									data699->fPos = (data699->fPos + 2);
HXDLIN(1428)									 ::openfl::display::_internal::DrawCommandReader data700 = data;
HXDLIN(1428)									data700->bPos = (data700->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data701 = data;
HXDLIN(1428)									data701->fPos = (data701->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data702 = data;
HXDLIN(1428)									data702->fPos = (data702->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data703 = data;
HXDLIN(1428)									data703->oPos = (data703->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1428)									 ::openfl::display::_internal::DrawCommandReader data704 = data;
HXDLIN(1428)									data704->oPos = (data704->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1428)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1432)			if ((::openfl::display::_internal::CairoGraphics_obj::fillCommands->get_length() > 0)) {
HXLINE(1434)				::openfl::display::_internal::CairoGraphics_obj::endFill();
            			}
HXLINE(1437)			if ((::openfl::display::_internal::CairoGraphics_obj::strokeCommands->get_length() > 0)) {
HXLINE(1439)				::openfl::display::_internal::CairoGraphics_obj::endStroke();
            			}
HXLINE(1442)			data->destroy();
HXLINE(1444)			graphics->_hx___bitmap->image->dirty = true;
HXLINE(1445)			graphics->_hx___bitmap->image->version++;
            		}
HXLINE(1448)		graphics->_hx___softwareDirty = false;
HXLINE(1449)		graphics->set___dirty(false);
HXLINE(1450)		::openfl::display::_internal::CairoGraphics_obj::graphics = null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,render,(void))

void CairoGraphics_obj::renderMask( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_1457_renderMask)
HXDLIN(1457)		if ((graphics->_hx___commands->get_length() != 0)) {
HXLINE(1459)			::openfl::display::_internal::CairoGraphics_obj::cairo = renderer->cairo;
HXLINE(1461)			Float positionX = ((Float)0.0);
HXLINE(1462)			Float positionY = ((Float)0.0);
HXLINE(1464)			int offsetX = 0;
HXLINE(1465)			int offsetY = 0;
HXLINE(1467)			 ::openfl::display::_internal::DrawCommandReader data =  ::openfl::display::_internal::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1469)			Float x;
HXDLIN(1469)			Float y;
HXDLIN(1469)			Float width;
HXDLIN(1469)			Float height;
HXDLIN(1469)			Float kappa = ((Float).5522848);
HXDLIN(1469)			Float ox;
HXDLIN(1469)			Float oy;
HXDLIN(1469)			Float xe;
HXDLIN(1469)			Float ye;
HXDLIN(1469)			Float xm;
HXDLIN(1469)			Float ym;
HXLINE(1471)			{
HXLINE(1471)				int _g = 0;
HXDLIN(1471)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1471)				while((_g < _g1->length)){
HXLINE(1471)					 ::openfl::display::_internal::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::display::_internal::DrawCommandType >();
HXDLIN(1471)					_g = (_g + 1);
HXLINE(1473)					switch((int)(type->_hx_getIndex())){
            						case (int)4: {
HXLINE(1476)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data1 = data;
HXDLIN(1476)									data1->oPos = (data1->oPos + 2);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data2 = data;
HXDLIN(1476)									data2->bPos = (data2->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data3 = data;
HXDLIN(1476)									data3->iPos = (data3->iPos + 1);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data4 = data;
HXDLIN(1476)									data4->fPos = (data4->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data5 = data;
HXDLIN(1476)									data5->oPos = (data5->oPos + 4);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data6 = data;
HXDLIN(1476)									data6->iiPos = (data6->iiPos + 2);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data7 = data;
HXDLIN(1476)									data7->ffPos = (data7->ffPos + 1);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data8 = data;
HXDLIN(1476)									data8->fPos = (data8->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data9 = data;
HXDLIN(1476)									data9->oPos = (data9->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data10 = data;
HXDLIN(1476)									data10->fPos = (data10->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data11 = data;
HXDLIN(1476)									data11->fPos = (data11->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data12 = data;
HXDLIN(1476)									data12->fPos = (data12->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data13 = data;
HXDLIN(1476)									data13->fPos = (data13->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data14 = data;
HXDLIN(1476)									data14->oPos = (data14->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data15 = data;
HXDLIN(1476)									data15->fPos = (data15->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data16 = data;
HXDLIN(1476)									data16->fPos = (data16->fPos + 5);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data17 = data;
HXDLIN(1476)									data17->oPos = (data17->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data18 = data;
HXDLIN(1476)									data18->oPos = (data18->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data19 = data;
HXDLIN(1476)									data19->oPos = (data19->oPos + 2);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data20 = data;
HXDLIN(1476)									data20->bPos = (data20->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data21 = data;
HXDLIN(1476)									data21->oPos = (data21->oPos + 4);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data22 = data;
HXDLIN(1476)									data22->iiPos = (data22->iiPos + 2);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data23 = data;
HXDLIN(1476)									data23->ffPos = (data23->ffPos + 1);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data24 = data;
HXDLIN(1476)									data24->fPos = (data24->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data25 = data;
HXDLIN(1476)									data25->oPos = (data25->oPos + 4);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data26 = data;
HXDLIN(1476)									data26->iPos = (data26->iPos + 1);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data27 = data;
HXDLIN(1476)									data27->fPos = (data27->fPos + 2);
HXDLIN(1476)									 ::openfl::display::_internal::DrawCommandReader data28 = data;
HXDLIN(1476)									data28->bPos = (data28->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data29 = data;
HXDLIN(1476)									data29->fPos = (data29->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data30 = data;
HXDLIN(1476)									data30->fPos = (data30->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data31 = data;
HXDLIN(1476)									data31->oPos = (data31->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1476)									 ::openfl::display::_internal::DrawCommandReader data32 = data;
HXDLIN(1476)									data32->oPos = (data32->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1476)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1476)							 ::openfl::display::_internal::DrawCommandReader c = data;
HXLINE(1477)							::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((c->buffer->f->__get(c->fPos) - ( (Float)(offsetX) )),(c->buffer->f->__get((c->fPos + 1)) - ( (Float)(offsetY) )),(c->buffer->f->__get((c->fPos + 2)) - ( (Float)(offsetX) )),(c->buffer->f->__get((c->fPos + 3)) - ( (Float)(offsetY) )),(c->buffer->f->__get((c->fPos + 4)) - ( (Float)(offsetX) )),(c->buffer->f->__get((c->fPos + 5)) - ( (Float)(offsetY) )));
HXLINE(1485)							positionX = c->buffer->f->__get((c->fPos + 4));
HXLINE(1486)							positionY = c->buffer->f->__get((c->fPos + 5));
            						}
            						break;
            						case (int)5: {
HXLINE(1489)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data33 = data;
HXDLIN(1489)									data33->oPos = (data33->oPos + 2);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data34 = data;
HXDLIN(1489)									data34->bPos = (data34->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data35 = data;
HXDLIN(1489)									data35->iPos = (data35->iPos + 1);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data36 = data;
HXDLIN(1489)									data36->fPos = (data36->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data37 = data;
HXDLIN(1489)									data37->oPos = (data37->oPos + 4);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data38 = data;
HXDLIN(1489)									data38->iiPos = (data38->iiPos + 2);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data39 = data;
HXDLIN(1489)									data39->ffPos = (data39->ffPos + 1);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data40 = data;
HXDLIN(1489)									data40->fPos = (data40->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data41 = data;
HXDLIN(1489)									data41->oPos = (data41->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data42 = data;
HXDLIN(1489)									data42->fPos = (data42->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data43 = data;
HXDLIN(1489)									data43->fPos = (data43->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data44 = data;
HXDLIN(1489)									data44->fPos = (data44->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data45 = data;
HXDLIN(1489)									data45->fPos = (data45->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data46 = data;
HXDLIN(1489)									data46->oPos = (data46->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data47 = data;
HXDLIN(1489)									data47->fPos = (data47->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data48 = data;
HXDLIN(1489)									data48->fPos = (data48->fPos + 5);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data49 = data;
HXDLIN(1489)									data49->oPos = (data49->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data50 = data;
HXDLIN(1489)									data50->oPos = (data50->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data51 = data;
HXDLIN(1489)									data51->oPos = (data51->oPos + 2);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data52 = data;
HXDLIN(1489)									data52->bPos = (data52->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data53 = data;
HXDLIN(1489)									data53->oPos = (data53->oPos + 4);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data54 = data;
HXDLIN(1489)									data54->iiPos = (data54->iiPos + 2);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data55 = data;
HXDLIN(1489)									data55->ffPos = (data55->ffPos + 1);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data56 = data;
HXDLIN(1489)									data56->fPos = (data56->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data57 = data;
HXDLIN(1489)									data57->oPos = (data57->oPos + 4);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data58 = data;
HXDLIN(1489)									data58->iPos = (data58->iPos + 1);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data59 = data;
HXDLIN(1489)									data59->fPos = (data59->fPos + 2);
HXDLIN(1489)									 ::openfl::display::_internal::DrawCommandReader data60 = data;
HXDLIN(1489)									data60->bPos = (data60->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data61 = data;
HXDLIN(1489)									data61->fPos = (data61->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data62 = data;
HXDLIN(1489)									data62->fPos = (data62->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data63 = data;
HXDLIN(1489)									data63->oPos = (data63->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1489)									 ::openfl::display::_internal::DrawCommandReader data64 = data;
HXDLIN(1489)									data64->oPos = (data64->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1489)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1489)							 ::openfl::display::_internal::DrawCommandReader c1 = data;
HXLINE(1490)							::openfl::display::_internal::CairoGraphics_obj::quadraticCurveTo((c1->buffer->f->__get(c1->fPos) - ( (Float)(offsetX) )),(c1->buffer->f->__get((c1->fPos + 1)) - ( (Float)(offsetY) )),(c1->buffer->f->__get((c1->fPos + 2)) - ( (Float)(offsetX) )),(c1->buffer->f->__get((c1->fPos + 3)) - ( (Float)(offsetY) )));
HXLINE(1491)							positionX = c1->buffer->f->__get((c1->fPos + 2));
HXLINE(1492)							positionY = c1->buffer->f->__get((c1->fPos + 3));
            						}
            						break;
            						case (int)6: {
HXLINE(1495)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data65 = data;
HXDLIN(1495)									data65->oPos = (data65->oPos + 2);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data66 = data;
HXDLIN(1495)									data66->bPos = (data66->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data67 = data;
HXDLIN(1495)									data67->iPos = (data67->iPos + 1);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data68 = data;
HXDLIN(1495)									data68->fPos = (data68->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data69 = data;
HXDLIN(1495)									data69->oPos = (data69->oPos + 4);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data70 = data;
HXDLIN(1495)									data70->iiPos = (data70->iiPos + 2);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data71 = data;
HXDLIN(1495)									data71->ffPos = (data71->ffPos + 1);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data72 = data;
HXDLIN(1495)									data72->fPos = (data72->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data73 = data;
HXDLIN(1495)									data73->oPos = (data73->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data74 = data;
HXDLIN(1495)									data74->fPos = (data74->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data75 = data;
HXDLIN(1495)									data75->fPos = (data75->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data76 = data;
HXDLIN(1495)									data76->fPos = (data76->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data77 = data;
HXDLIN(1495)									data77->fPos = (data77->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data78 = data;
HXDLIN(1495)									data78->oPos = (data78->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data79 = data;
HXDLIN(1495)									data79->fPos = (data79->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data80 = data;
HXDLIN(1495)									data80->fPos = (data80->fPos + 5);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data81 = data;
HXDLIN(1495)									data81->oPos = (data81->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data82 = data;
HXDLIN(1495)									data82->oPos = (data82->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data83 = data;
HXDLIN(1495)									data83->oPos = (data83->oPos + 2);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data84 = data;
HXDLIN(1495)									data84->bPos = (data84->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data85 = data;
HXDLIN(1495)									data85->oPos = (data85->oPos + 4);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data86 = data;
HXDLIN(1495)									data86->iiPos = (data86->iiPos + 2);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data87 = data;
HXDLIN(1495)									data87->ffPos = (data87->ffPos + 1);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data88 = data;
HXDLIN(1495)									data88->fPos = (data88->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data89 = data;
HXDLIN(1495)									data89->oPos = (data89->oPos + 4);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data90 = data;
HXDLIN(1495)									data90->iPos = (data90->iPos + 1);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data91 = data;
HXDLIN(1495)									data91->fPos = (data91->fPos + 2);
HXDLIN(1495)									 ::openfl::display::_internal::DrawCommandReader data92 = data;
HXDLIN(1495)									data92->bPos = (data92->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data93 = data;
HXDLIN(1495)									data93->fPos = (data93->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data94 = data;
HXDLIN(1495)									data94->fPos = (data94->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data95 = data;
HXDLIN(1495)									data95->oPos = (data95->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1495)									 ::openfl::display::_internal::DrawCommandReader data96 = data;
HXDLIN(1495)									data96->oPos = (data96->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1495)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1495)							 ::openfl::display::_internal::DrawCommandReader c2 = data;
HXLINE(1496)							::openfl::display::_internal::CairoGraphics_obj::cairo->arc((c2->buffer->f->__get(c2->fPos) - ( (Float)(offsetX) )),(c2->buffer->f->__get((c2->fPos + 1)) - ( (Float)(offsetY) )),c2->buffer->f->__get((c2->fPos + 2)),( (Float)(0) ),(::Math_obj::PI * ( (Float)(2) )));
            						}
            						break;
            						case (int)7: {
HXLINE(1499)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data97 = data;
HXDLIN(1499)									data97->oPos = (data97->oPos + 2);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data98 = data;
HXDLIN(1499)									data98->bPos = (data98->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data99 = data;
HXDLIN(1499)									data99->iPos = (data99->iPos + 1);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data100 = data;
HXDLIN(1499)									data100->fPos = (data100->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data101 = data;
HXDLIN(1499)									data101->oPos = (data101->oPos + 4);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data102 = data;
HXDLIN(1499)									data102->iiPos = (data102->iiPos + 2);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data103 = data;
HXDLIN(1499)									data103->ffPos = (data103->ffPos + 1);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data104 = data;
HXDLIN(1499)									data104->fPos = (data104->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data105 = data;
HXDLIN(1499)									data105->oPos = (data105->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data106 = data;
HXDLIN(1499)									data106->fPos = (data106->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data107 = data;
HXDLIN(1499)									data107->fPos = (data107->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data108 = data;
HXDLIN(1499)									data108->fPos = (data108->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data109 = data;
HXDLIN(1499)									data109->fPos = (data109->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data110 = data;
HXDLIN(1499)									data110->oPos = (data110->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data111 = data;
HXDLIN(1499)									data111->fPos = (data111->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data112 = data;
HXDLIN(1499)									data112->fPos = (data112->fPos + 5);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data113 = data;
HXDLIN(1499)									data113->oPos = (data113->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data114 = data;
HXDLIN(1499)									data114->oPos = (data114->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data115 = data;
HXDLIN(1499)									data115->oPos = (data115->oPos + 2);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data116 = data;
HXDLIN(1499)									data116->bPos = (data116->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data117 = data;
HXDLIN(1499)									data117->oPos = (data117->oPos + 4);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data118 = data;
HXDLIN(1499)									data118->iiPos = (data118->iiPos + 2);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data119 = data;
HXDLIN(1499)									data119->ffPos = (data119->ffPos + 1);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data120 = data;
HXDLIN(1499)									data120->fPos = (data120->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data121 = data;
HXDLIN(1499)									data121->oPos = (data121->oPos + 4);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data122 = data;
HXDLIN(1499)									data122->iPos = (data122->iPos + 1);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data123 = data;
HXDLIN(1499)									data123->fPos = (data123->fPos + 2);
HXDLIN(1499)									 ::openfl::display::_internal::DrawCommandReader data124 = data;
HXDLIN(1499)									data124->bPos = (data124->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data125 = data;
HXDLIN(1499)									data125->fPos = (data125->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data126 = data;
HXDLIN(1499)									data126->fPos = (data126->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data127 = data;
HXDLIN(1499)									data127->oPos = (data127->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1499)									 ::openfl::display::_internal::DrawCommandReader data128 = data;
HXDLIN(1499)									data128->oPos = (data128->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1499)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1499)							 ::openfl::display::_internal::DrawCommandReader c3 = data;
HXLINE(1501)							x = c3->buffer->f->__get(c3->fPos);
HXLINE(1502)							y = c3->buffer->f->__get((c3->fPos + 1));
HXLINE(1503)							width = c3->buffer->f->__get((c3->fPos + 2));
HXLINE(1504)							height = c3->buffer->f->__get((c3->fPos + 3));
HXLINE(1506)							x = (x - ( (Float)(offsetX) ));
HXLINE(1507)							y = (y - ( (Float)(offsetY) ));
HXLINE(1509)							ox = ((width / ( (Float)(2) )) * kappa);
HXLINE(1510)							oy = ((height / ( (Float)(2) )) * kappa);
HXLINE(1511)							xe = (x + width);
HXLINE(1512)							ye = (y + height);
HXLINE(1513)							xm = (x + (width / ( (Float)(2) )));
HXLINE(1514)							ym = (y + (height / ( (Float)(2) )));
HXLINE(1518)							::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE(1519)							::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE(1520)							::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE(1521)							::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE(1522)							::openfl::display::_internal::CairoGraphics_obj::cairo->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            						}
            						break;
            						case (int)9: {
HXLINE(1526)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data129 = data;
HXDLIN(1526)									data129->oPos = (data129->oPos + 2);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data130 = data;
HXDLIN(1526)									data130->bPos = (data130->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data131 = data;
HXDLIN(1526)									data131->iPos = (data131->iPos + 1);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data132 = data;
HXDLIN(1526)									data132->fPos = (data132->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data133 = data;
HXDLIN(1526)									data133->oPos = (data133->oPos + 4);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data134 = data;
HXDLIN(1526)									data134->iiPos = (data134->iiPos + 2);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data135 = data;
HXDLIN(1526)									data135->ffPos = (data135->ffPos + 1);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data136 = data;
HXDLIN(1526)									data136->fPos = (data136->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data137 = data;
HXDLIN(1526)									data137->oPos = (data137->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data138 = data;
HXDLIN(1526)									data138->fPos = (data138->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data139 = data;
HXDLIN(1526)									data139->fPos = (data139->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data140 = data;
HXDLIN(1526)									data140->fPos = (data140->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data141 = data;
HXDLIN(1526)									data141->fPos = (data141->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data142 = data;
HXDLIN(1526)									data142->oPos = (data142->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data143 = data;
HXDLIN(1526)									data143->fPos = (data143->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data144 = data;
HXDLIN(1526)									data144->fPos = (data144->fPos + 5);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data145 = data;
HXDLIN(1526)									data145->oPos = (data145->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data146 = data;
HXDLIN(1526)									data146->oPos = (data146->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data147 = data;
HXDLIN(1526)									data147->oPos = (data147->oPos + 2);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data148 = data;
HXDLIN(1526)									data148->bPos = (data148->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data149 = data;
HXDLIN(1526)									data149->oPos = (data149->oPos + 4);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data150 = data;
HXDLIN(1526)									data150->iiPos = (data150->iiPos + 2);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data151 = data;
HXDLIN(1526)									data151->ffPos = (data151->ffPos + 1);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data152 = data;
HXDLIN(1526)									data152->fPos = (data152->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data153 = data;
HXDLIN(1526)									data153->oPos = (data153->oPos + 4);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data154 = data;
HXDLIN(1526)									data154->iPos = (data154->iPos + 1);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data155 = data;
HXDLIN(1526)									data155->fPos = (data155->fPos + 2);
HXDLIN(1526)									 ::openfl::display::_internal::DrawCommandReader data156 = data;
HXDLIN(1526)									data156->bPos = (data156->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data157 = data;
HXDLIN(1526)									data157->fPos = (data157->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data158 = data;
HXDLIN(1526)									data158->fPos = (data158->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data159 = data;
HXDLIN(1526)									data159->oPos = (data159->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1526)									 ::openfl::display::_internal::DrawCommandReader data160 = data;
HXDLIN(1526)									data160->oPos = (data160->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1526)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1526)							 ::openfl::display::_internal::DrawCommandReader c4 = data;
HXLINE(1527)							::openfl::display::_internal::CairoGraphics_obj::cairo->rectangle((c4->buffer->f->__get(c4->fPos) - ( (Float)(offsetX) )),(c4->buffer->f->__get((c4->fPos + 1)) - ( (Float)(offsetY) )),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)));
            						}
            						break;
            						case (int)10: {
HXLINE(1530)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data161 = data;
HXDLIN(1530)									data161->oPos = (data161->oPos + 2);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data162 = data;
HXDLIN(1530)									data162->bPos = (data162->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data163 = data;
HXDLIN(1530)									data163->iPos = (data163->iPos + 1);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data164 = data;
HXDLIN(1530)									data164->fPos = (data164->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data165 = data;
HXDLIN(1530)									data165->oPos = (data165->oPos + 4);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data166 = data;
HXDLIN(1530)									data166->iiPos = (data166->iiPos + 2);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data167 = data;
HXDLIN(1530)									data167->ffPos = (data167->ffPos + 1);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data168 = data;
HXDLIN(1530)									data168->fPos = (data168->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data169 = data;
HXDLIN(1530)									data169->oPos = (data169->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data170 = data;
HXDLIN(1530)									data170->fPos = (data170->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data171 = data;
HXDLIN(1530)									data171->fPos = (data171->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data172 = data;
HXDLIN(1530)									data172->fPos = (data172->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data173 = data;
HXDLIN(1530)									data173->fPos = (data173->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data174 = data;
HXDLIN(1530)									data174->oPos = (data174->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data175 = data;
HXDLIN(1530)									data175->fPos = (data175->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data176 = data;
HXDLIN(1530)									data176->fPos = (data176->fPos + 5);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data177 = data;
HXDLIN(1530)									data177->oPos = (data177->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data178 = data;
HXDLIN(1530)									data178->oPos = (data178->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data179 = data;
HXDLIN(1530)									data179->oPos = (data179->oPos + 2);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data180 = data;
HXDLIN(1530)									data180->bPos = (data180->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data181 = data;
HXDLIN(1530)									data181->oPos = (data181->oPos + 4);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data182 = data;
HXDLIN(1530)									data182->iiPos = (data182->iiPos + 2);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data183 = data;
HXDLIN(1530)									data183->ffPos = (data183->ffPos + 1);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data184 = data;
HXDLIN(1530)									data184->fPos = (data184->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data185 = data;
HXDLIN(1530)									data185->oPos = (data185->oPos + 4);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data186 = data;
HXDLIN(1530)									data186->iPos = (data186->iPos + 1);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data187 = data;
HXDLIN(1530)									data187->fPos = (data187->fPos + 2);
HXDLIN(1530)									 ::openfl::display::_internal::DrawCommandReader data188 = data;
HXDLIN(1530)									data188->bPos = (data188->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data189 = data;
HXDLIN(1530)									data189->fPos = (data189->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data190 = data;
HXDLIN(1530)									data190->fPos = (data190->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data191 = data;
HXDLIN(1530)									data191->oPos = (data191->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1530)									 ::openfl::display::_internal::DrawCommandReader data192 = data;
HXDLIN(1530)									data192->oPos = (data192->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1530)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1530)							 ::openfl::display::_internal::DrawCommandReader c5 = data;
HXLINE(1531)							::openfl::display::_internal::CairoGraphics_obj::drawRoundRect((c5->buffer->f->__get(c5->fPos) - ( (Float)(offsetX) )),(c5->buffer->f->__get((c5->fPos + 1)) - ( (Float)(offsetY) )),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)),c5->buffer->f->__get((c5->fPos + 4)),c5->buffer->o->__get(c5->oPos));
            						}
            						break;
            						case (int)17: {
HXLINE(1534)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data193 = data;
HXDLIN(1534)									data193->oPos = (data193->oPos + 2);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data194 = data;
HXDLIN(1534)									data194->bPos = (data194->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data195 = data;
HXDLIN(1534)									data195->iPos = (data195->iPos + 1);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data196 = data;
HXDLIN(1534)									data196->fPos = (data196->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data197 = data;
HXDLIN(1534)									data197->oPos = (data197->oPos + 4);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data198 = data;
HXDLIN(1534)									data198->iiPos = (data198->iiPos + 2);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data199 = data;
HXDLIN(1534)									data199->ffPos = (data199->ffPos + 1);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data200 = data;
HXDLIN(1534)									data200->fPos = (data200->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data201 = data;
HXDLIN(1534)									data201->oPos = (data201->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data202 = data;
HXDLIN(1534)									data202->fPos = (data202->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data203 = data;
HXDLIN(1534)									data203->fPos = (data203->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data204 = data;
HXDLIN(1534)									data204->fPos = (data204->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data205 = data;
HXDLIN(1534)									data205->fPos = (data205->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data206 = data;
HXDLIN(1534)									data206->oPos = (data206->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data207 = data;
HXDLIN(1534)									data207->fPos = (data207->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data208 = data;
HXDLIN(1534)									data208->fPos = (data208->fPos + 5);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data209 = data;
HXDLIN(1534)									data209->oPos = (data209->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data210 = data;
HXDLIN(1534)									data210->oPos = (data210->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data211 = data;
HXDLIN(1534)									data211->oPos = (data211->oPos + 2);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data212 = data;
HXDLIN(1534)									data212->bPos = (data212->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data213 = data;
HXDLIN(1534)									data213->oPos = (data213->oPos + 4);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data214 = data;
HXDLIN(1534)									data214->iiPos = (data214->iiPos + 2);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data215 = data;
HXDLIN(1534)									data215->ffPos = (data215->ffPos + 1);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data216 = data;
HXDLIN(1534)									data216->fPos = (data216->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data217 = data;
HXDLIN(1534)									data217->oPos = (data217->oPos + 4);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data218 = data;
HXDLIN(1534)									data218->iPos = (data218->iPos + 1);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data219 = data;
HXDLIN(1534)									data219->fPos = (data219->fPos + 2);
HXDLIN(1534)									 ::openfl::display::_internal::DrawCommandReader data220 = data;
HXDLIN(1534)									data220->bPos = (data220->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data221 = data;
HXDLIN(1534)									data221->fPos = (data221->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data222 = data;
HXDLIN(1534)									data222->fPos = (data222->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data223 = data;
HXDLIN(1534)									data223->oPos = (data223->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1534)									 ::openfl::display::_internal::DrawCommandReader data224 = data;
HXDLIN(1534)									data224->oPos = (data224->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1534)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1534)							 ::openfl::display::_internal::DrawCommandReader c6 = data;
HXLINE(1535)							::openfl::display::_internal::CairoGraphics_obj::cairo->lineTo((c6->buffer->f->__get(c6->fPos) - ( (Float)(offsetX) )),(c6->buffer->f->__get((c6->fPos + 1)) - ( (Float)(offsetY) )));
HXLINE(1536)							positionX = c6->buffer->f->__get(c6->fPos);
HXLINE(1537)							positionY = c6->buffer->f->__get((c6->fPos + 1));
            						}
            						break;
            						case (int)18: {
HXLINE(1540)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data225 = data;
HXDLIN(1540)									data225->oPos = (data225->oPos + 2);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data226 = data;
HXDLIN(1540)									data226->bPos = (data226->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data227 = data;
HXDLIN(1540)									data227->iPos = (data227->iPos + 1);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data228 = data;
HXDLIN(1540)									data228->fPos = (data228->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data229 = data;
HXDLIN(1540)									data229->oPos = (data229->oPos + 4);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data230 = data;
HXDLIN(1540)									data230->iiPos = (data230->iiPos + 2);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data231 = data;
HXDLIN(1540)									data231->ffPos = (data231->ffPos + 1);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data232 = data;
HXDLIN(1540)									data232->fPos = (data232->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data233 = data;
HXDLIN(1540)									data233->oPos = (data233->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data234 = data;
HXDLIN(1540)									data234->fPos = (data234->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data235 = data;
HXDLIN(1540)									data235->fPos = (data235->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data236 = data;
HXDLIN(1540)									data236->fPos = (data236->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data237 = data;
HXDLIN(1540)									data237->fPos = (data237->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data238 = data;
HXDLIN(1540)									data238->oPos = (data238->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data239 = data;
HXDLIN(1540)									data239->fPos = (data239->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data240 = data;
HXDLIN(1540)									data240->fPos = (data240->fPos + 5);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data241 = data;
HXDLIN(1540)									data241->oPos = (data241->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data242 = data;
HXDLIN(1540)									data242->oPos = (data242->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data243 = data;
HXDLIN(1540)									data243->oPos = (data243->oPos + 2);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data244 = data;
HXDLIN(1540)									data244->bPos = (data244->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data245 = data;
HXDLIN(1540)									data245->oPos = (data245->oPos + 4);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data246 = data;
HXDLIN(1540)									data246->iiPos = (data246->iiPos + 2);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data247 = data;
HXDLIN(1540)									data247->ffPos = (data247->ffPos + 1);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data248 = data;
HXDLIN(1540)									data248->fPos = (data248->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data249 = data;
HXDLIN(1540)									data249->oPos = (data249->oPos + 4);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data250 = data;
HXDLIN(1540)									data250->iPos = (data250->iPos + 1);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data251 = data;
HXDLIN(1540)									data251->fPos = (data251->fPos + 2);
HXDLIN(1540)									 ::openfl::display::_internal::DrawCommandReader data252 = data;
HXDLIN(1540)									data252->bPos = (data252->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data253 = data;
HXDLIN(1540)									data253->fPos = (data253->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data254 = data;
HXDLIN(1540)									data254->fPos = (data254->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data255 = data;
HXDLIN(1540)									data255->oPos = (data255->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1540)									 ::openfl::display::_internal::DrawCommandReader data256 = data;
HXDLIN(1540)									data256->oPos = (data256->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1540)							data->prev = ::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1540)							 ::openfl::display::_internal::DrawCommandReader c7 = data;
HXLINE(1541)							::openfl::display::_internal::CairoGraphics_obj::cairo->moveTo((c7->buffer->f->__get(c7->fPos) - ( (Float)(offsetX) )),(c7->buffer->f->__get((c7->fPos + 1)) - ( (Float)(offsetY) )));
HXLINE(1542)							positionX = c7->buffer->f->__get(c7->fPos);
HXLINE(1543)							positionY = c7->buffer->f->__get((c7->fPos + 1));
            						}
            						break;
            						default:{
HXLINE(1546)							switch((int)(data->prev->_hx_getIndex())){
            								case (int)0: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data257 = data;
HXDLIN(1546)									data257->oPos = (data257->oPos + 2);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data258 = data;
HXDLIN(1546)									data258->bPos = (data258->bPos + 2);
            								}
            								break;
            								case (int)1: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data259 = data;
HXDLIN(1546)									data259->iPos = (data259->iPos + 1);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data260 = data;
HXDLIN(1546)									data260->fPos = (data260->fPos + 1);
            								}
            								break;
            								case (int)2: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data261 = data;
HXDLIN(1546)									data261->oPos = (data261->oPos + 4);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data262 = data;
HXDLIN(1546)									data262->iiPos = (data262->iiPos + 2);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data263 = data;
HXDLIN(1546)									data263->ffPos = (data263->ffPos + 1);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data264 = data;
HXDLIN(1546)									data264->fPos = (data264->fPos + 1);
            								}
            								break;
            								case (int)3: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data265 = data;
HXDLIN(1546)									data265->oPos = (data265->oPos + 1);
            								}
            								break;
            								case (int)4: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data266 = data;
HXDLIN(1546)									data266->fPos = (data266->fPos + 6);
            								}
            								break;
            								case (int)5: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data267 = data;
HXDLIN(1546)									data267->fPos = (data267->fPos + 4);
            								}
            								break;
            								case (int)6: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data268 = data;
HXDLIN(1546)									data268->fPos = (data268->fPos + 3);
            								}
            								break;
            								case (int)7: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data269 = data;
HXDLIN(1546)									data269->fPos = (data269->fPos + 4);
            								}
            								break;
            								case (int)8: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data270 = data;
HXDLIN(1546)									data270->oPos = (data270->oPos + 3);
            								}
            								break;
            								case (int)9: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data271 = data;
HXDLIN(1546)									data271->fPos = (data271->fPos + 4);
            								}
            								break;
            								case (int)10: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data272 = data;
HXDLIN(1546)									data272->fPos = (data272->fPos + 5);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data273 = data;
HXDLIN(1546)									data273->oPos = (data273->oPos + 1);
            								}
            								break;
            								case (int)12: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data274 = data;
HXDLIN(1546)									data274->oPos = (data274->oPos + 4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data275 = data;
HXDLIN(1546)									data275->oPos = (data275->oPos + 2);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data276 = data;
HXDLIN(1546)									data276->bPos = (data276->bPos + 2);
            								}
            								break;
            								case (int)15: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data277 = data;
HXDLIN(1546)									data277->oPos = (data277->oPos + 4);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data278 = data;
HXDLIN(1546)									data278->iiPos = (data278->iiPos + 2);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data279 = data;
HXDLIN(1546)									data279->ffPos = (data279->ffPos + 1);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data280 = data;
HXDLIN(1546)									data280->fPos = (data280->fPos + 1);
            								}
            								break;
            								case (int)16: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data281 = data;
HXDLIN(1546)									data281->oPos = (data281->oPos + 4);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data282 = data;
HXDLIN(1546)									data282->iPos = (data282->iPos + 1);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data283 = data;
HXDLIN(1546)									data283->fPos = (data283->fPos + 2);
HXDLIN(1546)									 ::openfl::display::_internal::DrawCommandReader data284 = data;
HXDLIN(1546)									data284->bPos = (data284->bPos + 1);
            								}
            								break;
            								case (int)17: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data285 = data;
HXDLIN(1546)									data285->fPos = (data285->fPos + 2);
            								}
            								break;
            								case (int)18: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data286 = data;
HXDLIN(1546)									data286->fPos = (data286->fPos + 2);
            								}
            								break;
            								case (int)19: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data287 = data;
HXDLIN(1546)									data287->oPos = (data287->oPos + 1);
            								}
            								break;
            								case (int)20: {
HXLINE(1546)									 ::openfl::display::_internal::DrawCommandReader data288 = data;
HXDLIN(1546)									data288->oPos = (data288->oPos + 1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1546)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1550)			data->destroy();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,renderMask,(void))


CairoGraphics_obj::CairoGraphics_obj()
{
}

bool CairoGraphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { outValue = ( SIN45 ); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { outValue = ( TAN22 ); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { outValue = ( cairo ); return true; }
		if (HX_FIELD_EQ(inName,"isCCW") ) { outValue = isCCW_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { outValue = ( bounds ); return true; }
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { outValue = ( hasFill ); return true; }
		if (HX_FIELD_EQ(inName,"endFill") ) { outValue = endFill_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hitTest") ) { outValue = hitTest_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { outValue = ( graphics ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { outValue = ( hasStroke ); return true; }
		if (HX_FIELD_EQ(inName,"closePath") ) { outValue = closePath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"endStroke") ) { outValue = endStroke_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { outValue = ( bitmapFill ); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { outValue = ( hitTesting ); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { outValue = ( worldAlpha ); return true; }
		if (HX_FIELD_EQ(inName,"renderMask") ) { outValue = renderMask_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { outValue = ( fillPattern ); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { outValue = ( tempMatrix3 ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { outValue = ( bitmapRepeat ); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { outValue = ( fillCommands ); return true; }
		if (HX_FIELD_EQ(inName,"normalizeUVT") ) { outValue = normalizeUVT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"playCommands") ) { outValue = playCommands_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { outValue = ( pendingMatrix ); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { outValue = ( strokePattern ); return true; }
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { outValue = drawRoundRect_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { outValue = ( allowSmoothing ); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { outValue = ( strokeCommands ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"quadraticCurveTo") ) { outValue = quadraticCurveTo_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { outValue = ( fillPatternMatrix ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createImagePattern") ) { outValue = createImagePattern_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { outValue = ( inversePendingMatrix ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createGradientPattern") ) { outValue = createGradientPattern_dyn(); return true; }
	}
	return false;
}

bool CairoGraphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { SIN45=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { TAN22=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { cairo=ioValue.Cast<  ::lime::graphics::cairo::Cairo >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { bounds=ioValue.Cast<  ::openfl::geom::Rectangle >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { hasFill=ioValue.Cast< bool >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=ioValue.Cast<  ::openfl::display::Graphics >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { hasStroke=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { bitmapFill=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { hitTesting=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { worldAlpha=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { fillPattern=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { tempMatrix3=ioValue.Cast<  ::lime::math::Matrix3 >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { bitmapRepeat=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { fillCommands=ioValue.Cast<  ::openfl::display::_internal::DrawCommandBuffer >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { pendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { strokePattern=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { allowSmoothing=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { strokeCommands=ioValue.Cast<  ::openfl::display::_internal::DrawCommandBuffer >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { fillPatternMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { inversePendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CairoGraphics_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo CairoGraphics_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &CairoGraphics_obj::SIN45,HX_("SIN45",79,16,be,fa)},
	{::hx::fsFloat,(void *) &CairoGraphics_obj::TAN22,HX_("TAN22",41,f4,da,88)},
	{::hx::fsBool,(void *) &CairoGraphics_obj::allowSmoothing,HX_("allowSmoothing",ab,b7,66,68)},
	{::hx::fsObject /*  ::openfl::display::BitmapData */ ,(void *) &CairoGraphics_obj::bitmapFill,HX_("bitmapFill",12,2e,19,35)},
	{::hx::fsBool,(void *) &CairoGraphics_obj::bitmapRepeat,HX_("bitmapRepeat",aa,38,9c,11)},
	{::hx::fsObject /*  ::openfl::geom::Rectangle */ ,(void *) &CairoGraphics_obj::bounds,HX_("bounds",75,86,1d,66)},
	{::hx::fsObject /*  ::lime::graphics::cairo::Cairo */ ,(void *) &CairoGraphics_obj::cairo,HX_("cairo",88,30,19,41)},
	{::hx::fsObject /*  ::openfl::display::_internal::DrawCommandBuffer */ ,(void *) &CairoGraphics_obj::fillCommands,HX_("fillCommands",6b,f6,c9,c2)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &CairoGraphics_obj::fillPattern,HX_("fillPattern",0d,86,12,35)},
	{::hx::fsObject /*  ::openfl::geom::Matrix */ ,(void *) &CairoGraphics_obj::fillPatternMatrix,HX_("fillPatternMatrix",2e,b8,ae,97)},
	{::hx::fsObject /*  ::openfl::display::Graphics */ ,(void *) &CairoGraphics_obj::graphics,HX_("graphics",cb,f8,67,12)},
	{::hx::fsBool,(void *) &CairoGraphics_obj::hasFill,HX_("hasFill",fd,ee,ff,12)},
	{::hx::fsBool,(void *) &CairoGraphics_obj::hasStroke,HX_("hasStroke",b2,66,1d,52)},
	{::hx::fsBool,(void *) &CairoGraphics_obj::hitTesting,HX_("hitTesting",bd,65,48,19)},
	{::hx::fsObject /*  ::openfl::geom::Matrix */ ,(void *) &CairoGraphics_obj::inversePendingMatrix,HX_("inversePendingMatrix",28,14,8c,bb)},
	{::hx::fsObject /*  ::openfl::geom::Matrix */ ,(void *) &CairoGraphics_obj::pendingMatrix,HX_("pendingMatrix",f8,9d,96,b5)},
	{::hx::fsObject /*  ::openfl::display::_internal::DrawCommandBuffer */ ,(void *) &CairoGraphics_obj::strokeCommands,HX_("strokeCommands",a0,98,2a,67)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &CairoGraphics_obj::strokePattern,HX_("strokePattern",78,e1,21,7e)},
	{::hx::fsObject /*  ::lime::math::Matrix3 */ ,(void *) &CairoGraphics_obj::tempMatrix3,HX_("tempMatrix3",1e,f2,bd,79)},
	{::hx::fsFloat,(void *) &CairoGraphics_obj::worldAlpha,HX_("worldAlpha",ac,57,43,8d)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void CairoGraphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CairoGraphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#endif

::hx::Class CairoGraphics_obj::__mClass;

static ::String CairoGraphics_obj_sStaticFields[] = {
	HX_("SIN45",79,16,be,fa),
	HX_("TAN22",41,f4,da,88),
	HX_("allowSmoothing",ab,b7,66,68),
	HX_("bitmapFill",12,2e,19,35),
	HX_("bitmapRepeat",aa,38,9c,11),
	HX_("bounds",75,86,1d,66),
	HX_("cairo",88,30,19,41),
	HX_("fillCommands",6b,f6,c9,c2),
	HX_("fillPattern",0d,86,12,35),
	HX_("fillPatternMatrix",2e,b8,ae,97),
	HX_("graphics",cb,f8,67,12),
	HX_("hasFill",fd,ee,ff,12),
	HX_("hasStroke",b2,66,1d,52),
	HX_("hitTesting",bd,65,48,19),
	HX_("inversePendingMatrix",28,14,8c,bb),
	HX_("pendingMatrix",f8,9d,96,b5),
	HX_("strokeCommands",a0,98,2a,67),
	HX_("strokePattern",78,e1,21,7e),
	HX_("tempMatrix3",1e,f2,bd,79),
	HX_("worldAlpha",ac,57,43,8d),
	HX_("closePath",7d,65,20,14),
	HX_("createGradientPattern",a4,ee,44,f6),
	HX_("createImagePattern",51,bd,5d,fb),
	HX_("drawRoundRect",ee,c3,aa,e2),
	HX_("endFill",fe,87,e0,25),
	HX_("endStroke",f3,01,17,51),
	HX_("hitTest",45,60,7f,e2),
	HX_("isCCW",0d,84,49,c1),
	HX_("normalizeUVT",66,09,2f,47),
	HX_("playCommands",dc,ae,ee,49),
	HX_("quadraticCurveTo",12,48,c3,82),
	HX_("render",56,6b,29,05),
	HX_("renderMask",62,3b,60,e5),
	::String(null())
};

void CairoGraphics_obj::__register()
{
	CairoGraphics_obj _hx_dummy;
	CairoGraphics_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.display._internal.CairoGraphics",f7,a0,7f,ec);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CairoGraphics_obj::__GetStatic;
	__mClass->mSetStaticField = &CairoGraphics_obj::__SetStatic;
	__mClass->mMarkFunc = CairoGraphics_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CairoGraphics_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< CairoGraphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CairoGraphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CairoGraphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CairoGraphics_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CairoGraphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_37_boot)
HXDLIN(  37)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("obj",f7,8f,54,00), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:FieldDocComment",70,56,1b,20))))));
            	}
{
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_40_boot)
HXDLIN(  40)		SIN45 = ((Float)0.70710678118654752440084436210485);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a32397cfa230be0c_41_boot)
HXDLIN(  41)		TAN22 = ((Float)0.4142135623730950488016887242097);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_47_boot)
HXDLIN(  47)		fillCommands =  ::openfl::display::_internal::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_56_boot)
HXDLIN(  56)		strokeCommands =  ::openfl::display::_internal::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a32397cfa230be0c_58_boot)
HXDLIN(  58)		tempMatrix3 =  ::lime::math::Matrix3_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _internal
